<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Lwt&#39;s Blog</title>
  
  
  <link href="https://www.lwt-server.cn/atom.xml" rel="self"/>
  
  <link href="https://www.lwt-server.cn/"/>
  <updated>2023-09-01T10:03:50.190Z</updated>
  <id>https://www.lwt-server.cn/</id>
  
  <author>
    <name>Lwt</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>LeetCode题解——27.移除元素</title>
    <link href="https://www.lwt-server.cn/2023/09/01/LeetCode_27/"/>
    <id>https://www.lwt-server.cn/2023/09/01/LeetCode_27/</id>
    <published>2023-09-01T09:55:37.000Z</published>
    <updated>2023-09-01T10:03:50.190Z</updated>
    
    <content type="html"><![CDATA[<h1 id="leetcode题解">LeetCode题解</h1><h2 id="移除元素">移除元素</h2><h3 id="题目预览">题目预览：</h3><p>给你一个数组 <span class="math inline">\(nums\)</span> 和一个值 <spanclass="math inline">\(val\)</span>，你需要 <b>原地</b> 移除所有数值等于<span class="math inline">\(val\)</span>的元素，并返回移除后数组的新长度。</p><p>不要使用额外的数组空间，你必须仅使用 <spanclass="math inline">\(O(1)\)</span> 额外空间并 原地 修改输入数组。</p><p>元素的顺序可以改变。你不需要考虑数组中超出新长度后面的元素。</p><p>说明:</p><p>为什么返回数值是整数，但输出的答案是数组呢?</p><p>请注意，输入数组是以「引用」方式传递的，这意味着在函数里修改输入数组对于调用者是可见的。</p><p>你可以想象内部操作如下:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">// nums 是以“引用”方式传递的。也就是说，不对实参作任何拷贝</span><br><span class="line">int len = removeElement(nums, val);</span><br><span class="line"></span><br><span class="line">// 在函数里修改输入数组对于调用者是可见的。</span><br><span class="line">// 根据你的函数返回的长度, 它会打印出数组中 该长度范围内 的所有元素。</span><br><span class="line">for (int i = 0; i &lt; len; i++) &#123;</span><br><span class="line">    print(nums[i]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="示例-1">示例 1：</h4><blockquote><p><b>输入：</b>nums = [3,2,2,3], val = 3<br /><b>输出：</b>2, nums = [2,2]<br /><b>解释：</b>函数应该返回新的长度 2, 并且 nums 中的前两个元素均为2。你不需要考虑数组中超出新长度后面的元素。例如，函数返回的新长度为 2，而 nums = [2,2,3,3] 或 nums = [2,2,0,0]，也会被视作正确答案。</p></blockquote><h3 id="示例-2">示例 2：</h3><blockquote><p><b>输入：</b>nums = [0,1,2,2,3,0,4,2], val = 2<br /><b>输出：</b>5, nums = [0,1,4,0,3]<br /><b>解释：</b>函数应该返回新的长度 5, 并且 nums 中的前五个元素为 0, 1, 3,0,4。注意这五个元素可为任意顺序。你不需要考虑数组中超出新长度后面的元素。</p></blockquote><p>提示：</p><ul><li><p><span class="math inline">\(0 &lt;= nums.length &lt;=100\)</span></p></li><li><p><span class="math inline">\(0 &lt;= nums[i] &lt;=50\)</span></p></li><li><p><span class="math inline">\(0 &lt;= val &lt;=100\)</span></p></li></ul><hr /><p>以下是题解：</p><h3 id="解题思路">解题思路:</h3><p>本题与前一题极其相似，思路几乎一模一样，详细请参考前文<ahref="/2023/09/01/LeetCode_26/">LeetCode_26——删除有序数组中的重复项</a></p><p>代码如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">removeElement</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; nums, <span class="type">int</span> val)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> Len = nums.<span class="built_in">size</span>();</span><br><span class="line">        <span class="type">int</span> ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; Len;i++)</span><br><span class="line">            <span class="keyword">if</span> (nums[i] != val)</span><br><span class="line">                nums[ans++] = nums[i];</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h4 id="结果">结果</h4><p><a href="https://imgse.com/i/pP0LRmR"><imgsrc="https://s1.ax1x.com/2023/09/01/pP0LRmR.png"alt="pP0LRmR.png" /></a></p><div style="text-align:right;"><p>本篇博客撰写于2023/9/1 17:55:37</p>]]></content>
    
    
    <summary type="html">移除元素</summary>
    
    
    
    <category term="程序" scheme="https://www.lwt-server.cn/categories/%E7%A8%8B%E5%BA%8F/"/>
    
    
    <category term="LeetCode题解" scheme="https://www.lwt-server.cn/tags/LeetCode%E9%A2%98%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode题解——26.删除有序数组中的重复项</title>
    <link href="https://www.lwt-server.cn/2023/09/01/LeetCode_26/"/>
    <id>https://www.lwt-server.cn/2023/09/01/LeetCode_26/</id>
    <published>2023-09-01T08:58:25.000Z</published>
    <updated>2023-09-01T09:09:40.290Z</updated>
    
    <content type="html"><![CDATA[<h1 id="leetcode题解">LeetCode题解</h1><h2 id="删除有序数组中的重复项">删除有序数组中的重复项</h2><h3 id="题目预览">题目预览：</h3><p>给你一个 升序排列 的数组 <span class="math inline">\(nums\)</span>，请你 <b>原地</b> 删除重复出现的元素，使每个元素 <b>只出现一次</b>，返回删除后数组的新长度。元素的 <b>相对顺序</b> 应该保持 <b>一致</b>。然后返回 <span class="math inline">\(nums\)</span>中唯一元素的个数。</p><p>考虑 <span class="math inline">\(nums\)</span> 的唯一元素的数量为<span class="math inline">\(k\)</span>，你需要做以下事情确保你的题解可以被通过：</p><p>更改数组 <span class="math inline">\(nums\)</span> ，使 <spanclass="math inline">\(nums\)</span> 的前 <spanclass="math inline">\(k\)</span> 个元素包含唯一元素，并按照它们最初在<span class="math inline">\(nums\)</span> 中出现的顺序排列。<spanclass="math inline">\(nums\)</span> 的其余元素与 <spanclass="math inline">\(nums\)</span> 的大小不重要。 返回 <spanclass="math inline">\(k\)</span> 。</p><p><b>判题标准:</b></p><p>系统会用下面的代码来测试你的题解:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">int[] nums = [...]; // 输入数组</span><br><span class="line">int[] expectedNums = [...]; // 长度正确的期望答案</span><br><span class="line"></span><br><span class="line">int k = removeDuplicates(nums); // 调用</span><br><span class="line"></span><br><span class="line">assert k == expectedNums.length;</span><br><span class="line">for (int i = 0; i &lt; k; i++) &#123;</span><br><span class="line">    assert nums[i] == expectedNums[i];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果所有断言都通过，那么您的题解将被 <b>通过</b>。</p><h4 id="示例-1">示例 1：</h4><blockquote><p><b>输入：</b>nums = [1,1,2]<br /><b>输出：</b>2, nums = [1,2,_]<br /><b>解释：</b>函数应该返回新的长度 2 ，并且原数组 nums的前两个元素被修改为 1, 2 。不需要考虑数组中超出新长度后面的元素。</p></blockquote><h4 id="示例-2">示例 2：</h4><blockquote><p><b>输入：</b>nums = [0,0,1,1,1,2,2,3,3,4]<br /><b>输出：</b>5, nums = [0,1,2,3,4]<br /><b>解释：</b>函数应该返回新的长度 5 ， 并且原数组 nums的前五个元素被修改为 0, 1, 2, 3, 4。不需要考虑数组中超出新长度后面的元素。</p></blockquote><p>提示：</p><ul><li><span class="math inline">\(1 &lt;= nums.length &lt;= 3 *10^4\)</span></li><li><span class="math inline">\(-10^4 &lt;= nums[i] &lt;=10^4\)</span></li><li><span class="math inline">\(nums\)</span> 已按 <b>升序</b> 排列</li></ul><hr /><p>以下是题解：</p><h3 id="解题思路">解题思路:</h3><p>使用两个指针，对于一个含有重复字符的容器，我们可以很容易得出结论：若<span class="math inline">\(nums&#39;\)</span> 为去重后的容器，那么对于<span class="math inline">\(nums&#39;\)</span>中的一切有效元素(指下标小于有效长度的元素)的下标 <spanclass="math inline">\(tag&#39;\)</span> 与原容器中有效元素的下标 <spanclass="math inline">\(tag\)</span>，我们可以得出 <spanclass="math inline">\(tag&gt;=tag&#39;\)</span></p><p>于是我们可以遍历原容器的每一个元素，当且仅当 <spanclass="math inline">\(nums[i-1]!=nums[i]\)</span> 时，我们才将其赋值给<span class="math inline">\(nums[ans]\)</span> ，并让 <spanclass="math inline">\(ans+1\)</span></p><p>代码如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">removeDuplicates</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; nums)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> Len = nums.<span class="built_in">size</span>();</span><br><span class="line">        <span class="type">int</span> ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; Len;i++)</span><br><span class="line">            <span class="keyword">if</span> (i==<span class="number">0</span>||nums[i] != nums[i - <span class="number">1</span>])</span><br><span class="line">                nums[ans++] = nums[i];</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h4 id="结果">结果</h4><p><a href="https://imgse.com/i/pP0HCeP"><imgsrc="https://s1.ax1x.com/2023/09/01/pP0HCeP.png"alt="pP0HCeP.png" /></a></p><div style="text-align:right;"><p>本篇博客撰写于2023/9/1 16:58:25</p>]]></content>
    
    
    <summary type="html">删除有序数组中的重复项</summary>
    
    
    
    <category term="程序" scheme="https://www.lwt-server.cn/categories/%E7%A8%8B%E5%BA%8F/"/>
    
    
    <category term="LeetCode题解" scheme="https://www.lwt-server.cn/tags/LeetCode%E9%A2%98%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode题解——25.K 个一组翻转链表</title>
    <link href="https://www.lwt-server.cn/2023/09/01/LeetCode_25/"/>
    <id>https://www.lwt-server.cn/2023/09/01/LeetCode_25/</id>
    <published>2023-09-01T06:35:42.000Z</published>
    <updated>2023-09-01T06:55:24.814Z</updated>
    
    <content type="html"><![CDATA[<h1 id="leetcode题解">LeetCode题解</h1><h2 id="k-个一组翻转链表">K 个一组翻转链表</h2><h3 id="题目预览">题目预览：</h3><p>给你链表的头节点 <span class="math inline">\(head\)</span> ，每 <spanclass="math inline">\(k\)</span>个节点一组进行翻转，请你返回修改后的链表。</p><p><span class="math inline">\(k\)</span>是一个正整数，它的值小于或等于链表的长度。如果节点总数不是 <spanclass="math inline">\(k\)</span>的整数倍，那么请将最后剩余的节点保持原有顺序。</p><p>你不能只是单纯的改变节点内部的值，而是需要实际进行节点交换。</p><h4 id="示例-1">示例 1：</h4><p><a href="https://imgse.com/i/pP0WGz6"><imgsrc="https://s1.ax1x.com/2023/09/01/pP0WGz6.jpg"alt="pP0WGz6.jpg" /></a></p><p><b>输入：</b>head = [1,2,3,4,5], k = 2 <b>输出：</b>[2,1,4,3,5]</p><h4 id="示例-2">示例 2：</h4><p><a href="https://imgse.com/i/pP0WtsO"><imgsrc="https://s1.ax1x.com/2023/09/01/pP0WtsO.jpg"alt="pP0WtsO.jpg" /></a></p><p><b>输入：</b>head = [1,2,3,4,5], k = 3 <b>输出：</b>[3,2,1,4,5]</p><p>提示：</p><ul><li><p>链表中的节点数目为 <spanclass="math inline">\(n\)</span></p></li><li><p><span class="math inline">\(1 &lt;= k &lt;= n &lt;=5000\)</span></p></li><li><p><span class="math inline">\(0 &lt;= Node.val &lt;=1000\)</span></p></li></ul><p><b>进阶：</b>你可以设计一个只用 <spanclass="math inline">\(O(1)\)</span> 额外内存空间的算法解决此问题吗？</p><hr /><p>以下是题解：</p><h3 id="解题思路">解题思路:</h3><p>看到翻转，首先考虑到递归。而写递归的要点便是<b>理清递归条件：</b></p><p>自调用：</p><ol type="1"><li>当 <span class="math inline">\(num&gt;1\)</span> 时，令 <spanclass="math inline">\(num-1\)</span>，<spanclass="math inline">\(node=node-&gt;next\)</span> 并自调用</li></ol><p>回溯： 1. 当 <span class="math inline">\(num=1\)</span> 时，令 <spanclass="math inline">\(front\)</span>节点指向当前节点，尾节点指向下一节点。</p><ol start="2" type="1"><li><p>当 <span class="math inline">\(num=k\)</span>时，令下一节点指向当前节点，当前节点指向尾节点。</p></li><li><p>其他情况时，令下一节点指向当前节点</p></li></ol><p>代码如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="type">int</span> N = <span class="number">0</span>;</span><br><span class="line">    ListNode* frontNode = <span class="literal">nullptr</span>;</span><br><span class="line">    ListNode* lastNode = <span class="literal">nullptr</span>;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">traceBack</span><span class="params">(<span class="type">int</span> num, ListNode* node)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (num &gt; <span class="number">1</span>)</span><br><span class="line">            <span class="built_in">traceBack</span>(num - <span class="number">1</span>, node-&gt;next);</span><br><span class="line">        <span class="keyword">if</span> (num == <span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            frontNode-&gt;next = node;</span><br><span class="line">            lastNode = node-&gt;next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (num == N)</span><br><span class="line">        &#123;</span><br><span class="line">            node-&gt;next-&gt;next = node;</span><br><span class="line">            node-&gt;next = lastNode;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            node-&gt;next-&gt;next = node;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function">ListNode* <span class="title">reverseKGroup</span><span class="params">(ListNode* head, <span class="type">int</span> k)</span> </span>&#123;</span><br><span class="line">        N = k;</span><br><span class="line">        frontNode = <span class="keyword">new</span> <span class="built_in">ListNode</span>(<span class="number">0</span>, head);</span><br><span class="line">        ListNode* ans = frontNode;</span><br><span class="line">        <span class="keyword">for</span> (; head != <span class="literal">nullptr</span>;)</span><br><span class="line">        &#123;</span><br><span class="line">            ListNode* tmp = head;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= k; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (tmp == <span class="literal">nullptr</span>)</span><br><span class="line">                    <span class="keyword">return</span> ans-&gt;next;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    tmp = tmp-&gt;next;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">traceBack</span>(k, head);</span><br><span class="line">            frontNode = head;</span><br><span class="line">            head = frontNode-&gt;next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h4 id="结果">结果</h4><p><a href="https://imgse.com/i/pP0W3J1"><imgsrc="https://s1.ax1x.com/2023/09/01/pP0W3J1.png"alt="pP0W3J1.png" /></a></p><div style="text-align:right;"><p>本篇博客撰写于2023/9/1 14:35:42</p>]]></content>
    
    
    <summary type="html">K 个一组翻转链表</summary>
    
    
    
    <category term="程序" scheme="https://www.lwt-server.cn/categories/%E7%A8%8B%E5%BA%8F/"/>
    
    
    <category term="LeetCode题解" scheme="https://www.lwt-server.cn/tags/LeetCode%E9%A2%98%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode题解——24.两两交换链表中的节点</title>
    <link href="https://www.lwt-server.cn/2023/09/01/LeetCode_24/"/>
    <id>https://www.lwt-server.cn/2023/09/01/LeetCode_24/</id>
    <published>2023-09-01T02:27:37.000Z</published>
    <updated>2023-09-01T02:35:35.509Z</updated>
    
    <content type="html"><![CDATA[<h1 id="leetcode题解">LeetCode题解</h1><h2 id="两两交换链表中的节点">两两交换链表中的节点</h2><h3 id="题目预览">题目预览：</h3><p>给你一个链表，两两交换其中相邻的节点，并返回交换后链表的头节点。你必须在不修改节点内部的值的情况下完成本题（即，只能进行节点交换）。</p><p><a href="https://imgse.com/i/pP0wfIO"><imgsrc="https://s1.ax1x.com/2023/09/01/pP0wfIO.jpg"alt="pP0wfIO.jpg" /></a></p><h4 id="示例-1">示例 1：</h4><blockquote><p><b>输入：</b>head = [1,2,3,4]<br /><b>输出：</b>[2,1,4,3]</p></blockquote><h4 id="示例-2">示例 2：</h4><blockquote><p><b>输入：</b>head = []<br /><b>输出：</b>[]</p></blockquote><h4 id="示例-3">示例 3：</h4><blockquote><p><b>输入：</b>head = [1]<br /><b>输出：</b>[1]</p></blockquote><p>提示：</p><ul><li><p>链表中节点的数目在范围 <span class="math inline">\([0,100]\)</span> 内</p></li><li><p><span class="math inline">\(0 &lt;= Node.val &lt;=100\)</span></p></li></ul><hr /><p>以下是题解：</p><h3 id="解题思路">解题思路:</h3><p>我们可以使用迭代的方法，定义三个指针 <spanclass="math inline">\(leftNode\)</span> , <spanclass="math inline">\(middleNode\)</span> , <spanclass="math inline">\(rightNode\)</span> 参考下图的流程进行交互。</p><p><a href="https://imgse.com/i/pP0wtrq"><imgsrc="https://s1.ax1x.com/2023/09/01/pP0wtrq.jpg"alt="pP0wtrq.jpg" /></a></p><p>代码如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">ListNode* <span class="title">swapPairs</span><span class="params">(ListNode* head)</span> </span>&#123;</span><br><span class="line">        ListNode* headNode =  <span class="keyword">new</span> <span class="built_in">ListNode</span>(<span class="number">0</span>,head);</span><br><span class="line">        ListNode* leftNode = headNode;</span><br><span class="line">        ListNode* middleNode = leftNode-&gt;next; </span><br><span class="line">        ListNode* rightNode = <span class="literal">nullptr</span>;</span><br><span class="line">        <span class="keyword">if</span>(middleNode!=<span class="literal">nullptr</span>)</span><br><span class="line">            rightNode = middleNode-&gt;next;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">return</span> headNode-&gt;next;</span><br><span class="line">        <span class="keyword">while</span>(rightNode)</span><br><span class="line">        &#123;</span><br><span class="line">            middleNode-&gt;next = rightNode-&gt;next;</span><br><span class="line">            leftNode-&gt;next = rightNode;</span><br><span class="line">            rightNode-&gt;next = middleNode;</span><br><span class="line">            <span class="keyword">if</span>(middleNode-&gt;next!=<span class="literal">nullptr</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                leftNode = middleNode;</span><br><span class="line">                middleNode = leftNode-&gt;next;</span><br><span class="line">                <span class="keyword">if</span>(middleNode!=<span class="literal">nullptr</span>)</span><br><span class="line">                    rightNode = middleNode-&gt;next;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    <span class="keyword">return</span> headNode-&gt;next;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="keyword">return</span> headNode-&gt;next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> headNode-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h4 id="结果">结果</h4><p><a href="https://imgse.com/i/pP0wcs1"><imgsrc="https://s1.ax1x.com/2023/09/01/pP0wcs1.png"alt="pP0wcs1.png" /></a></p><div style="text-align:right;"><p>本篇博客撰写于2023/9/1 10:27:37</p>]]></content>
    
    
    <summary type="html">两两交换链表中的节点</summary>
    
    
    
    <category term="程序" scheme="https://www.lwt-server.cn/categories/%E7%A8%8B%E5%BA%8F/"/>
    
    
    <category term="LeetCode题解" scheme="https://www.lwt-server.cn/tags/LeetCode%E9%A2%98%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode题解——2240.买钢笔和铅笔的方案数</title>
    <link href="https://www.lwt-server.cn/2023/09/01/LeetCode_2240/"/>
    <id>https://www.lwt-server.cn/2023/09/01/LeetCode_2240/</id>
    <published>2023-09-01T00:33:27.000Z</published>
    <updated>2023-09-01T00:41:20.871Z</updated>
    
    <content type="html"><![CDATA[<h1 id="leetcode题解">LeetCode题解</h1><h2 id="买钢笔和铅笔的方案数">买钢笔和铅笔的方案数</h2><h3 id="题目预览">题目预览：</h3><p>给你一个整数 <span class="math inline">\(total\)</span>，表示你拥有的总钱数。同时给你两个整数 <spanclass="math inline">\(cost1\)</span> 和 <spanclass="math inline">\(cost2\)</span>，分别表示一支钢笔和一支铅笔的价格。你可以花费你部分或者全部的钱，去买任意数目的两种笔。</p><p>请你返回购买钢笔和铅笔的 <b>不同方案数目</b> 。</p><h4 id="示例-1">示例 1：</h4><blockquote><p><b>输入：</b>total = 20, cost1 = 10, cost2 = 5<br /><b>输出：</b>9<br /><b>解释：</b>一支钢笔的价格为 10 ，一支铅笔的价格为 5 。<br />- 如果你买 0 支钢笔，那么你可以买 0 ，1 ，2 ，3 或者 4 支铅笔。<br />- 如果你买 1 支钢笔，那么你可以买 0 ，1 或者 2 支铅笔。<br />- 如果你买 2 支钢笔，那么你没法买任何铅笔。<br />所以买钢笔和铅笔的总方案数为 5 + 3 + 1 = 9 种。</p></blockquote><h4 id="示例-2">示例 2：</h4><blockquote><p><b>输入：</b>total = 5, cost1 = 10, cost2 = 10<br /><b>输出：</b>1<br /><b>解释：</b>钢笔和铅笔的价格都为 10，都比拥有的钱数多，所以你没法购买任何文具。所以只有 1 种方案：买 0支钢笔和 0 支铅笔。</p></blockquote><p>提示：</p><ul><li><span class="math inline">\(1 &lt;= total, cost1, cost2 &lt;=10^6\)</span></li></ul><hr /><p>以下是题解：</p><h3 id="解题思路">解题思路:</h3><p>刚看到这题，我还以为是背包问题，仔细一想才发现就是个简单的数学问题。我们可以通过一层循环体模拟买钢笔的数量，剩余钱除以铅笔钱数来计算得到<span class="math inline">\(ans\)</span></p><p>代码如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">long</span> <span class="type">long</span> <span class="title">waysToBuyPensPencils</span><span class="params">(<span class="type">int</span> total, <span class="type">int</span> cost1, <span class="type">int</span> cost2)</span> </span>&#123;</span><br><span class="line">        <span class="type">long</span> <span class="type">long</span> ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(; total&gt;=<span class="number">0</span> ;total -= cost1)</span><br><span class="line">            ans += total / cost2 + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h4 id="结果">结果</h4><p><a href="https://imgse.com/i/pP0NntH"><imgsrc="https://s1.ax1x.com/2023/09/01/pP0NntH.png"alt="pP0NntH.png" /></a></p><div style="text-align:right;"><p>本篇博客撰写于2023/9/1 08:33:27</p>]]></content>
    
    
    <summary type="html">买钢笔和铅笔的方案数</summary>
    
    
    
    <category term="程序" scheme="https://www.lwt-server.cn/categories/%E7%A8%8B%E5%BA%8F/"/>
    
    
    <category term="LeetCode题解" scheme="https://www.lwt-server.cn/tags/LeetCode%E9%A2%98%E8%A7%A3/"/>
    
    <category term="LeetCode每日一题" scheme="https://www.lwt-server.cn/tags/LeetCode%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode题解——23.合并 K 个升序链表</title>
    <link href="https://www.lwt-server.cn/2023/08/31/LeetCode_23/"/>
    <id>https://www.lwt-server.cn/2023/08/31/LeetCode_23/</id>
    <published>2023-08-31T12:40:59.000Z</published>
    <updated>2023-08-31T12:54:16.792Z</updated>
    
    <content type="html"><![CDATA[<h1 id="leetcode题解">LeetCode题解</h1><h2 id="合并-k-个升序链表">合并 K 个升序链表</h2><h3 id="题目预览">题目预览：</h3><p>给你一个链表数组，每个链表都已经按升序排列。</p><p>请你将所有链表合并到一个升序链表中，返回合并后的链表。</p><h4 id="示例-1">示例 1：</h4><blockquote><p><b>输入：</b>lists = [[1,4,5],[1,3,4],[2,6]]<br /><b>输出：</b>[1,1,2,3,4,4,5,6]<br /><b>解释：</b>链表数组如下：<br />[<br />1-&gt;4-&gt;5,<br />1-&gt;3-&gt;4,<br />2-&gt;6<br />]<br />将它们合并到一个有序链表中得到。<br />1-&gt;1-&gt;2-&gt;3-&gt;4-&gt;4-&gt;5-&gt;6</p></blockquote><h4 id="示例-2">示例 2：</h4><blockquote><p><b>输入：</b>lists = []<br /><b>输出：</b>[]</p></blockquote><h4 id="示例-3">示例 3：</h4><blockquote><p><b>输入：</b>lists = [[]]<br /><b>输出：</b>[]</p></blockquote><p>提示：</p><ul><li><p><span class="math inline">\(k == lists.length\)</span></p></li><li><p><span class="math inline">\(0 &lt;= k &lt;=10^4\)</span></p></li><li><p><span class="math inline">\(0 &lt;= lists[i].length &lt;=500\)</span></p></li><li><p><span class="math inline">\(-10^4 &lt;= lists[i][j] &lt;=10^4\)</span></p></li><li><p><span class="math inline">\(lists[i]\)</span> 按 <b>升序</b>排列</p></li><li><p><span class="math inline">\(lists[i].length\)</span> 的总和不超过<span class="math inline">\(10^4\)</span></p></li></ul><hr /><p>以下是题解：</p><h3 id="解题思路">解题思路:</h3><p>前置条件：理解<ahref="/2023/08/31/LeetCode_21/">LeetCode_21——合并两个链表</a>。在理解并完成上述函数后，我们的问题转变为了如何将 <spanclass="math inline">\(k\)</span> 个链表分解成若干组两个链表，即可采用<b>分治法</b></p><p>将k个链表两个分为一组，合并后再次重复上一步，直至剩余一个链表。</p><p>代码如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">ListNode* <span class="title">mergeTwoLists</span><span class="params">(ListNode *list1,ListNode *list2)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        ListNode head;</span><br><span class="line">        ListNode* Node = &amp;head;</span><br><span class="line">        <span class="keyword">while</span>(list1&amp;&amp;list2)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(list1-&gt;val&lt;list2-&gt;val)</span><br><span class="line">            &#123;</span><br><span class="line">                Node-&gt;next = list1;</span><br><span class="line">                list1 = list1-&gt;next;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                Node-&gt;next = list2;</span><br><span class="line">                list2 = list2-&gt;next;</span><br><span class="line">            &#125;</span><br><span class="line">            Node = Node-&gt;next;</span><br><span class="line">        &#125;</span><br><span class="line">        Node-&gt;next = list1 == <span class="literal">nullptr</span> ? list2 : list1;</span><br><span class="line">        <span class="keyword">return</span> head.next;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function">ListNode* <span class="title">merge</span><span class="params">(vector&lt;ListNode*&gt; &amp;lists,<span class="type">int</span> l,<span class="type">int</span> r)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(l==r)</span><br><span class="line">            <span class="keyword">return</span> lists[l];</span><br><span class="line">        <span class="keyword">if</span>(l&gt;r)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">nullptr</span>;</span><br><span class="line">        <span class="type">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">mergeTwoLists</span>(<span class="built_in">merge</span>(lists, l, mid),<span class="built_in">merge</span>(lists, mid + <span class="number">1</span>, r));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function">ListNode* <span class="title">mergeKLists</span><span class="params">(vector&lt;ListNode*&gt;&amp; lists)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">merge</span>(lists, <span class="number">0</span>, lists.<span class="built_in">size</span>() - <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h4 id="结果">结果</h4><p><a href="https://imgse.com/i/pP0pm0H"><imgsrc="https://s1.ax1x.com/2023/08/31/pP0pm0H.png"alt="pP0pm0H.png" /></a></p><div style="text-align:right;"><p>本篇博客撰写于2023/8/31 20:40:59</p>]]></content>
    
    
    <summary type="html">合并 K 个升序链表</summary>
    
    
    
    <category term="程序" scheme="https://www.lwt-server.cn/categories/%E7%A8%8B%E5%BA%8F/"/>
    
    
    <category term="LeetCode题解" scheme="https://www.lwt-server.cn/tags/LeetCode%E9%A2%98%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode题解——22.括号生成</title>
    <link href="https://www.lwt-server.cn/2023/08/31/LeetCode_22/"/>
    <id>https://www.lwt-server.cn/2023/08/31/LeetCode_22/</id>
    <published>2023-08-31T10:31:21.000Z</published>
    <updated>2023-08-31T10:39:02.444Z</updated>
    
    <content type="html"><![CDATA[<h1 id="leetcode题解">LeetCode题解</h1><h2 id="括号生成">括号生成</h2><h3 id="题目预览">题目预览：</h3><p>数字 n代表生成括号的对数，请你设计一个函数，用于能够生成所有可能的并且 有效的括号组合。</p><h4 id="示例-1">示例 1：</h4><blockquote><p><b>输入：</b>n = 3<b>输出：</b>["((()))","(()())","(())()","()(())","()()()"]</p></blockquote><h4 id="示例-2">示例 2：</h4><blockquote><p><b>输入：</b>n = 1 <b>输出：</b>["()"]</p></blockquote><p>提示：</p><ul><li><span class="math inline">\(1 &lt;= n &lt;= 8\)</span></li></ul><hr /><p>以下是题解：</p><h3 id="解题思路">解题思路:</h3><p>本题可以通过记录左、右括号的个数来通过递归实现合法序列的求解。</p><p>代码如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    vector&lt;string&gt; ans;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">Dfs</span><span class="params">(string str,<span class="type">int</span> left,<span class="type">int</span> right)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(left==<span class="number">0</span>&amp;&amp;right==<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            ans.<span class="built_in">push_back</span>(str);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(left==right) <span class="comment">//剩余左括号与右括号相等，只能使用左括号</span></span><br><span class="line">            <span class="built_in">Dfs</span>(str+<span class="string">&#x27;(&#x27;</span>,left<span class="number">-1</span>,right);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(left&gt;<span class="number">0</span>)  <span class="comment">//剩余左括号小于右括号，可以使用右括号或左括号</span></span><br><span class="line">                <span class="built_in">Dfs</span>(str+<span class="string">&#x27;(&#x27;</span>,left<span class="number">-1</span>,right);</span><br><span class="line">            <span class="built_in">Dfs</span>(str+<span class="string">&#x27;)&#x27;</span>,left,right<span class="number">-1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function">vector&lt;string&gt; <span class="title">generateParenthesis</span><span class="params">(<span class="type">int</span> n)</span> </span>&#123;</span><br><span class="line">        <span class="built_in">Dfs</span>(<span class="string">&quot;&quot;</span>,n,n);</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h4 id="结果">结果</h4><p><a href="https://imgse.com/i/pPwXzge"><imgsrc="https://s1.ax1x.com/2023/08/31/pPwXzge.png"alt="pPwXzge.png" /></a></p><div style="text-align:right;"><p>本篇博客撰写于2023/8/31 18:31:21</p>]]></content>
    
    
    <summary type="html">括号生成</summary>
    
    
    
    <category term="程序" scheme="https://www.lwt-server.cn/categories/%E7%A8%8B%E5%BA%8F/"/>
    
    
    <category term="LeetCode题解" scheme="https://www.lwt-server.cn/tags/LeetCode%E9%A2%98%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode题解——21.合并两个有序链表</title>
    <link href="https://www.lwt-server.cn/2023/08/31/LeetCode_21/"/>
    <id>https://www.lwt-server.cn/2023/08/31/LeetCode_21/</id>
    <published>2023-08-31T09:20:34.000Z</published>
    <updated>2023-08-31T09:35:04.569Z</updated>
    
    <content type="html"><![CDATA[<h1 id="leetcode题解">LeetCode题解</h1><h2 id="合并两个有序链表">合并两个有序链表</h2><h3 id="题目预览">题目预览：</h3><p>将两个升序链表合并为一个新的 <b>升序</b>链表并返回。新链表是通过拼接给定的两个链表的所有节点组成的。</p><p><a href="https://imgse.com/i/pPwqrc9"><imgsrc="https://s1.ax1x.com/2023/08/31/pPwqrc9.jpg"alt="pPwqrc9.jpg" /></a></p><h4 id="示例-1">示例 1：</h4><blockquote><p><b>输入：</b>l1 = [1,2,4], l2 = [1,3,4]<br /><b>输出：</b>[1,1,2,3,4,4]</p></blockquote><h4 id="示例-2">示例 2：</h4><blockquote><p><b>输入：</b>l1 = [], l2 = []<br /><b>输出：</b>[]</p></blockquote><h4 id="示例-3">示例 3：</h4><blockquote><p><b>输入：</b>l1 = [], l2 = [0]<br /><b>输出：</b>[0]</p></blockquote><p>提示：</p><ul><li><p>两个链表的节点数目范围是 <span class="math inline">\([0,50]\)</span></p></li><li><p><span class="math inline">\(-100 &lt;= Node.val &lt;=100\)</span></p></li><li><p><span class="math inline">\(l1\)</span> 和 <spanclass="math inline">\(l2\)</span> 均按 <b>非递减顺序</b> 排列</p></li></ul><hr /><p>以下是题解：</p><h3 id="解题思路">解题思路:</h3><p>这题是很经典的题型，算法流程可参考归并排序，对于任意两个 <b>升序</b>的容器，我们只需依次从两个容器取出较小的数，直至其中一个或二者均为空。</p><p>代码如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">ListNode* <span class="title">mergeTwoLists</span><span class="params">(ListNode* list1, ListNode* list2)</span> </span>&#123;</span><br><span class="line">        ListNode* head = <span class="keyword">new</span> <span class="built_in">ListNode</span>(<span class="number">0</span>,<span class="literal">nullptr</span>);</span><br><span class="line">        ListNode* Node = head;</span><br><span class="line">        <span class="keyword">while</span>(list1&amp;&amp;list2)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(list1-&gt;val&lt;list2-&gt;val)</span><br><span class="line">            &#123;</span><br><span class="line">                Node-&gt;next = list1;</span><br><span class="line">                list1 = list1-&gt;next;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                Node-&gt;next = list2;</span><br><span class="line">                list2 = list2-&gt;next;</span><br><span class="line">            &#125;</span><br><span class="line">            Node = Node-&gt;next;</span><br><span class="line">        &#125;</span><br><span class="line">        Node-&gt;next = list1 == <span class="literal">nullptr</span> ? list2 : list1;</span><br><span class="line">        <span class="keyword">return</span> head-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h4 id="结果">结果</h4><p><a href="https://imgse.com/i/pPwqBp4"><imgsrc="https://s1.ax1x.com/2023/08/31/pPwqBp4.png"alt="pPwqBp4.png" /></a></p><div style="text-align:right;"><p>本篇博客撰写于2023/8/31 17:20:34</p>]]></content>
    
    
    <summary type="html">合并两个有序链表</summary>
    
    
    
    <category term="程序" scheme="https://www.lwt-server.cn/categories/%E7%A8%8B%E5%BA%8F/"/>
    
    
    <category term="LeetCode题解" scheme="https://www.lwt-server.cn/tags/LeetCode%E9%A2%98%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode题解——20.有效的括号</title>
    <link href="https://www.lwt-server.cn/2023/08/31/LeetCode_20/"/>
    <id>https://www.lwt-server.cn/2023/08/31/LeetCode_20/</id>
    <published>2023-08-31T04:28:43.000Z</published>
    <updated>2023-08-31T06:16:26.361Z</updated>
    
    <content type="html"><![CDATA[<h1 id="leetcode题解">LeetCode题解</h1><h2 id="有效的括号">有效的括号</h2><h3 id="题目预览">题目预览：</h3><p>给定一个只包括<code>'('</code>，<code>')'</code>，<code>'&#123;'</code>，<code>'&#125;'</code>，<code>'['</code>，<code>']'</code>的字符串 <span class="math inline">\(s\)</span>，判断字符串是否有效。</p><p>有效字符串需满足：</p><ol type="1"><li><p>左括号必须用相同类型的右括号闭合。</p></li><li><p>左括号必须以正确的顺序闭合。</p></li><li><p>每个右括号都有一个对应的相同类型的左括号。</p></li></ol><h4 id="示例-1">示例 1：</h4><blockquote><p><b>输入：</b>s = "()"<br /><b>输出：</b>true</p></blockquote><h4 id="示例-2">示例 2：</h4><blockquote><p><b>输入：</b>s = "()<span></span>"<br /><b>输出：</b>true</p></blockquote><h4 id="示例-3">示例 3：</h4><blockquote><p><b>输入：</b>s = "(]"<br /><b>输出：</b>false</p></blockquote><p>提示：</p><ul><li><p><span class="math inline">\(1 &lt;= s.length &lt;=10^4\)</span></p></li><li><p><span class="math inline">\(s\)</span> 仅由括号<code>'()[]&#123;&#125;'</code> 组成</p></li></ul><hr /><p>以下是题解：</p><h3 id="解题思路">解题思路:</h3><p>拿到题，很多人应该和我一样想：如果计算出左括号的数量，和右括号的数量，如果每种括号左右数量相同，会不会就是有效的括号了呢？</p><p>事实上不是的，假如输入是<code>[&#123;]&#125;</code>，每种括号的左右数量分别相等，但不是有效的括号。这是因为结果还与括号的位置有关。</p><p>而我们能发现，对于有效的括号，它的部分子表达式仍然是有效的括号。</p><p>于是乎，我们考虑使用 <b>栈</b> 来处理这个问题：</p><p>当遇到匹配的最小括号对时，我们将这对括号从栈中删除（即出栈），如果最后栈为空，那么它是有效的括号，反之不是。</p><p>代码如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">bool</span> <span class="title">isValid</span><span class="params">(string s)</span> </span>&#123;</span><br><span class="line">        stack&lt;<span class="type">char</span>&gt; Symbol;</span><br><span class="line">        <span class="type">int</span> Len=s.<span class="built_in">length</span>();</span><br><span class="line">        <span class="keyword">if</span>(Len==<span class="number">1</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        Symbol.<span class="built_in">push</span>(s[<span class="number">0</span>]);</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;Len;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(s[i]==<span class="string">&#x27;)&#x27;</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(Symbol.<span class="built_in">empty</span>())</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                <span class="keyword">if</span>(Symbol.<span class="built_in">top</span>()==<span class="string">&#x27;(&#x27;</span>)</span><br><span class="line">                    Symbol.<span class="built_in">pop</span>();</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(s[i]==<span class="string">&#x27;]&#x27;</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(Symbol.<span class="built_in">empty</span>())</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                <span class="keyword">if</span>(Symbol.<span class="built_in">top</span>()==<span class="string">&#x27;[&#x27;</span>)</span><br><span class="line">                    Symbol.<span class="built_in">pop</span>();</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(s[i]==<span class="string">&#x27;&#125;&#x27;</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(Symbol.<span class="built_in">empty</span>())</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                <span class="keyword">if</span>(Symbol.<span class="built_in">top</span>()==<span class="string">&#x27;&#123;&#x27;</span>)</span><br><span class="line">                    Symbol.<span class="built_in">pop</span>();</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                Symbol.<span class="built_in">push</span>(s[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(Symbol.<span class="built_in">empty</span>())</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h4 id="结果">结果</h4><p><a href="https://imgse.com/i/pPw64qs"><imgsrc="https://s1.ax1x.com/2023/08/31/pPw64qs.png"alt="pPw64qs.png" /></a></p><div style="text-align:right;"><p>本篇博客撰写于2023/8/31 12:28:43</p>]]></content>
    
    
    <summary type="html">有效的括号</summary>
    
    
    
    <category term="程序" scheme="https://www.lwt-server.cn/categories/%E7%A8%8B%E5%BA%8F/"/>
    
    
    <category term="LeetCode题解" scheme="https://www.lwt-server.cn/tags/LeetCode%E9%A2%98%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode题解——19.删除链表的倒数第 N 个结点</title>
    <link href="https://www.lwt-server.cn/2023/08/31/LeetCode_19/"/>
    <id>https://www.lwt-server.cn/2023/08/31/LeetCode_19/</id>
    <published>2023-08-31T02:49:57.000Z</published>
    <updated>2023-08-31T12:45:56.597Z</updated>
    
    <content type="html"><![CDATA[<h1 id="leetcode题解">LeetCode题解</h1><h2 id="删除链表的倒数第-n-个结点">删除链表的倒数第 N 个结点</h2><h3 id="题目预览">题目预览：</h3><p>给你一个链表，删除链表的倒数第 n 个结点，并且返回链表的头结点。</p><p><a href="https://imgse.com/i/pPww7cR"><imgsrc="https://s1.ax1x.com/2023/08/31/pPww7cR.jpg"alt="pPww7cR.jpg" /></a></p><h4 id="示例-1">示例 1：</h4><blockquote><p><b>输入：</b>head = [1,2,3,4,5], n = 2<br /><b>输出：</b>[1,2,3,5]</p></blockquote><h4 id="示例-2">示例 2：</h4><blockquote><p><b>输入：</b>head = [1], n = 1<br /><b>输出：</b>[]</p></blockquote><h4 id="示例-3">示例 3：</h4><blockquote><p><b>输入：</b>head = [1,2], n = 1<br /><b>输出：</b>[1]</p></blockquote><p>提示：</p><ul><li><p>链表中结点的数目为 <spanclass="math inline">\(sz\)</span></p></li><li><p><span class="math inline">\(1 &lt;= sz &lt;= 30\)</span></p></li><li><p><span class="math inline">\(0 &lt;= Node.val &lt;=100\)</span></p></li><li><p><span class="math inline">\(1 &lt;= n &lt;= sz\)</span></p></li></ul><p><b>进阶：</b>你能尝试使用一趟扫描实现吗？</p><hr /><p>以下是题解：</p><h3 id="解题思路">解题思路:</h3><p>本题与我在(<ahref="/2023/08/25/LeetCode_2/">LeetCode_2——两数相加</a>)中的部分题解高度重合，这里就不再多做赘述，附上修改后的代码，其中进阶部分可以通过双指针——即间隔n个单位的两个指针，当后面的那个到达末端，前面那个既是我们要删去的数。</p><p>代码如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">ListNode* <span class="title">removeNthFromEnd</span><span class="params">(ListNode* head, <span class="type">int</span> n)</span> </span>&#123;</span><br><span class="line">        ListNode* newHead = <span class="keyword">new</span> <span class="built_in">ListNode</span>(<span class="number">0</span>,head);</span><br><span class="line">        ListNode* posNode = head;</span><br><span class="line">        ListNode* posNodeFront = newHead;</span><br><span class="line">        <span class="type">int</span> num = <span class="number">0</span>,Len=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(posNode!=<span class="literal">nullptr</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            posNode=posNode-&gt;next;</span><br><span class="line">            Len++;</span><br><span class="line">        &#125;</span><br><span class="line">        posNode = head;</span><br><span class="line">        <span class="type">int</span> posData = Len-n+<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(num &lt; posData - <span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            posNodeFront = posNode;</span><br><span class="line">            posNode = posNode-&gt;next;</span><br><span class="line">            num++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(n==<span class="number">1</span>)</span><br><span class="line">            posNodeFront-&gt;next = <span class="literal">nullptr</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            posNodeFront-&gt;next = posNode-&gt;next;</span><br><span class="line">        <span class="keyword">delete</span> posNode;</span><br><span class="line">        posNode = <span class="literal">nullptr</span>;</span><br><span class="line">        <span class="keyword">return</span> newHead-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h4 id="结果">结果</h4><p><a href="https://imgse.com/i/pPwwT39"><imgsrc="https://s1.ax1x.com/2023/08/31/pPwwT39.png"alt="pPwwT39.png" /></a></p><div style="text-align:right;"><p>本篇博客撰写于2023/8/31 10:49:57</p>]]></content>
    
    
    <summary type="html">删除链表的倒数第 N 个结点</summary>
    
    
    
    <category term="程序" scheme="https://www.lwt-server.cn/categories/%E7%A8%8B%E5%BA%8F/"/>
    
    
    <category term="LeetCode题解" scheme="https://www.lwt-server.cn/tags/LeetCode%E9%A2%98%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode题解——1761.一个图中连通三元组的最小度数</title>
    <link href="https://www.lwt-server.cn/2023/08/31/LeetCode_1761/"/>
    <id>https://www.lwt-server.cn/2023/08/31/LeetCode_1761/</id>
    <published>2023-08-31T02:09:24.000Z</published>
    <updated>2023-08-31T02:20:07.231Z</updated>
    
    <content type="html"><![CDATA[<h1 id="leetcode题解">LeetCode题解</h1><h2 id="一个图中连通三元组的最小度数">一个图中连通三元组的最小度数</h2><h3 id="题目预览">题目预览：</h3><p>给你一个无向图，整数 <span class="math inline">\(n\)</span>表示图中节点的数目，<span class="math inline">\(edges\)</span>数组表示图中的边，其中 <span class="math inline">\(edges[i] = [ui,vi]\)</span> ，表示 <span class="math inline">\(ui\)</span> 和 <spanclass="math inline">\(vi\)</span> 之间有一条无向边。</p><p>一个 <b>连通三元组</b> 指的是 <b>三个</b>节点组成的集合且这三个点之间 <b>两两</b> 有边。</p><p><b>连通三元组的度数</b>是所有满足此条件的边的数目：一个顶点在这个三元组内，而另一个顶点不在这个三元组内。</p><p>请你返回所有连通三元组中度数的 <b>最小值</b>，如果图中没有连通三元组，那么返回 <spanclass="math inline">\(-1\)</span> 。</p><h4 id="示例-1">示例 1：</h4><p><a href="https://imgse.com/i/pPwaoaF"><imgsrc="https://s1.ax1x.com/2023/08/31/pPwaoaF.png"alt="pPwaoaF.png" /></a></p><blockquote><p><b>输入：</b>n = 6, edges =[[1,2],[1,3],[3,2],[4,1],[5,2],[3,6]]<br /><b>输出：</b>3<br /><b>解释：</b>只有一个三元组 [1,2,3] 。构成度数的边在上图中已被加粗。</p></blockquote><h4 id="示例-2">示例 2：</h4><p><a href="https://imgse.com/i/pPwaT54"><imgsrc="https://s1.ax1x.com/2023/08/31/pPwaT54.png"alt="pPwaT54.png" /></a></p><blockquote><p><b>输入：</b>n = 7, edges =[[1,3],[4,1],[4,3],[2,5],[5,6],[6,7],[7,5],[2,6]]<br /><b>输出：</b>0<br /><b>解释：</b>有 3 个三元组：<br />1) [1,4,3]，度数为 0 。<br />2) [2,5,6]，度数为 2 。<br />3) [5,6,7]，度数为 2 。</p></blockquote><p>提示：</p><ul><li><p><span class="math inline">\(2 &lt;= n &lt;= 400\)</span></p></li><li><p><span class="math inline">\(edges[i].length ==2\)</span></p></li><li><p><span class="math inline">\(1 &lt;= edges.length &lt;= n * (n-1)/ 2\)</span></p></li><li><p><span class="math inline">\(1 &lt;= ui, vi &lt;=n\)</span></p></li><li><p><span class="math inline">\(ui != vi\)</span></p></li><li><p>图中没有重复的边。</p></li></ul><hr /><p>以下是题解：</p><h3 id="解题思路">解题思路:</h3><p>身为蒟蒻的我在面对这题的时候只能想到用三重循环对每一个可能的三元组进行判断，通过提前维护一个储存每一个点的度数的容器来计算最小度数</p><p>代码如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">minTrioDegree</span><span class="params">(<span class="type">int</span> n, vector&lt;vector&lt;<span class="type">int</span>&gt;&gt;&amp; edges)</span> </span>&#123;</span><br><span class="line">        vector&lt;vector&lt;<span class="type">int</span>&gt;&gt;<span class="built_in">map</span>(n,<span class="built_in">vector</span>&lt;<span class="type">int</span>&gt;(n));</span><br><span class="line">        vector&lt;<span class="type">int</span>&gt;<span class="built_in">degree</span>(n);</span><br><span class="line">        <span class="type">int</span> sumEdge=edges.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;sumEdge;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> x=edges[i][<span class="number">0</span>]<span class="number">-1</span>,y=edges[i][<span class="number">1</span>]<span class="number">-1</span>;</span><br><span class="line">            map[x][y]=<span class="number">1</span>;</span><br><span class="line">            map[y][x]=<span class="number">1</span>;</span><br><span class="line">            degree[x]++;</span><br><span class="line">            degree[y]++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> ans=<span class="number">0x7fffffff</span>;  </span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n<span class="number">-2</span>;i++)</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=i+<span class="number">1</span>;j&lt;n<span class="number">-1</span>;j++)</span><br><span class="line">                <span class="keyword">if</span>(map[i][j]==<span class="number">1</span>)</span><br><span class="line">                    <span class="keyword">for</span>(<span class="type">int</span> k=j+<span class="number">1</span>;k&lt;n;k++)</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="keyword">if</span>(map[i][k]==<span class="number">1</span>&amp;&amp;map[j][k]==<span class="number">1</span>)</span><br><span class="line">                            ans=<span class="built_in">min</span>(ans,degree[i]+degree[j]+degree[k]<span class="number">-6</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">        <span class="keyword">if</span>(ans==<span class="number">0x7fffffff</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h4 id="结果">结果</h4><p><a href="https://imgse.com/i/pPwaIVU"><imgsrc="https://s1.ax1x.com/2023/08/31/pPwaIVU.png"alt="pPwaIVU.png" /></a></p><div style="text-align:right;"><p>本篇博客撰写于2023/8/31 10:09:24</p>]]></content>
    
    
    <summary type="html">一个图中连通三元组的最小度数</summary>
    
    
    
    <category term="程序" scheme="https://www.lwt-server.cn/categories/%E7%A8%8B%E5%BA%8F/"/>
    
    
    <category term="LeetCode题解" scheme="https://www.lwt-server.cn/tags/LeetCode%E9%A2%98%E8%A7%A3/"/>
    
    <category term="LeetCode每日一题" scheme="https://www.lwt-server.cn/tags/LeetCode%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode题解——18.四数之和</title>
    <link href="https://www.lwt-server.cn/2023/08/30/LeetCode_18/"/>
    <id>https://www.lwt-server.cn/2023/08/30/LeetCode_18/</id>
    <published>2023-08-30T14:45:26.000Z</published>
    <updated>2023-08-31T12:46:21.126Z</updated>
    
    <content type="html"><![CDATA[<h1 id="leetcode题解">LeetCode题解</h1><h2 id="四数之和">四数之和</h2><h3 id="题目预览">题目预览：</h3><p>给你一个由 <span class="math inline">\(n\)</span> 个整数组成的数组<span class="math inline">\(nums\)</span> ，和一个目标值 <spanclass="math inline">\(target\)</span>。请你找出并返回满足下述全部条件且不重复的四元组 <spanclass="math inline">\([nums[a], nums[b], nums[c], nums[d]]\)</span>（若两个四元组元素一一对应，则认为两个四元组重复）：</p><ul><li><p><span class="math inline">\(0 &lt;= a, b, c, d &lt;n\)</span></p></li><li><p><span class="math inline">\(a\)</span> 、<spanclass="math inline">\(b\)</span> 、<spanclass="math inline">\(c\)</span> 和 <spanclass="math inline">\(d\)</span> 互不相同</p></li><li><p><span class="math inline">\(nums[a] + nums[b] + nums[c] + nums[d]== target\)</span></p></li></ul><p>你可以按 <b>任意顺序</b> 返回答案 。</p><h4 id="示例-1">示例 1：</h4><blockquote><p><b>输入：</b>nums = [1,0,-1,0,-2,2], target = 0<br /><b>输出：</b>[[-2,-1,1,2],[-2,0,0,2],[-1,0,0,1]]</p></blockquote><h4 id="示例-2">示例 2：</h4><blockquote><p><b>输入：</b>nums = [2,2,2,2,2], target = 8<br /><b>输出：</b>[[2,2,2,2]]</p></blockquote><p>提示：</p><ul><li><p><span class="math inline">\(1 &lt;= nums.length &lt;=200\)</span></p></li><li><p><span class="math inline">\(-10^9 &lt;= nums[i] &lt;=10^9\)</span></p></li><li><p><span class="math inline">\(-10^9 &lt;= target &lt;=10^9\)</span></p></li></ul><hr /><p>以下是题解：</p><h3 id="解题思路">解题思路:</h3><p><b>排序 + 双指针</b></p><p>基本思路与又是与(<ahref="/2023/08/29/LeetCode_15/">LeetCode_15——三数之和</a>)十分相似，因此在这里附上代码，具体思路详见(<ahref="/2023/08/29/LeetCode_15/">LeetCode_15——三数之和</a>)。</p><p>代码如下：</p><blockquote><p>这里做了一部分优化，可省去</p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; <span class="built_in">fourSum</span>(vector&lt;<span class="type">int</span>&gt;&amp; nums, <span class="type">int</span> target) &#123;</span><br><span class="line">        <span class="built_in">sort</span>(nums.<span class="built_in">begin</span>(), nums.<span class="built_in">end</span>());</span><br><span class="line">        <span class="type">int</span> n = nums.<span class="built_in">size</span>();</span><br><span class="line">        vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; ans;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> a = <span class="number">0</span>; a &lt; n - <span class="number">3</span>; a++) &#123;</span><br><span class="line">            <span class="type">long</span> <span class="type">long</span> x = nums[a];</span><br><span class="line">            <span class="keyword">if</span>(a &amp;&amp; x == nums[a - <span class="number">1</span>]) <span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">if</span>(x + nums[a + <span class="number">1</span>] + nums[a + <span class="number">2</span>] + nums[a + <span class="number">3</span>] &gt; target) <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">if</span>(x + nums[n - <span class="number">1</span>] + nums[n - <span class="number">2</span>] + nums[n - <span class="number">3</span>] &lt; target) <span class="keyword">continue</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> b = a + <span class="number">1</span>; b &lt; n - <span class="number">2</span>; b++)&#123;</span><br><span class="line">                <span class="type">long</span> <span class="type">long</span> y = nums[b];</span><br><span class="line">                <span class="keyword">if</span>(b &gt; a + <span class="number">1</span> &amp;&amp; y == nums[b - <span class="number">1</span>]) <span class="keyword">continue</span>;</span><br><span class="line">                <span class="keyword">if</span>(x + y + nums[b + <span class="number">1</span>] + nums[b + <span class="number">2</span>] &gt; target) <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">if</span>(x + y + nums[n - <span class="number">1</span>] + nums[n - <span class="number">2</span>] &lt; target) <span class="keyword">continue</span>;</span><br><span class="line"></span><br><span class="line">                <span class="type">int</span> c = b + <span class="number">1</span>, d = n - <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">while</span>(c &lt; d) &#123;</span><br><span class="line">                    <span class="type">long</span> <span class="type">long</span> s = x + y + nums[c] + nums[d];</span><br><span class="line">                    <span class="keyword">if</span>(s &gt; target) d--;</span><br><span class="line">                    <span class="keyword">else</span> <span class="keyword">if</span>(s &lt; target) c++;</span><br><span class="line">                    <span class="keyword">else</span> &#123;</span><br><span class="line">                        ans.<span class="built_in">push_back</span>(&#123;(<span class="type">int</span>)x, (<span class="type">int</span>)y, nums[c], nums[d]&#125;);</span><br><span class="line">                        <span class="keyword">for</span>(++c; c &lt; d &amp;&amp; nums[c] == nums[c - <span class="number">1</span>]; ++c);</span><br><span class="line">                        <span class="keyword">for</span>(--d; c &lt; d &amp;&amp; nums[c] == nums[d + <span class="number">1</span>]; --d);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h4 id="结果">结果</h4><p><a href="https://imgse.com/i/pPwMk7t"><imgsrc="https://s1.ax1x.com/2023/08/30/pPwMk7t.png"alt="pPwMk7t.png" /></a></p><div style="text-align:right;"><p>本篇博客撰写于2023/8/30 22:45:26</p>]]></content>
    
    
    <summary type="html">四数之和</summary>
    
    
    
    <category term="程序" scheme="https://www.lwt-server.cn/categories/%E7%A8%8B%E5%BA%8F/"/>
    
    
    <category term="LeetCode题解" scheme="https://www.lwt-server.cn/tags/LeetCode%E9%A2%98%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode题解——17.电话号码的字母组合</title>
    <link href="https://www.lwt-server.cn/2023/08/30/LeetCode_17/"/>
    <id>https://www.lwt-server.cn/2023/08/30/LeetCode_17/</id>
    <published>2023-08-30T09:32:15.000Z</published>
    <updated>2023-08-30T10:54:50.018Z</updated>
    
    <content type="html"><![CDATA[<h1 id="leetcode题解">LeetCode题解</h1><h2 id="最接近的三数之和">最接近的三数之和</h2><h3 id="题目预览">题目预览：</h3><p>给定一个仅包含数字 <span class="math inline">\(2-9\)</span>的字符串，返回所有它能表示的字母组合。答案可以按 <b>任意顺序</b>返回。</p><p>给出数字到字母的映射如下（与电话按键相同）。注意 <spanclass="math inline">\(1\)</span> 不对应任何字母。</p><p><a href="https://imgse.com/i/pPwSLPP"><imgsrc="https://s1.ax1x.com/2023/08/30/pPwSLPP.png"alt="pPwSLPP.png" /></a></p><h4 id="示例-1">示例 1：</h4><blockquote><p><b>输入：</b>digits = "23"<br /><b>输出：</b>["ad","ae","af","bd","be","bf","cd","ce","cf"]</p></blockquote><h4 id="示例-2">示例 2：</h4><blockquote><p><b>输入：</b>digits = ""<br /><b>输出：</b>[]</p></blockquote><h4 id="示例-3">示例 3：</h4><blockquote><p><b>输入：</b>digits = "2"<br /><b>输出：</b>["a","b","c"]</p></blockquote><p>提示：</p><ul><li><span class="math inline">\(0 &lt;= digits.length &lt;=4\)</span></li><li><span class="math inline">\(digits[i]\)</span> 是范围 <spanclass="math inline">\([&#39;2&#39;, &#39;9&#39;]\)</span>的一个数字。</li></ul><hr /><p>以下是题解：</p><h3 id="解题思路递归">解题思路:递归</h3><p>本题思路较清晰，对于每一位数字，均有与之相对应的 <spanclass="math inline">\(3/4\)</span>种情况，我们只需递归每一种状态即可。</p><p>代码如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="type">int</span> Len=<span class="number">0</span>;</span><br><span class="line">    string Digits=<span class="string">&quot;&quot;</span>;</span><br><span class="line">    vector&lt;string&gt; ans;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">Tel</span><span class="params">(<span class="type">int</span> tags,string str)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(tags==Len)</span><br><span class="line">            ans.<span class="built_in">push_back</span>(str);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> num=Digits[tags]-<span class="string">&#x27;2&#x27;</span>;</span><br><span class="line">            <span class="keyword">if</span>(num==<span class="number">5</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">Tel</span>(tags+<span class="number">1</span>,str+<span class="string">&#x27;p&#x27;</span>);</span><br><span class="line">                <span class="built_in">Tel</span>(tags+<span class="number">1</span>,str+<span class="string">&#x27;q&#x27;</span>);</span><br><span class="line">                <span class="built_in">Tel</span>(tags+<span class="number">1</span>,str+<span class="string">&#x27;r&#x27;</span>);</span><br><span class="line">                <span class="built_in">Tel</span>(tags+<span class="number">1</span>,str+<span class="string">&#x27;s&#x27;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(num==<span class="number">6</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">Tel</span>(tags+<span class="number">1</span>,str+<span class="string">&#x27;t&#x27;</span>);</span><br><span class="line">                <span class="built_in">Tel</span>(tags+<span class="number">1</span>,str+<span class="string">&#x27;u&#x27;</span>);</span><br><span class="line">                <span class="built_in">Tel</span>(tags+<span class="number">1</span>,str+<span class="string">&#x27;v&#x27;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(num==<span class="number">7</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">Tel</span>(tags+<span class="number">1</span>,str+<span class="string">&#x27;w&#x27;</span>);</span><br><span class="line">                <span class="built_in">Tel</span>(tags+<span class="number">1</span>,str+<span class="string">&#x27;x&#x27;</span>);</span><br><span class="line">                <span class="built_in">Tel</span>(tags+<span class="number">1</span>,str+<span class="string">&#x27;y&#x27;</span>);</span><br><span class="line">                <span class="built_in">Tel</span>(tags+<span class="number">1</span>,str+<span class="string">&#x27;z&#x27;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">Tel</span>(tags+<span class="number">1</span>,str+<span class="built_in">char</span>(<span class="string">&#x27;a&#x27;</span>+num*<span class="number">3</span>));</span><br><span class="line">                <span class="built_in">Tel</span>(tags+<span class="number">1</span>,str+<span class="built_in">char</span>(<span class="string">&#x27;b&#x27;</span>+num*<span class="number">3</span>));</span><br><span class="line">                <span class="built_in">Tel</span>(tags+<span class="number">1</span>,str+<span class="built_in">char</span>(<span class="string">&#x27;c&#x27;</span>+num*<span class="number">3</span>));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function">vector&lt;string&gt; <span class="title">letterCombinations</span><span class="params">(string digits)</span> </span>&#123;</span><br><span class="line">        Digits=digits;</span><br><span class="line">        <span class="keyword">if</span>(digits==<span class="string">&quot;&quot;</span>)</span><br><span class="line">            <span class="keyword">return</span> &#123;&#125;;</span><br><span class="line">        Len=digits.<span class="built_in">size</span>();</span><br><span class="line">        <span class="built_in">Tel</span>(<span class="number">0</span>,<span class="string">&quot;&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h4 id="结果">结果</h4><p><a href="https://imgse.com/i/pPwSb5t"><imgsrc="https://s1.ax1x.com/2023/08/30/pPwSb5t.png"alt="pPwSb5t.png" /></a></p><div style="text-align:right;"><p>本篇博客撰写于2023/8/30 17:32:15</p>]]></content>
    
    
    <summary type="html">电话号码的字母组合</summary>
    
    
    
    <category term="程序" scheme="https://www.lwt-server.cn/categories/%E7%A8%8B%E5%BA%8F/"/>
    
    
    <category term="LeetCode题解" scheme="https://www.lwt-server.cn/tags/LeetCode%E9%A2%98%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode题解——1654.到家的最少跳跃次数</title>
    <link href="https://www.lwt-server.cn/2023/08/30/LeetCode_1654/"/>
    <id>https://www.lwt-server.cn/2023/08/30/LeetCode_1654/</id>
    <published>2023-08-30T07:17:06.000Z</published>
    <updated>2023-08-30T14:00:15.305Z</updated>
    
    <content type="html"><![CDATA[<h1 id="leetcode题解">LeetCode题解</h1><h2 id="到家的最少跳跃次数">到家的最少跳跃次数</h2><h3 id="题目预览">题目预览：</h3><p>有一只跳蚤的家在数轴上的位置 <span class="math inline">\(x\)</span>处。请你帮助它从位置 <span class="math inline">\(0\)</span>出发，到达它的家。</p><p>跳蚤跳跃的规则如下：</p><ul><li>它可以 <b>往前</b> 跳恰好 <span class="math inline">\(a\)</span>个位置（即往右跳）。<br /></li><li>它可以 <b>往后</b> 跳恰好 <span class="math inline">\(b\)</span>个位置（即往左跳）。</li><li>它不能 <b>连续</b> 往后跳 <span class="math inline">\(2\)</span>次。</li><li>它不能跳到任何 <span class="math inline">\(forbidden\)</span>数组中的位置。</li><li>跳蚤可以往前跳 <b>超过</b> 它的家的位置，但是它<b>不能跳到负整数</b> 的位置。</li></ul><p>给你一个整数数组 forbidden ，其中 forbidden[i]是跳蚤不能跳到的位置，同时给你整数 a， b 和 x，请你返回跳蚤到家的最少跳跃次数。如果没有恰好到达 x的可行方案，请你返回 -1 。</p><h4 id="示例-1">示例 1：</h4><blockquote><p><b>输入：</b>forbidden = [14,4,18,1,15], a = 3, b = 15, x = 9<br /><b>输出：</b>3<br /><b>解释：</b>往前跳 3 次（0 -&gt; 3 -&gt; 6 -&gt;9），跳蚤就到家了。</p></blockquote><h4 id="示例-2">示例 2：</h4><blockquote><p><b>输入：</b>forbidden = [8,3,16,6,12,20], a = 15, b = 13, x =11<br /><b>输出：</b>-1</p></blockquote><h4 id="示例-3">示例 3：</h4><blockquote><p><b>输入：</b>forbidden = [1,6,2,14,5,17,4], a = 16, b = 9, x =7<br /><b>输出：</b>2<br /><b>解释：</b>往前跳一次（0 -&gt; 16），然后往回跳一次（16 -&gt;7），跳蚤就到家了。</p></blockquote><p>提示：</p><ul><li><span class="math inline">\(1 &lt;= forbidden.length &lt;=1000\)</span></li><li><span class="math inline">\(1 &lt;= a, b, forbidden[i] &lt;=2000\)</span></li><li><span class="math inline">\(0 &lt;= x &lt;= 2000\)</span></li><li><span class="math inline">\(forbidden\)</span>中所有位置互不相同。</li><li>位置 <span class="math inline">\(x\)</span> 不在 <spanclass="math inline">\(forbidden\)</span> 中。</li></ul><hr /><p>以下是题解：</p><h3 id="解题思路">解题思路:</h3><p>由于我们可以超出家的位置，最短路算法可能超时，故我们需要减小搜索范围。可以证明，一定可以在 <spanclass="math inline">\([0,max⁡(f+a+b,x+b)]\)</span>的下标范围内找到最优解，其中 <span class="math inline">\(f\)</span>是最远的禁止点的坐标。因为 <spanclass="math inline">\(f,a,b,x≤2000\)</span> ，故搜索范围不会超过 <spanclass="math inline">\(6000\)</span>。</p><p>后续证明需要考虑一些细节问题，但意会后是很简单的：如果最优路径是出界的，可以调整前后跳的顺序让其不出界。（想象一条长绳子，起点和终点固定，嫌它太长所以把它折起来放）</p><p><b>详细证明：</b></p><p>如果 <span class="math inline">\(a≥b\)</span> ， 那么当跳蚤跳到大于<span class="math inline">\(x+b\)</span>的位置时，最多只能后跳一次，但是无法到达 <spanclass="math inline">\(x\)</span>，而在之后的跳跃中，最 “保守”的跳法也是前跳一次，后跳一次，无法更加接近 <spanclass="math inline">\(x\)</span>。故此时的最大搜索下标是 <spanclass="math inline">\(x+b\)</span>。</p><p>证明 <span class="math inline">\(a&lt;b\)</span> 的情况： 可以证明当<span class="math inline">\(a&lt;b\)</span> 时搜索的右边界为 <spanclass="math inline">\(max⁡(f+a+b,x)\)</span> 。</p><p>首先把整个数轴分为 <span class="math inline">\(3\)</span> 段：</p><ul><li><p>非安全区：<span class="math inline">\([0,f]\)</span>。“非安全区”指区域内会有禁止（forbidden）点。</p></li><li><p>安全区（界内）：<spanclass="math inline">\((f,max⁡(f+a+b,x)]\)</span>。注意家的位置也包含在界内。</p></li><li><p>出界区：<span class="math inline">\((max⁡(f+a+b,x),+∞)\)</span>。</p></li></ul><p>假设某个 <b>跳跃次数最少</b> 的路径中，<spanclass="math inline">\(C\)</span> 点是 <b>第一个</b> 出界的点，<spanclass="math inline">\(H\)</span> 点是 <b>第一个</b>返回界内的点（注意我们把跳蚤的家的位置 <spanclass="math inline">\(x\)</span>也划入了界内，因此跳蚤为了回家必须返回界内），如下图所示。图中，横坐标是跳跃次数，纵坐标是跳蚤与原点的距离。</p><p><a href="https://imgse.com/i/pPdOxKA"><imgsrc="https://s1.ax1x.com/2023/08/30/pPdOxKA.png"alt="pPdOxKA.png" /></a></p><p>为了让 <span class="math inline">\(C\)</span>点不再出界，我们只需交换线段 <span class="math inline">\(BC\)</span> 和线段 <span class="math inline">\(GH\)</span>（也就是说，将第 <spanclass="math inline">\(i + 1\)</span> 次跳跃变为后跳，而将第 <spanclass="math inline">\(i+6\)</span>次跳跃变为前跳）即可，如下图所示：</p><p><a href="https://imgse.com/i/pPdXFPS"><imgsrc="https://s1.ax1x.com/2023/08/30/pPdXFPS.png"alt="pPdXFPS.png" /></a></p><p>下面从 <span class="math inline">\(3\)</span>个方面论证这次交换的可行性：</p><ol type="1"><li><p>交换之前，C,D,E,F,G 点都出界，与原点的距离 <spanclass="math inline">\(l&gt;f+a+b\)</span> ；交换之后它们与原点的距离变为<span class="math inline">\(l−(a+b)\)</span>&gt;f$。也就是说，交换后，这些点没有踩到 forbidden 点的风险；</p></li><li><p>交换没有增加跳跃的次数，跳跃次数仍为最优；</p></li><li><p>交换不会造成两次后跳。这是因为跳蚤一定是通过 <b>前跳</b> 到达的<span class="math inline">\(B\)</span> 点。反证：如果跳蚤是通过后跳跳到<span class="math inline">\(B\)</span> 点的，那么 <spanclass="math inline">\(B\)</span> 点的前一个点 <spanclass="math inline">\(A′\)</span> 一定位于出界区（因为 <spanclass="math inline">\(b&gt;a\)</span> ），与假设（<spanclass="math inline">\(C\)</span> 点是 <b>第一个</b>出界的点）矛盾。</p></li></ol><p>因此，我们可以不断寻找 <b>第一次出界</b>的点，然后按上面的模式进行交换，使其不再出界，最终让所有的点不再出界，位于<span class="math inline">\([0,max⁡(f+a+b,x)]\)</span> 的范围内。</p><p>综合 <span class="math inline">\(a≥b\)</span> 和 <spanclass="math inline">\(a&lt;b\)</span> 的情况，我们可以得出搜索的上界<span class="math inline">\(=max⁡(f+a+b,x+b)\)</span>。</p><p>有了上面的结论，我们可以随便用一种最短路解法来求解该问题。下面的<span class="math inline">\(BFS\)</span>代码供参考；也可参考其它题解的方法。注意为了避免两次后跳，我们需要在<span class="math inline">\(BFS\)</span>中保存上一次是前跳还是后跳。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">minimumJumps</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; forbidden, <span class="type">int</span> a, <span class="type">int</span> b, <span class="type">int</span> x)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> F = *<span class="built_in">max_element</span>(forbidden.<span class="built_in">begin</span>(), forbidden.<span class="built_in">end</span>()), bound = <span class="built_in">max</span>(F + a + b, x + b);</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> ban[bound + <span class="number">1</span>];</span><br><span class="line">        <span class="built_in">memset</span>(ban, <span class="number">0</span>, <span class="built_in">sizeof</span>(ban));</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> f : forbidden) &#123;</span><br><span class="line">            ban[f] = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> dist[bound + <span class="number">1</span>][<span class="number">2</span>];</span><br><span class="line">        <span class="built_in">memset</span>(dist, <span class="number">0x3f</span>, <span class="built_in">sizeof</span>(dist));</span><br><span class="line">        dist[<span class="number">0</span>][<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">        queue&lt;pair&lt;<span class="type">int</span>,<span class="type">int</span>&gt;&gt; <span class="built_in">q</span>(&#123;&#123;<span class="number">0</span>, <span class="number">0</span>&#125;&#125;);</span><br><span class="line">        <span class="keyword">while</span>(q.<span class="built_in">size</span>()) &#123;</span><br><span class="line">            <span class="keyword">auto</span> [i, pre] = q.<span class="built_in">front</span>(); q.<span class="built_in">pop</span>();</span><br><span class="line">            <span class="keyword">if</span>(i == x) &#123;</span><br><span class="line">                <span class="keyword">return</span> dist[i][pre];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(pre == <span class="number">0</span> &amp;&amp; i-b &gt;= <span class="number">0</span> &amp;&amp; !ban[i-b] &amp;&amp; dist[i][pre] + <span class="number">1</span> &lt; dist[i-b][<span class="number">1</span>]) &#123;</span><br><span class="line">                dist[i-b][<span class="number">1</span>] = dist[i][pre] + <span class="number">1</span>;</span><br><span class="line">                q.<span class="built_in">emplace</span>(i-b, <span class="number">1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(i+a &lt;= bound &amp;&amp; !ban[i+a] &amp;&amp; dist[i][pre] + <span class="number">1</span> &lt; dist[i+a][<span class="number">0</span>]) &#123;</span><br><span class="line">                dist[i+a][<span class="number">0</span>] = dist[i][pre] + <span class="number">1</span>;</span><br><span class="line">                q.<span class="built_in">emplace</span>(i+a, <span class="number">0</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h4 id="结果">结果</h4><p><a href="https://imgse.com/i/pPdX2Zt"><imgsrc="https://s1.ax1x.com/2023/08/30/pPdX2Zt.png"alt="pPdX2Zt.png" /></a></p><div style="text-align:right;"><p>本篇博客撰写于2023/8/30 15:17:06</p>]]></content>
    
    
    <summary type="html">到家的最少跳跃次数</summary>
    
    
    
    <category term="程序" scheme="https://www.lwt-server.cn/categories/%E7%A8%8B%E5%BA%8F/"/>
    
    
    <category term="LeetCode题解" scheme="https://www.lwt-server.cn/tags/LeetCode%E9%A2%98%E8%A7%A3/"/>
    
    <category term="LeetCode每日一题" scheme="https://www.lwt-server.cn/tags/LeetCode%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode题解——16.最接近的三数之和</title>
    <link href="https://www.lwt-server.cn/2023/08/29/LeetCode_16/"/>
    <id>https://www.lwt-server.cn/2023/08/29/LeetCode_16/</id>
    <published>2023-08-29T14:10:55.000Z</published>
    <updated>2023-08-31T12:46:43.292Z</updated>
    
    <content type="html"><![CDATA[<h1 id="leetcode题解">LeetCode题解</h1><h2 id="最接近的三数之和">最接近的三数之和</h2><h3 id="题目预览">题目预览：</h3><p>给你一个长度为 <span class="math inline">\(n\)</span> 的整数数组<span class="math inline">\(nums\)</span> 和 一个目标值 <spanclass="math inline">\(target\)</span>。请你从 <spanclass="math inline">\(nums\)</span> 中选出三个整数，使它们的和与 <spanclass="math inline">\(target\)</span> 最接近。</p><p>返回这三个数的和。</p><p>假定每组输入只存在恰好一个解。</p><h4 id="示例-1">示例 1：</h4><blockquote><p><b>输入：</b>nums = [-1,2,1,-4], target = 1<br /><b>输出：</b>2<br /><b>解释：</b>与 target 最接近的和是 2 (-1 + 2 + 1 = 2) 。</p></blockquote><h4 id="示例-2">示例 2：</h4><blockquote><p><b>输入：</b>nums = [0,0,0], target = 1<br /><b>输出：</b>0</p></blockquote><p>提示：</p><ul><li><p><span class="math inline">\(3 &lt;= nums.length &lt;=1000\)</span></p></li><li><p><span class="math inline">\(-1000 &lt;= nums[i] &lt;=1000\)</span></p></li><li><p><span class="math inline">\(-10^4 &lt;= target &lt;=10^4\)</span></p></li></ul><hr /><p>以下是题解：</p><h3 id="解题思路">解题思路:</h3><p><b>排序 + 双指针</b></p><p>基本思路与前一题(<ahref="/2023/08/29/LeetCode_15/">LeetCode_15——三数之和</a>)类似</p><p>除此以外，还有以下几个优化：</p><p>设 <span class="math inline">\(s=nums[i]+nums[i+1]+nums[i+2]\)</span>。如果 <span class="math inline">\(s&gt;target\)</span>，由于数组已经排序，后面无论怎么选，选出的三个数的和不会比 <spanclass="math inline">\(s\)</span> 还小，所以不会找到比 <spanclass="math inline">\(s\)</span> 更优的答案了。所以只要 <spanclass="math inline">\(s&gt;target\)</span> ，就可以直接 <spanclass="math inline">\(break\)</span> 外层循环了。在 <spanclass="math inline">\(break\)</span> 前判断 <spanclass="math inline">\(s\)</span> 是否离 <spanclass="math inline">\(target\)</span> 更近，如果更近，那么更新答案为<span class="math inline">\(s\)</span>。</p><p>设 <span class="math inline">\(s=nums[i]+nums[n−2]+nums[n−1]\)</span>。如果 <span class="math inline">\(s&lt;targets\)</span>，由于数组已经排序，<span class="math inline">\(nums[i]\)</span>加上后面任意两个数都不超过 <spanclass="math inline">\(s\)</span>，所以下面的双指针就不需要跑了，无法找到比<span class="math inline">\(s\)</span> 更优的答案。但是后面还有更大的<span class="math inline">\(nums[i]\)</span> ，可能找到一个离 <spanclass="math inline">\(target\)</span>更近的三数之和，所以还需要继续枚举，<spanclass="math inline">\(continue\)</span> 外层循环。在 <spanclass="math inline">\(continue\)</span> 前判断 <spanclass="math inline">\(s\)</span> 是否离 <spanclass="math inline">\(target\)</span> 更近，如果更近，那么更新答案为<span class="math inline">\(s\)</span></p><p>如果 <span class="math inline">\(i&gt;0\)</span> 且 <spanclass="math inline">\(nums[i]=nums[i−1]\)</span> ，那么 <spanclass="math inline">\(nums[i]\)</span>和后面数字相加的结果，必然在之前算出过，所以无需跑下面的双指针，直接<span class="math inline">\(continue\)</span>外层循环。（可以放在循环开头判断。）</p><p>代码如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">threeSumClosest</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; nums, <span class="type">int</span> target)</span> </span>&#123;</span><br><span class="line">        <span class="built_in">sort</span>(nums.<span class="built_in">begin</span>(),nums.<span class="built_in">end</span>());</span><br><span class="line">        <span class="type">int</span> Len=nums.<span class="built_in">size</span>(),ans=<span class="number">1e7</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;Len<span class="number">-2</span>;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(i&gt;<span class="number">0</span>&amp;&amp;nums[i]==nums[i<span class="number">-1</span>])</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            <span class="type">int</span> Left=i+<span class="number">1</span>,Right=Len<span class="number">-1</span>;</span><br><span class="line">            <span class="keyword">while</span>(Left&lt;Right)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="type">int</span> sum=nums[i]+nums[Left]+nums[Right];</span><br><span class="line">                <span class="keyword">if</span>(<span class="built_in">abs</span>(sum-target)&lt;<span class="built_in">abs</span>(ans-target))</span><br><span class="line">                    ans=sum;</span><br><span class="line">                <span class="keyword">if</span>(sum&gt;target)</span><br><span class="line">                    Right--;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(sum&lt;target)</span><br><span class="line">                    Left++;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    <span class="keyword">return</span> target;</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h4 id="结果">结果</h4><p><a href="https://imgse.com/i/pPdteiR"><imgsrc="https://s1.ax1x.com/2023/08/29/pPdteiR.png"alt="pPdteiR.png" /></a></p><div style="text-align:right;"><p>本篇博客撰写于2023/8/29 22:10:55</p>]]></content>
    
    
    <summary type="html">最接近的三数之和</summary>
    
    
    
    <category term="程序" scheme="https://www.lwt-server.cn/categories/%E7%A8%8B%E5%BA%8F/"/>
    
    
    <category term="LeetCode题解" scheme="https://www.lwt-server.cn/tags/LeetCode%E9%A2%98%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode题解——823.带因子的二叉树</title>
    <link href="https://www.lwt-server.cn/2023/08/29/LeetCode_823/"/>
    <id>https://www.lwt-server.cn/2023/08/29/LeetCode_823/</id>
    <published>2023-08-29T05:06:24.000Z</published>
    <updated>2023-08-29T05:30:18.359Z</updated>
    
    <content type="html"><![CDATA[<h1 id="leetcode题解">LeetCode题解</h1><h2 id="带因子的二叉树">带因子的二叉树</h2><h3 id="题目预览">题目预览：</h3><p>给出一个含有不重复整数元素的数组 <spanclass="math inline">\(arr\)</span> ，每个整数 <spanclass="math inline">\(arr[i]\)</span> 均大于 <spanclass="math inline">\(1\)</span>。</p><p>用这些整数来构建二叉树，每个整数可以使用任意次数。其中：每个非叶结点的值应等于它的两个子结点的值的乘积。</p><p>满足条件的二叉树一共有多少个？答案可能很大，返回 <b>对 <spanclass="math inline">\(10^9 + 7\)</span> 取余</b> 的结果。</p><h4 id="示例-1">示例 1:</h4><blockquote><p><b>输入:</b> arr = [2, 4]<br /><b>输出:</b> 3<br /><b>解释:</b> 可以得到这些二叉树: [2], [4], [4, 2, 2]</p></blockquote><h4 id="示例-2">示例 2:</h4><blockquote><p><b>输入:</b> arr = [2, 4, 5, 10]<br /><b>输出:</b> 7<br /><b>解释:</b> 可以得到这些二叉树: [2], [4], [5], [10], [4, 2, 2], [10, 2,5], [10, 5, 2].</p></blockquote><p>提示：</p><ul><li><p><span class="math inline">\(1 &lt;= arr.length &lt;=1000\)</span></p></li><li><p><span class="math inline">\(2 &lt;= arr[i] &lt;=10^9\)</span></p></li><li><p><span class="math inline">\(arr\)</span> 中的所有值<b>互不相同</b></p></li></ul><hr /><p>以下是题解：</p><h3 id="思路-递推">思路: 递推</h3><p>对于每个根节点，由题意可以确定其值一定大于它的任意一个子节点，因此我们可以先将容器按<b>升序</b> 排序，然后依次计算其中的数据：</p><ul><li><p>我们可以直接停止构建，此时二叉树只有一个根节点，这算 <spanclass="math inline">\(1\)</span> 个方案。</p></li><li><p>记 <span class="math inline">\(val=arr[i]\)</span> 。枚举 <spanclass="math inline">\(x=arr[j]\)</span> ，如果 <spanclass="math inline">\(val\)</span> 能被 <spanclass="math inline">\(x\)</span> 整除且 <spanclass="math inline">\(\frac{val}{x}\)</span> 在 <spanclass="math inline">\(arr\)</span> 中（设其下标为 <spanclass="math inline">\(k\)</span>），那么分解 <spanclass="math inline">\(val=x×\frac{val}{x}\)</span> ，方案数等于 <spanclass="math inline">\(f[j]×f[k]\)</span> 。</p></li><li><p>把这些方案数全部加起来，就得到了 <spanclass="math inline">\(f[i]\)</span> 。</p></li><li><p>由于 <span class="math inline">\(j&lt;i\)</span> 且 <spanclass="math inline">\(k&lt;i\)</span> ，我们要从小到大遍历计算每个状态<span class="math inline">\(f[i]\)</span> 。</p></li></ul><p>初始值：所有 <span class="math inline">\(f[i]\)</span> 都初始化成<span class="math inline">\(1\)</span> 。</p><p>答案为: <span class="math inline">\(\sum_{n-1}^{i=0}f[i]\)</span></p><p>代码如下:</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">numFactoredBinaryTrees</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; arr)</span> </span>&#123;</span><br><span class="line">        <span class="type">const</span> <span class="type">int</span> Mod=<span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line">        <span class="built_in">sort</span>(arr.<span class="built_in">begin</span>(),arr.<span class="built_in">end</span>());</span><br><span class="line">        <span class="type">int</span> Len=arr.<span class="built_in">size</span>();</span><br><span class="line">        unordered_map&lt;<span class="type">int</span>,<span class="type">int</span>&gt; idx;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;Len;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            idx[arr[i]]=i;</span><br><span class="line">        &#125;</span><br><span class="line">        vector&lt;<span class="type">long</span> <span class="type">long</span>&gt;<span class="built_in">f</span>(Len,<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;Len;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> val=arr[i];</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;i;j++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="type">int</span> tmp=arr[j];</span><br><span class="line">                <span class="keyword">if</span>(val%tmp==<span class="number">0</span>&amp;&amp;idx.<span class="built_in">count</span>(val/tmp))</span><br><span class="line">                    f[i]+=f[j]*f[idx[val/tmp]];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">accumulate</span>(f.<span class="built_in">begin</span>(),f.<span class="built_in">end</span>(),<span class="number">0LL</span>)%Mod;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h4 id="结果">结果</h4><p><a href="https://imgse.com/i/pPaHwDK"><imgsrc="https://s1.ax1x.com/2023/08/29/pPaHwDK.png"alt="pPaHwDK.png" /></a></p><div style="text-align:right;"><p>本篇博客撰写于2023/8/29 13:06:24</p>]]></content>
    
    
    <summary type="html">带因子的二叉树</summary>
    
    
    
    <category term="程序" scheme="https://www.lwt-server.cn/categories/%E7%A8%8B%E5%BA%8F/"/>
    
    
    <category term="LeetCode题解" scheme="https://www.lwt-server.cn/tags/LeetCode%E9%A2%98%E8%A7%A3/"/>
    
    <category term="LeetCode每日一题" scheme="https://www.lwt-server.cn/tags/LeetCode%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode题解——15.三数之和</title>
    <link href="https://www.lwt-server.cn/2023/08/29/LeetCode_15/"/>
    <id>https://www.lwt-server.cn/2023/08/29/LeetCode_15/</id>
    <published>2023-08-29T01:09:05.000Z</published>
    <updated>2023-08-29T14:13:33.018Z</updated>
    
    <content type="html"><![CDATA[<h1 id="leetcode题解">LeetCode题解</h1><h2 id="三数之和">三数之和</h2><h3 id="题目预览">题目预览：</h3><p>给你一个整数数组 <span class="math inline">\(nums\)</span>，判断是否存在三元组 <span class="math inline">\([nums[i], nums[j],nums[k]]\)</span> 满足 <span class="math inline">\(i !=j\)</span>、<span class="math inline">\(i != k\)</span> 且 <spanclass="math inline">\(j != k\)</span> ，同时还满足 <spanclass="math inline">\(nums[i] + nums[j] + nums[k] == 0\)</span> 。请</p><p>你返回所有和为 <span class="math inline">\(0\)</span>且不重复的三元组。</p><p><b>注意：</b>答案中不可以包含重复的三元组。</p><h4 id="示例-1">示例 1：</h4><blockquote><p><b>输入：</b>nums = [-1,0,1,2,-1,-4]<br /><b>输出：</b>[[-1,-1,2],[-1,0,1]]<br /><b>解释：</b><br />nums[0] + nums[1] + nums[2] = (-1) + 0 + 1 = 0 。<br />nums[1] + nums[2] + nums[4] = 0 + 1 + (-1) = 0 。<br />nums[0] + nums[3] + nums[4] = (-1) + 2 + (-1) = 0 。<br />不同的三元组是 [-1,0,1] 和 [-1,-1,2] 。<br />注意，输出的顺序和三元组的顺序并不重要。</p></blockquote><h4 id="示例-2">示例 2：</h4><blockquote><p><b>输入：</b>nums = [0,1,1]<br /><b>输出：</b>[]<br /><b>解释：</b>唯一可能的三元组和不为 0 。</p></blockquote><h4 id="示例-3">示例 3：</h4><blockquote><p><b>输入：</b>nums = [0,0,0]<br /><b>输出：</b>[[0,0,0]]<br /><b>解释：</b>唯一可能的三元组和为 0 。</p></blockquote><p>提示：</p><ul><li><span class="math inline">\(3 &lt;= nums.length &lt;=3000\)</span></li><li><span class="math inline">\(-10^5 &lt;= nums[i] &lt;=10^5\)</span></li></ul><hr /><p>以下是题解：</p><h3 id="解题思路">解题思路:</h3><p><b>排序 + 双指针</b></p><p>本题的难点在于 <b>如何去除重复解</b> 。</p><h4 id="算法流程">算法流程：</h4><ol type="1"><li><p>特判，对于数组长度 <spanclass="math inline">\(n\)</span>，如果数组为 <spanclass="math inline">\(null\)</span> 或者数组长度小于 <spanclass="math inline">\(3\)</span>，返回 <spanclass="math inline">\([]\)</span>。</p></li><li><p>对数组进行排序。</p></li><li><p>遍历排序后数组：</p><ul><li><p>若 <spanclass="math inline">\(nums[i]&gt;0\)</span>：因为已经排序好，所以后面不可能有三个数加和等于<span class="math inline">\(0\)</span>，直接返回结果。</p></li><li><p>对于重复元素：跳过，避免出现重复解</p></li><li><p>令左指针 <span class="math inline">\(Left=i+1\)</span>，右指针<span class="math inline">\(Right=n−1\)</span>，当 <spanclass="math inline">\(Left&lt;Right\)</span> 时，执行循环：</p><ul><li><p>当 <spanclass="math inline">\(nums[i]+nums[Left]+nums[Right]==0\)</span>，执行循环，判断左界和右界是否和下一位置重复，去除重复解。并同时将<span class="math inline">\(Left,Right\)</span>移到下一位置，寻找新的解</p></li><li><p>若和大于 <span class="math inline">\(0\)</span>，说明 <spanclass="math inline">\(nums[Right]\)</span> 太大，<spanclass="math inline">\(Right\)</span> 左移</p></li><li><p>若和小于 <span class="math inline">\(0\)</span>，说明 <spanclass="math inline">\(nums[Left]\)</span> 太小，<spanclass="math inline">\(Left\)</span> 右移</p></li></ul></li></ul></li></ol><p>代码如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; <span class="built_in">threeSum</span>(vector&lt;<span class="type">int</span>&gt;&amp; nums) &#123;</span><br><span class="line">        <span class="type">int</span> Len=nums.<span class="built_in">size</span>(),Left=<span class="number">0</span>,Right=<span class="number">0</span>;</span><br><span class="line">        vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; ans;</span><br><span class="line">        <span class="keyword">if</span>(Len&lt;<span class="number">3</span>)</span><br><span class="line">            <span class="keyword">return</span> ans;</span><br><span class="line">        <span class="built_in">sort</span>(nums.<span class="built_in">begin</span>(),nums.<span class="built_in">end</span>());</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;Len;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(nums[i]&gt;<span class="number">0</span>)</span><br><span class="line">                <span class="keyword">return</span> ans;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(i&gt;<span class="number">0</span>&amp;&amp;nums[i<span class="number">-1</span>]==nums[i])</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                Left=i+<span class="number">1</span>,Right=Len<span class="number">-1</span>;</span><br><span class="line">                <span class="keyword">while</span>(Left&lt;Right)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="type">int</span> x=nums[i],y=nums[Left],z=nums[Right];</span><br><span class="line">                    <span class="keyword">if</span>(x+y+z==<span class="number">0</span>)</span><br><span class="line">                    &#123;</span><br><span class="line">                        ans.<span class="built_in">push_back</span>(&#123;nums[i],nums[Left],nums[Right]&#125;);</span><br><span class="line">                        <span class="keyword">while</span>(Left&lt;Right&amp;&amp;y==nums[Left+<span class="number">1</span>])</span><br><span class="line">                            Left++;</span><br><span class="line">                        <span class="keyword">while</span>(Left&lt;Right&amp;&amp;nums[Right<span class="number">-1</span>]==z)</span><br><span class="line">                            Right--;</span><br><span class="line">                        Left++;</span><br><span class="line">                        Right--;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span> <span class="keyword">if</span>(x+y+z&gt;<span class="number">0</span>)</span><br><span class="line">                        Right--;</span><br><span class="line">                    <span class="keyword">else</span></span><br><span class="line">                        Left++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">while</span>(i+<span class="number">1</span>&lt;Len&amp;&amp;nums[i]==nums[i+<span class="number">1</span>])</span><br><span class="line">                i++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h4 id="结果">结果</h4><p><a href="https://imgse.com/i/pPaR2wR"><imgsrc="https://s1.ax1x.com/2023/08/29/pPaR2wR.png"alt="pPaR2wR.png" /></a></p><div style="text-align:right;"><p>本篇博客撰写于2023/8/29 09:09:05</p>]]></content>
    
    
    <summary type="html">三数之和</summary>
    
    
    
    <category term="程序" scheme="https://www.lwt-server.cn/categories/%E7%A8%8B%E5%BA%8F/"/>
    
    
    <category term="LeetCode题解" scheme="https://www.lwt-server.cn/tags/LeetCode%E9%A2%98%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode题解——14.最长公共前缀</title>
    <link href="https://www.lwt-server.cn/2023/08/28/LeetCode_14/"/>
    <id>https://www.lwt-server.cn/2023/08/28/LeetCode_14/</id>
    <published>2023-08-28T12:46:08.000Z</published>
    <updated>2023-08-28T13:04:33.339Z</updated>
    
    <content type="html"><![CDATA[<h1 id="leetcode题解">LeetCode题解</h1><h2 id="最长公共前缀">最长公共前缀</h2><h3 id="题目预览">题目预览：</h3><p>编写一个函数来查找字符串数组中的 <b>最长公共前缀</b> 。</p><p>如果不存在公共前缀，返回空字符串 <code>""</code>。</p><h4 id="示例-1">示例 1：</h4><blockquote><p><b>输入：</b>strs = ["flower","flow","flight"] <b>输出：</b>"fl"</p></blockquote><h4 id="示例-2">示例 2：</h4><blockquote><p><b>输入：</b>strs = ["dog","racecar","car"] <b>输出：</b>""<b>解释：</b>输入不存在公共前缀。</p></blockquote><p>提示：</p><ul><li><p><span class="math inline">\(1 &lt;= strs.length &lt;=200\)</span></p></li><li><p><span class="math inline">\(0 &lt;= strs[i].length &lt;=200\)</span></p></li><li><p><span class="math inline">\(strs[i]仅由小写英文字母组成\)</span></p></li></ul><hr /><p>以下是题解：</p><h3 id="解题思路">解题思路:</h3><p>本题思路较清晰，对于若干个字符串，我们可以先储存第一个的字符串的字符，然后依次比较后面字符串的相应部分。</p><p>特殊情况包括： 1. 字符串容器为空：返回<code>""</code> 2.字符串为空：返回<code>""</code></p><p>代码如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">string <span class="title">longestCommonPrefix</span><span class="params">(vector&lt;string&gt;&amp; strs)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> Len=strs.<span class="built_in">size</span>(),tag=<span class="number">0</span>,flag=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(Len==<span class="number">1</span>)</span><br><span class="line">            <span class="keyword">return</span> strs[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">if</span>(strs[<span class="number">0</span>]==<span class="string">&quot;&quot;</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">        string ans=<span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="type">char</span> tmp=<span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">        flag=strs[<span class="number">0</span>].<span class="built_in">length</span>();</span><br><span class="line">        <span class="keyword">while</span>(tag&lt;flag)</span><br><span class="line">        &#123;</span><br><span class="line">            tmp=strs[<span class="number">0</span>][tag];</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;Len;i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(tag&gt;=strs[i].<span class="built_in">length</span>())</span><br><span class="line">                    <span class="keyword">return</span> ans;</span><br><span class="line">                <span class="keyword">if</span>(strs[i][tag]!=tmp)</span><br><span class="line">                    <span class="keyword">return</span> ans;</span><br><span class="line">            &#125;</span><br><span class="line">            ans+=tmp;</span><br><span class="line">            tag++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h4 id="结果">结果</h4><p><a href="https://imgse.com/i/pPaNpVJ"><imgsrc="https://s1.ax1x.com/2023/08/28/pPaNpVJ.png"alt="pPaNpVJ.png" /></a></p><div style="text-align:right;"><p>本篇博客撰写于2023/8/28 20:46:08</p>]]></content>
    
    
    <summary type="html">最长公共前缀</summary>
    
    
    
    <category term="程序" scheme="https://www.lwt-server.cn/categories/%E7%A8%8B%E5%BA%8F/"/>
    
    
    <category term="LeetCode题解" scheme="https://www.lwt-server.cn/tags/LeetCode%E9%A2%98%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode题解——13.罗马数字转整数</title>
    <link href="https://www.lwt-server.cn/2023/08/28/LeetCode_13/"/>
    <id>https://www.lwt-server.cn/2023/08/28/LeetCode_13/</id>
    <published>2023-08-28T11:46:48.000Z</published>
    <updated>2023-08-31T12:47:06.139Z</updated>
    
    <content type="html"><![CDATA[<h1 id="leetcode题解">LeetCode题解</h1><h2 id="罗马数字转整数">罗马数字转整数</h2><h3 id="题目预览">题目预览：</h3><p>罗马数字包含以下七种字符: <spanclass="math inline">\(I\)</span>，<spanclass="math inline">\(V\)</span>，<spanclass="math inline">\(X\)</span>，<spanclass="math inline">\(L\)</span>，<spanclass="math inline">\(C\)</span>，<span class="math inline">\(D\)</span>和 <span class="math inline">\(M\)</span>。</p><table><thead><tr class="header"><th style="text-align: center;">字符</th><th style="text-align: center;">数值</th></tr></thead><tbody><tr class="odd"><td style="text-align: center;">I</td><td style="text-align: center;">1</td></tr><tr class="even"><td style="text-align: center;">V</td><td style="text-align: center;">5</td></tr><tr class="odd"><td style="text-align: center;">X</td><td style="text-align: center;">10</td></tr><tr class="even"><td style="text-align: center;">L</td><td style="text-align: center;">50</td></tr><tr class="odd"><td style="text-align: center;">C</td><td style="text-align: center;">100</td></tr><tr class="even"><td style="text-align: center;">D</td><td style="text-align: center;">500</td></tr><tr class="odd"><td style="text-align: center;">M</td><td style="text-align: center;">1000</td></tr></tbody></table><p>例如， 罗马数字 <span class="math inline">\(2\)</span> 写做 <spanclass="math inline">\(II\)</span> ，即为两个并列的 <spanclass="math inline">\(1\)</span>。<spanclass="math inline">\(12\)</span> 写做 <spanclass="math inline">\(XII\)</span> ，即为 <span class="math inline">\(X+ II\)</span> 。 <span class="math inline">\(27\)</span> 写做 <spanclass="math inline">\(XXVII\)</span>, 即为 <spanclass="math inline">\(XX + V + II\)</span> 。</p><p>通常情况下，罗马数字中小的数字在大的数字的右边。但也存在特例，例如<span class="math inline">\(4\)</span> 不写做 <spanclass="math inline">\(IIII\)</span>，而是 <spanclass="math inline">\(IV\)</span>。数字 <spanclass="math inline">\(1\)</span> 在数字 <spanclass="math inline">\(5\)</span> 的左边，所表示的数等于大数 <spanclass="math inline">\(5\)</span> 减小数 <spanclass="math inline">\(1\)</span> 得到的数值 <spanclass="math inline">\(4\)</span> 。同样地，数字 <spanclass="math inline">\(9\)</span> 表示为 <spanclass="math inline">\(IX\)</span>。这个特殊的规则只适用于以下六种情况：</p><ul><li><p><span class="math inline">\(I\)</span> 可以放在 <spanclass="math inline">\(V\ (5)\)</span> 和 <span class="math inline">\(X\(10)\)</span> 的左边，来表示 <span class="math inline">\(4\)</span> 和<span class="math inline">\(9\)</span>。</p></li><li><p><span class="math inline">\(X\)</span> 可以放在 <spanclass="math inline">\(L\ (50)\)</span> 和 <span class="math inline">\(C\(100)\)</span> 的左边，来表示 <span class="math inline">\(40\)</span> 和<span class="math inline">\(90\)</span>。</p></li><li><p><span class="math inline">\(C\)</span> 可以放在 <spanclass="math inline">\(D\ (500)\)</span> 和 <spanclass="math inline">\(M\ (1000)\)</span> 的左边，来表示 <spanclass="math inline">\(400\)</span> 和 <spanclass="math inline">\(900\)</span>。</p></li></ul><p>给定一个罗马数字，将其转换成整数。</p><h4 id="示例-1">示例 1:</h4><blockquote><p><b>输入:</b> s = "III"<br /><b>输出:</b> 3</p></blockquote><h4 id="示例-2">示例 2:</h4><blockquote><p><b>输入:</b> s = "IV"<br /><b>输出:</b> 4</p></blockquote><h4 id="示例-3">示例 3:</h4><blockquote><p><b>输入:</b> s = "IX"<br /><b>输出:</b> 9</p></blockquote><h4 id="示例-4">示例 4:</h4><blockquote><p><b>输入:</b> s = "LVIII"<br /><b>输出:</b> 58<br /><b>解释:</b> L = 50, V= 5, III = 3.</p></blockquote><h4 id="示例-5">示例 5:</h4><blockquote><p><b>输入:</b> s = "MCMXCIV"<br /><b>输出:</b> 1994<br /><b>解释:</b> M = 1000, CM = 900, XC = 90, IV = 4.</p></blockquote><p>提示：</p><ul><li><p><span class="math inline">\(1 &lt;= s.length &lt;=15\)</span></p></li><li><p><span class="math inline">\(s 仅含字符 (&#39;I&#39;, &#39;V&#39;,&#39;X&#39;, &#39;L&#39;, &#39;C&#39;, &#39;D&#39;,&#39;M&#39;)\)</span></p></li><li><p>题目数据保证 <span class="math inline">\(s\)</span>是一个有效的罗马数字，且表示整数在范围 <span class="math inline">\([1,3999]\)</span> 内</p></li><li><p>题目所给测试用例皆符合罗马数字书写规则，不会出现跨位等情况。</p></li><li><p><span class="math inline">\(IL\)</span> 和 <spanclass="math inline">\(IM\)</span> 这样的例子并不符合题目要求，<spanclass="math inline">\(49\)</span> 应该写作 <spanclass="math inline">\(XLIX\)</span> ，<spanclass="math inline">\(999\)</span> 应该写作 <spanclass="math inline">\(CMXCIX\)</span> 。</p></li></ul><hr /><p>以下是题解：</p><h3 id="解题思路">解题思路:</h3><p>该题与前一题(<ahref="/2023/08/28/LeetCode_12/">LeetCode_12——整数转罗马数字</a>)十分相似，过程也完全是之前的逆过程，由此我们可以轻松得出相应的计算过程，即：依次遍历每一个字符，对于一些特殊字符（如<spanclass="math inline">\(I\)</span>，<spanclass="math inline">\(X\)</span>，<spanclass="math inline">\(C\)</span>），我们多搜索一位以进行匹配。</p><p>代码如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">romanToInt</span><span class="params">(string s)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> Len=s.<span class="built_in">length</span>(),Num=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;Len;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(s[i]==<span class="string">&#x27;I&#x27;</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(s[i+<span class="number">1</span>]==<span class="string">&#x27;V&#x27;</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    Num+=<span class="number">4</span>;</span><br><span class="line">                    i++;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(s[i+<span class="number">1</span>]==<span class="string">&#x27;X&#x27;</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    Num+=<span class="number">9</span>;</span><br><span class="line">                    i++;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    Num+=<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(s[i]==<span class="string">&#x27;V&#x27;</span>)</span><br><span class="line">                Num+=<span class="number">5</span>;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(s[i]==<span class="string">&#x27;X&#x27;</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(s[i+<span class="number">1</span>]==<span class="string">&#x27;L&#x27;</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    Num+=<span class="number">40</span>;</span><br><span class="line">                    i++;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(s[i+<span class="number">1</span>]==<span class="string">&#x27;C&#x27;</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    Num+=<span class="number">90</span>;</span><br><span class="line">                    i++;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    Num+=<span class="number">10</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(s[i]==<span class="string">&#x27;L&#x27;</span>)</span><br><span class="line">                Num+=<span class="number">50</span>;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(s[i]==<span class="string">&#x27;C&#x27;</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(s[i+<span class="number">1</span>]==<span class="string">&#x27;D&#x27;</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    Num+=<span class="number">400</span>;</span><br><span class="line">                    i++;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(s[i+<span class="number">1</span>]==<span class="string">&#x27;M&#x27;</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    Num+=<span class="number">900</span>;</span><br><span class="line">                    i++;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    Num+=<span class="number">100</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(s[i]==<span class="string">&#x27;D&#x27;</span>)</span><br><span class="line">                Num+=<span class="number">500</span>;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(s[i]==<span class="string">&#x27;M&#x27;</span>)</span><br><span class="line">                Num+=<span class="number">1000</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> Num;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h4 id="结果">结果</h4><p><a href="https://imgse.com/i/pPaG9pT"><imgsrc="https://s1.ax1x.com/2023/08/28/pPaG9pT.png"alt="pPaG9pT.png" /></a></p><div style="text-align:right;"><p>本篇博客撰写于2023/8/28 19:46:48</p>]]></content>
    
    
    <summary type="html">罗马数字转整数</summary>
    
    
    
    <category term="程序" scheme="https://www.lwt-server.cn/categories/%E7%A8%8B%E5%BA%8F/"/>
    
    
    <category term="LeetCode题解" scheme="https://www.lwt-server.cn/tags/LeetCode%E9%A2%98%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode题解——12.整数转罗马数字</title>
    <link href="https://www.lwt-server.cn/2023/08/28/LeetCode_12/"/>
    <id>https://www.lwt-server.cn/2023/08/28/LeetCode_12/</id>
    <published>2023-08-28T09:13:06.000Z</published>
    <updated>2023-08-28T13:01:16.205Z</updated>
    
    <content type="html"><![CDATA[<h1 id="leetcode题解">LeetCode题解</h1><h2 id="整数转罗马数字">整数转罗马数字</h2><h3 id="题目预览">题目预览：</h3><p>罗马数字包含以下七种字符： <span class="math inline">\(I\)</span>，<span class="math inline">\(V\)</span>， <spanclass="math inline">\(X\)</span>， <spanclass="math inline">\(L\)</span>，<spanclass="math inline">\(C\)</span>，<span class="math inline">\(D\)</span>和 <span class="math inline">\(M\)</span>。</p><table><thead><tr class="header"><th style="text-align: center;">字符</th><th style="text-align: center;">数值</th></tr></thead><tbody><tr class="odd"><td style="text-align: center;">I</td><td style="text-align: center;">1</td></tr><tr class="even"><td style="text-align: center;">V</td><td style="text-align: center;">5</td></tr><tr class="odd"><td style="text-align: center;">X</td><td style="text-align: center;">10</td></tr><tr class="even"><td style="text-align: center;">L</td><td style="text-align: center;">50</td></tr><tr class="odd"><td style="text-align: center;">C</td><td style="text-align: center;">100</td></tr><tr class="even"><td style="text-align: center;">D</td><td style="text-align: center;">500</td></tr><tr class="odd"><td style="text-align: center;">M</td><td style="text-align: center;">1000</td></tr></tbody></table><p>例如， 罗马数字 <span class="math inline">\(2\)</span> 写做 <spanclass="math inline">\(II\)</span> ，即为两个并列的 <spanclass="math inline">\(1\)</span>。<spanclass="math inline">\(12\)</span> 写做 <spanclass="math inline">\(XII\)</span> ，即为 <span class="math inline">\(X+ II\)</span> 。 <span class="math inline">\(27\)</span> 写做 <spanclass="math inline">\(XXVII\)</span>, 即为 <spanclass="math inline">\(XX + V + II\)</span> 。</p><p>通常情况下，罗马数字中小的数字在大的数字的右边。但也存在特例，例如<span class="math inline">\(4\)</span> 不写做 <spanclass="math inline">\(IIII\)</span>，而是 <spanclass="math inline">\(IV\)</span>。数字 <spanclass="math inline">\(1\)</span> 在数字 <spanclass="math inline">\(5\)</span> 的左边，所表示的数等于大数 <spanclass="math inline">\(5\)</span> 减小数 <spanclass="math inline">\(1\)</span> 得到的数值 <spanclass="math inline">\(4\)</span> 。同样地，数字 <spanclass="math inline">\(9\)</span> 表示为 <spanclass="math inline">\(IX\)</span>。这个特殊的规则只适用于以下六种情况：</p><ul><li><p><span class="math inline">\(I\)</span> 可以放在 <spanclass="math inline">\(V\ (5)\)</span> 和 <span class="math inline">\(X\(10)\)</span> 的左边，来表示 <span class="math inline">\(4\)</span> 和<span class="math inline">\(9\)</span>。</p></li><li><p><span class="math inline">\(X\)</span> 可以放在 <spanclass="math inline">\(L\ (50)\)</span> 和 <span class="math inline">\(C\(100)\)</span> 的左边，来表示 <span class="math inline">\(40\)</span> 和<span class="math inline">\(90\)</span>。</p></li><li><p><span class="math inline">\(C\)</span> 可以放在 <spanclass="math inline">\(D\ (500)\)</span> 和 <spanclass="math inline">\(M\ (1000)\)</span> 的左边，来表示 <spanclass="math inline">\(400\)</span> 和 <spanclass="math inline">\(900\)</span>。</p></li></ul><p>给你一个整数，将其转为罗马数字。</p><h4 id="示例-1">示例 1:</h4><p><b>输入:</b> num = 3 <b>输出:</b> "III"</p><h4 id="示例-2">示例 2:</h4><p><b>输入:</b> num = 4 <b>输出:</b> "IV"</p><h4 id="示例-3">示例 3:</h4><p><b>输入:</b> num = 9 <b>输出:</b> "IX"</p><h4 id="示例-4">示例 4:</h4><p><b>输入:</b> num = 58 <b>输出:</b> "LVIII" <b>解释:</b> L = 50, V =5, III = 3.</p><h4 id="示例-5">示例 5:</h4><p><b>输入:</b> num = 1994 <b>输出:</b> "MCMXCIV" <b>解释:</b> M = 1000,CM = 900, XC = 90, IV = 4.</p><p>提示：</p><ul><li><span class="math inline">\(1 &lt;= num &lt;= 3999\)</span></li></ul><hr /><p>以下是题解：</p><h3 id="解题思路模拟">解题思路:模拟：</h3><p>按照题意，优先满足大数对应的转换可以保证答案正确，剩下的只是简单的模拟：</p><p>代码如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">string <span class="title">intToRoman</span><span class="params">(<span class="type">int</span> num)</span> </span>&#123;</span><br><span class="line">        string ans;</span><br><span class="line">        <span class="keyword">while</span>(num&gt;<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(num<span class="number">-1000</span>&gt;=<span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                num-=<span class="number">1000</span>;</span><br><span class="line">                ans+=<span class="string">&#x27;M&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(num<span class="number">-900</span>&gt;=<span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                num-=<span class="number">900</span>;</span><br><span class="line">                ans+=<span class="string">&quot;CM&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(num<span class="number">-500</span>&gt;=<span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                num-=<span class="number">500</span>;</span><br><span class="line">                ans+=<span class="string">&quot;D&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(num<span class="number">-400</span>&gt;=<span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                num-=<span class="number">400</span>;</span><br><span class="line">                ans+=<span class="string">&quot;CD&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(num<span class="number">-100</span>&gt;=<span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                num-=<span class="number">100</span>;</span><br><span class="line">                ans+=<span class="string">&quot;C&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(num<span class="number">-90</span>&gt;=<span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                num-=<span class="number">90</span>;</span><br><span class="line">                ans+=<span class="string">&quot;XC&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(num<span class="number">-50</span>&gt;=<span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                num-=<span class="number">50</span>;</span><br><span class="line">                ans+=<span class="string">&quot;L&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(num<span class="number">-40</span>&gt;=<span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                num-=<span class="number">40</span>;</span><br><span class="line">                ans+=<span class="string">&quot;XL&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(num<span class="number">-10</span>&gt;=<span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                num-=<span class="number">10</span>;</span><br><span class="line">                ans+=<span class="string">&quot;X&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(num<span class="number">-9</span>&gt;=<span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                num-=<span class="number">9</span>;</span><br><span class="line">                ans+=<span class="string">&quot;IX&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(num<span class="number">-5</span>&gt;=<span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                num-=<span class="number">5</span>;</span><br><span class="line">                ans+=<span class="string">&quot;V&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(num<span class="number">-4</span>&gt;=<span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                num-=<span class="number">4</span>;</span><br><span class="line">                ans+=<span class="string">&quot;IV&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                num-=<span class="number">1</span>;</span><br><span class="line">                ans+=<span class="string">&quot;I&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h4 id="结果">结果：</h4><p><a href="https://imgse.com/i/pPaKb6A"><imgsrc="https://s1.ax1x.com/2023/08/28/pPaKb6A.png"alt="pPaKb6A.png" /></a></p><div style="text-align:right;"><p>本篇博客撰写于2023/8/28 17:13:06</p>]]></content>
    
    
    <summary type="html">整数转罗马数字</summary>
    
    
    
    <category term="程序" scheme="https://www.lwt-server.cn/categories/%E7%A8%8B%E5%BA%8F/"/>
    
    
    <category term="LeetCode题解" scheme="https://www.lwt-server.cn/tags/LeetCode%E9%A2%98%E8%A7%A3/"/>
    
  </entry>
  
</feed>
