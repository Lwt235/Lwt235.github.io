<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Lwt&#39;s Blog</title>
  
  
  <link href="https://www.lwt-server.cn/atom.xml" rel="self"/>
  
  <link href="https://www.lwt-server.cn/"/>
  <updated>2023-08-31T02:19:52.174Z</updated>
  <id>https://www.lwt-server.cn/</id>
  
  <author>
    <name>Lwt</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>LeetCode题解——1761.一个图中连通三元组的最小度数</title>
    <link href="https://www.lwt-server.cn/2023/08/31/LeetCode_1761/"/>
    <id>https://www.lwt-server.cn/2023/08/31/LeetCode_1761/</id>
    <published>2023-08-31T02:09:24.000Z</published>
    <updated>2023-08-31T02:19:52.174Z</updated>
    
    <content type="html"><![CDATA[<h1 id="LeetCode题解"><a href="#LeetCode题解" class="headerlink" title="LeetCode题解"></a>LeetCode题解</h1><h2 id="一个图中连通三元组的最小度数"><a href="#一个图中连通三元组的最小度数" class="headerlink" title="一个图中连通三元组的最小度数"></a>一个图中连通三元组的最小度数</h2><h3 id="题目预览："><a href="#题目预览：" class="headerlink" title="题目预览："></a>题目预览：</h3><p>给你一个无向图，整数 $n$ 表示图中节点的数目，$edges$ 数组表示图中的边，其中 $edges[i] = [ui, vi]$ ，表示 $ui$ 和 $vi$ 之间有一条无向边。</p><p>一个 <b>连通三元组</b> 指的是 <b>三个</b> 节点组成的集合且这三个点之间 <b>两两</b> 有边。</p><p><b>连通三元组的度数</b> 是所有满足此条件的边的数目：一个顶点在这个三元组内，而另一个顶点不在这个三元组内。</p><p>请你返回所有连通三元组中度数的 <b>最小值</b> ，如果图中没有连通三元组，那么返回 $-1$ 。</p><h4 id="示例-1："><a href="#示例-1：" class="headerlink" title="示例 1："></a>示例 1：</h4><p><a href="https://imgse.com/i/pPwaoaF"><img src="https://s1.ax1x.com/2023/08/31/pPwaoaF.png" alt="pPwaoaF.png"></a></p><blockquote><p><b>输入：</b>n = 6, edges = [[1,2],[1,3],[3,2],[4,1],[5,2],[3,6]]<br><b>输出：</b>3<br><b>解释：</b>只有一个三元组 [1,2,3] 。构成度数的边在上图中已被加粗。</p></blockquote><h4 id="示例-2："><a href="#示例-2：" class="headerlink" title="示例 2："></a>示例 2：</h4><p><a href="https://imgse.com/i/pPwaT54"><img src="https://s1.ax1x.com/2023/08/31/pPwaT54.png" alt="pPwaT54.png"></a></p><blockquote><p><b>输入：</b>n = 7, edges = [[1,3],[4,1],[4,3],[2,5],[5,6],[6,7],[7,5],[2,6]]<br><b>输出：</b>0<br><b>解释：</b>有 3 个三元组：<br>    1) [1,4,3]，度数为 0 。<br>    2) [2,5,6]，度数为 2 。<br>    3) [5,6,7]，度数为 2 。  </p></blockquote><p>提示：</p><ul><li><p>$2 &lt;= n &lt;= 400$</p></li><li><p>$edges[i].length == 2$</p></li><li><p>$1 &lt;= edges.length &lt;= n * (n-1) / 2$</p></li><li><p>$1 &lt;= ui, vi &lt;= n$</p></li><li><p>$ui != vi$</p></li><li><p>图中没有重复的边。</p></li></ul><hr><p>以下是题解：</p><h3 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路:"></a>解题思路:</h3><p>身为蒟蒻的我在面对这题的时候只能想到用三重循环对每一个可能的三元组进行判断，通过提前维护一个储存每一个点的度数的容器来计算最小度数</p><p>代码如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">minTrioDegree</span><span class="params">(<span class="type">int</span> n, vector&lt;vector&lt;<span class="type">int</span>&gt;&gt;&amp; edges)</span> </span>&#123;</span><br><span class="line">        vector&lt;vector&lt;<span class="type">int</span>&gt;&gt;<span class="built_in">map</span>(n,<span class="built_in">vector</span>&lt;<span class="type">int</span>&gt;(n));</span><br><span class="line">        vector&lt;<span class="type">int</span>&gt;<span class="built_in">degree</span>(n);</span><br><span class="line">        <span class="type">int</span> sumEdge=edges.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;sumEdge;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> x=edges[i][<span class="number">0</span>]<span class="number">-1</span>,y=edges[i][<span class="number">1</span>]<span class="number">-1</span>;</span><br><span class="line">            map[x][y]=<span class="number">1</span>;</span><br><span class="line">            map[y][x]=<span class="number">1</span>;</span><br><span class="line">            degree[x]++;</span><br><span class="line">            degree[y]++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> ans=<span class="number">0x7fffffff</span>;  </span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n<span class="number">-2</span>;i++)</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=i+<span class="number">1</span>;j&lt;n<span class="number">-1</span>;j++)</span><br><span class="line">                <span class="keyword">if</span>(map[i][j]==<span class="number">1</span>)</span><br><span class="line">                    <span class="keyword">for</span>(<span class="type">int</span> k=j+<span class="number">1</span>;k&lt;n;k++)</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="keyword">if</span>(map[i][k]==<span class="number">1</span>&amp;&amp;map[j][k]==<span class="number">1</span>)</span><br><span class="line">                            ans=<span class="built_in">min</span>(ans,degree[i]+degree[j]+degree[k]<span class="number">-6</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">        <span class="keyword">if</span>(ans==<span class="number">0x7fffffff</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h4 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h4><p><a href="https://imgse.com/i/pPwaIVU"><img src="https://s1.ax1x.com/2023/08/31/pPwaIVU.png" alt="pPwaIVU.png"></a></p><p><div style="text-align:right;">本篇博客撰写于2023/8/31 10:09:24</p>]]></content>
    
    
    <summary type="html">一个图中连通三元组的最小度数</summary>
    
    
    
    <category term="程序" scheme="https://www.lwt-server.cn/categories/%E7%A8%8B%E5%BA%8F/"/>
    
    
    <category term="LeetCode题解" scheme="https://www.lwt-server.cn/tags/LeetCode%E9%A2%98%E8%A7%A3/"/>
    
    <category term="LeetCode每日一题" scheme="https://www.lwt-server.cn/tags/LeetCode%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode题解——18.四数之和</title>
    <link href="https://www.lwt-server.cn/2023/08/30/LeetCode_18/"/>
    <id>https://www.lwt-server.cn/2023/08/30/LeetCode_18/</id>
    <published>2023-08-30T14:45:26.000Z</published>
    <updated>2023-08-30T15:27:03.430Z</updated>
    
    <content type="html"><![CDATA[<h1 id="LeetCode题解"><a href="#LeetCode题解" class="headerlink" title="LeetCode题解"></a>LeetCode题解</h1><h2 id="四数之和"><a href="#四数之和" class="headerlink" title="四数之和"></a>四数之和</h2><h3 id="题目预览："><a href="#题目预览：" class="headerlink" title="题目预览："></a>题目预览：</h3><p>给你一个由 $n$ 个整数组成的数组 $nums$ ，和一个目标值 $target$ 。请你找出并返回满足下述全部条件且不重复的四元组 $[nums[a], nums[b], nums[c], nums[d]]$ （若两个四元组元素一一对应，则认为两个四元组重复）：</p><ul><li><p>$0 &lt;= a, b, c, d &lt; n$</p></li><li><p>$a$ 、$b$ 、$c$ 和 $d$ 互不相同</p></li><li><p>$nums[a] + nums[b] + nums[c] + nums[d] == target$</p></li></ul><p>你可以按 <b>任意顺序</b> 返回答案 。</p><h4 id="示例-1："><a href="#示例-1：" class="headerlink" title="示例 1："></a>示例 1：</h4><blockquote><p><b>输入：</b>nums = [1,0,-1,0,-2,2], target = 0<br><b>输出：</b>[[-2,-1,1,2],[-2,0,0,2],[-1,0,0,1]]</p></blockquote><h4 id="示例-2："><a href="#示例-2：" class="headerlink" title="示例 2："></a>示例 2：</h4><blockquote><p><b>输入：</b>nums = [2,2,2,2,2], target = 8<br><b>输出：</b>[[2,2,2,2]]</p></blockquote><p>提示：</p><ul><li><p>$1 &lt;= nums.length &lt;= 200$</p></li><li><p>$-10^9 &lt;= nums[i] &lt;= 10^9$</p></li><li><p>$-10^9 &lt;= target &lt;= 10^9$</p></li></ul><hr><p>以下是题解：</p><h3 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路:"></a>解题思路:</h3><p><b>排序 + 双指针</b></p><p>基本思路与又是与(<a href="/2023/08/29/LeetCode_15/">LeetCode_15</a>)十分相似，因此在这里附上代码，具体思路详见(<a href="/2023/08/29/LeetCode_15/">LeetCode_15</a>)。</p><p>代码如下：</p><blockquote><p>这里做了一部分优化，可省去</p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; <span class="built_in">fourSum</span>(vector&lt;<span class="type">int</span>&gt;&amp; nums, <span class="type">int</span> target) &#123;</span><br><span class="line">        <span class="built_in">sort</span>(nums.<span class="built_in">begin</span>(), nums.<span class="built_in">end</span>());</span><br><span class="line">        <span class="type">int</span> n = nums.<span class="built_in">size</span>();</span><br><span class="line">        vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; ans;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> a = <span class="number">0</span>; a &lt; n - <span class="number">3</span>; a++) &#123;</span><br><span class="line">            <span class="type">long</span> <span class="type">long</span> x = nums[a];</span><br><span class="line">            <span class="keyword">if</span>(a &amp;&amp; x == nums[a - <span class="number">1</span>]) <span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">if</span>(x + nums[a + <span class="number">1</span>] + nums[a + <span class="number">2</span>] + nums[a + <span class="number">3</span>] &gt; target) <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">if</span>(x + nums[n - <span class="number">1</span>] + nums[n - <span class="number">2</span>] + nums[n - <span class="number">3</span>] &lt; target) <span class="keyword">continue</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> b = a + <span class="number">1</span>; b &lt; n - <span class="number">2</span>; b++)&#123;</span><br><span class="line">                <span class="type">long</span> <span class="type">long</span> y = nums[b];</span><br><span class="line">                <span class="keyword">if</span>(b &gt; a + <span class="number">1</span> &amp;&amp; y == nums[b - <span class="number">1</span>]) <span class="keyword">continue</span>;</span><br><span class="line">                <span class="keyword">if</span>(x + y + nums[b + <span class="number">1</span>] + nums[b + <span class="number">2</span>] &gt; target) <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">if</span>(x + y + nums[n - <span class="number">1</span>] + nums[n - <span class="number">2</span>] &lt; target) <span class="keyword">continue</span>;</span><br><span class="line"></span><br><span class="line">                <span class="type">int</span> c = b + <span class="number">1</span>, d = n - <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">while</span>(c &lt; d) &#123;</span><br><span class="line">                    <span class="type">long</span> <span class="type">long</span> s = x + y + nums[c] + nums[d];</span><br><span class="line">                    <span class="keyword">if</span>(s &gt; target) d--;</span><br><span class="line">                    <span class="keyword">else</span> <span class="keyword">if</span>(s &lt; target) c++;</span><br><span class="line">                    <span class="keyword">else</span> &#123;</span><br><span class="line">                        ans.<span class="built_in">push_back</span>(&#123;(<span class="type">int</span>)x, (<span class="type">int</span>)y, nums[c], nums[d]&#125;);</span><br><span class="line">                        <span class="keyword">for</span>(++c; c &lt; d &amp;&amp; nums[c] == nums[c - <span class="number">1</span>]; ++c);</span><br><span class="line">                        <span class="keyword">for</span>(--d; c &lt; d &amp;&amp; nums[c] == nums[d + <span class="number">1</span>]; --d);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h4 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h4><p><a href="https://imgse.com/i/pPwMk7t"><img src="https://s1.ax1x.com/2023/08/30/pPwMk7t.png" alt="pPwMk7t.png"></a></p><p><div style="text-align:right;">本篇博客撰写于2023/8/30 22:45:26</p>]]></content>
    
    
    <summary type="html">四数之和</summary>
    
    
    
    <category term="程序" scheme="https://www.lwt-server.cn/categories/%E7%A8%8B%E5%BA%8F/"/>
    
    
    <category term="LeetCode题解" scheme="https://www.lwt-server.cn/tags/LeetCode%E9%A2%98%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode题解——17.电话号码的字母组合</title>
    <link href="https://www.lwt-server.cn/2023/08/30/LeetCode_17/"/>
    <id>https://www.lwt-server.cn/2023/08/30/LeetCode_17/</id>
    <published>2023-08-30T09:32:15.000Z</published>
    <updated>2023-08-30T10:54:50.018Z</updated>
    
    <content type="html"><![CDATA[<h1 id="LeetCode题解"><a href="#LeetCode题解" class="headerlink" title="LeetCode题解"></a>LeetCode题解</h1><h2 id="最接近的三数之和"><a href="#最接近的三数之和" class="headerlink" title="最接近的三数之和"></a>最接近的三数之和</h2><h3 id="题目预览："><a href="#题目预览：" class="headerlink" title="题目预览："></a>题目预览：</h3><p>给定一个仅包含数字 $2-9$ 的字符串，返回所有它能表示的字母组合。答案可以按 <b>任意顺序</b> 返回。</p><p>给出数字到字母的映射如下（与电话按键相同）。注意 $1$ 不对应任何字母。</p><p><a href="https://imgse.com/i/pPwSLPP"><img src="https://s1.ax1x.com/2023/08/30/pPwSLPP.png" alt="pPwSLPP.png"></a></p><h4 id="示例-1："><a href="#示例-1：" class="headerlink" title="示例 1："></a>示例 1：</h4><blockquote><p><b>输入：</b>digits = “23”<br><b>输出：</b>[“ad”,”ae”,”af”,”bd”,”be”,”bf”,”cd”,”ce”,”cf”]  </p></blockquote><h4 id="示例-2："><a href="#示例-2：" class="headerlink" title="示例 2："></a>示例 2：</h4><blockquote><p><b>输入：</b>digits = “”<br><b>输出：</b>[]  </p></blockquote><h4 id="示例-3："><a href="#示例-3：" class="headerlink" title="示例 3："></a>示例 3：</h4><blockquote><p><b>输入：</b>digits = “2”<br><b>输出：</b>[“a”,”b”,”c”]  </p></blockquote><p>提示：</p><ul><li>$0 &lt;= digits.length &lt;= 4$</li><li>$digits[i]$ 是范围 $[‘2’, ‘9’]$ 的一个数字。</li></ul><hr><p>以下是题解：</p><h3 id="解题思路-递归"><a href="#解题思路-递归" class="headerlink" title="解题思路:递归"></a>解题思路:递归</h3><p>本题思路较清晰，对于每一位数字，均有与之相对应的 $3/4$ 种情况，我们只需递归每一种状态即可。</p><p>代码如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="type">int</span> Len=<span class="number">0</span>;</span><br><span class="line">    string Digits=<span class="string">&quot;&quot;</span>;</span><br><span class="line">    vector&lt;string&gt; ans;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">Tel</span><span class="params">(<span class="type">int</span> tags,string str)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(tags==Len)</span><br><span class="line">            ans.<span class="built_in">push_back</span>(str);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> num=Digits[tags]-<span class="string">&#x27;2&#x27;</span>;</span><br><span class="line">            <span class="keyword">if</span>(num==<span class="number">5</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">Tel</span>(tags+<span class="number">1</span>,str+<span class="string">&#x27;p&#x27;</span>);</span><br><span class="line">                <span class="built_in">Tel</span>(tags+<span class="number">1</span>,str+<span class="string">&#x27;q&#x27;</span>);</span><br><span class="line">                <span class="built_in">Tel</span>(tags+<span class="number">1</span>,str+<span class="string">&#x27;r&#x27;</span>);</span><br><span class="line">                <span class="built_in">Tel</span>(tags+<span class="number">1</span>,str+<span class="string">&#x27;s&#x27;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(num==<span class="number">6</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">Tel</span>(tags+<span class="number">1</span>,str+<span class="string">&#x27;t&#x27;</span>);</span><br><span class="line">                <span class="built_in">Tel</span>(tags+<span class="number">1</span>,str+<span class="string">&#x27;u&#x27;</span>);</span><br><span class="line">                <span class="built_in">Tel</span>(tags+<span class="number">1</span>,str+<span class="string">&#x27;v&#x27;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(num==<span class="number">7</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">Tel</span>(tags+<span class="number">1</span>,str+<span class="string">&#x27;w&#x27;</span>);</span><br><span class="line">                <span class="built_in">Tel</span>(tags+<span class="number">1</span>,str+<span class="string">&#x27;x&#x27;</span>);</span><br><span class="line">                <span class="built_in">Tel</span>(tags+<span class="number">1</span>,str+<span class="string">&#x27;y&#x27;</span>);</span><br><span class="line">                <span class="built_in">Tel</span>(tags+<span class="number">1</span>,str+<span class="string">&#x27;z&#x27;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">Tel</span>(tags+<span class="number">1</span>,str+<span class="built_in">char</span>(<span class="string">&#x27;a&#x27;</span>+num*<span class="number">3</span>));</span><br><span class="line">                <span class="built_in">Tel</span>(tags+<span class="number">1</span>,str+<span class="built_in">char</span>(<span class="string">&#x27;b&#x27;</span>+num*<span class="number">3</span>));</span><br><span class="line">                <span class="built_in">Tel</span>(tags+<span class="number">1</span>,str+<span class="built_in">char</span>(<span class="string">&#x27;c&#x27;</span>+num*<span class="number">3</span>));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function">vector&lt;string&gt; <span class="title">letterCombinations</span><span class="params">(string digits)</span> </span>&#123;</span><br><span class="line">        Digits=digits;</span><br><span class="line">        <span class="keyword">if</span>(digits==<span class="string">&quot;&quot;</span>)</span><br><span class="line">            <span class="keyword">return</span> &#123;&#125;;</span><br><span class="line">        Len=digits.<span class="built_in">size</span>();</span><br><span class="line">        <span class="built_in">Tel</span>(<span class="number">0</span>,<span class="string">&quot;&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h4 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h4><p><a href="https://imgse.com/i/pPwSb5t"><img src="https://s1.ax1x.com/2023/08/30/pPwSb5t.png" alt="pPwSb5t.png"></a></p><p><div style="text-align:right;">本篇博客撰写于2023/8/30 17:32:15</p>]]></content>
    
    
    <summary type="html">电话号码的字母组合</summary>
    
    
    
    <category term="程序" scheme="https://www.lwt-server.cn/categories/%E7%A8%8B%E5%BA%8F/"/>
    
    
    <category term="LeetCode题解" scheme="https://www.lwt-server.cn/tags/LeetCode%E9%A2%98%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode题解——1654.到家的最少跳跃次数</title>
    <link href="https://www.lwt-server.cn/2023/08/30/LeetCode_1654/"/>
    <id>https://www.lwt-server.cn/2023/08/30/LeetCode_1654/</id>
    <published>2023-08-30T07:17:06.000Z</published>
    <updated>2023-08-30T14:00:15.305Z</updated>
    
    <content type="html"><![CDATA[<h1 id="LeetCode题解"><a href="#LeetCode题解" class="headerlink" title="LeetCode题解"></a>LeetCode题解</h1><h2 id="到家的最少跳跃次数"><a href="#到家的最少跳跃次数" class="headerlink" title="到家的最少跳跃次数"></a>到家的最少跳跃次数</h2><h3 id="题目预览："><a href="#题目预览：" class="headerlink" title="题目预览："></a>题目预览：</h3><p>有一只跳蚤的家在数轴上的位置 $x$ 处。请你帮助它从位置 $0$ 出发，到达它的家。</p><p>跳蚤跳跃的规则如下：</p><ul><li>它可以 <b>往前</b> 跳恰好 $a$ 个位置（即往右跳）。  </li><li>它可以 <b>往后</b> 跳恰好 $b$ 个位置（即往左跳）。</li><li>它不能 <b>连续</b> 往后跳 $2$ 次。</li><li>它不能跳到任何 $forbidden$ 数组中的位置。</li><li>跳蚤可以往前跳 <b>超过</b> 它的家的位置，但是它 <b>不能跳到负整数</b> 的位置。</li></ul><p>给你一个整数数组 forbidden ，其中 forbidden[i] 是跳蚤不能跳到的位置，同时给你整数 a， b 和 x ，请你返回跳蚤到家的最少跳跃次数。如果没有恰好到达 x 的可行方案，请你返回 -1 。</p><h4 id="示例-1："><a href="#示例-1：" class="headerlink" title="示例 1："></a>示例 1：</h4><blockquote><p><b>输入：</b>forbidden = [14,4,18,1,15], a = 3, b = 15, x = 9<br><b>输出：</b>3<br><b>解释：</b>往前跳 3 次（0 -&gt; 3 -&gt; 6 -&gt; 9），跳蚤就到家了。  </p></blockquote><h4 id="示例-2："><a href="#示例-2：" class="headerlink" title="示例 2："></a>示例 2：</h4><blockquote><p><b>输入：</b>forbidden = [8,3,16,6,12,20], a = 15, b = 13, x = 11<br><b>输出：</b>-1  </p></blockquote><h4 id="示例-3："><a href="#示例-3：" class="headerlink" title="示例 3："></a>示例 3：</h4><blockquote><p><b>输入：</b>forbidden = [1,6,2,14,5,17,4], a = 16, b = 9, x = 7<br><b>输出：</b>2<br><b>解释：</b>往前跳一次（0 -&gt; 16），然后往回跳一次（16 -&gt; 7），跳蚤就到家了。  </p></blockquote><p>提示：</p><ul><li>$1 &lt;= forbidden.length &lt;= 1000$</li><li>$1 &lt;= a, b, forbidden[i] &lt;= 2000$</li><li>$0 &lt;= x &lt;= 2000$</li><li>$forbidden$ 中所有位置互不相同。</li><li>位置 $x$ 不在 $forbidden$ 中。</li></ul><hr><p>以下是题解：</p><h3 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路:"></a>解题思路:</h3><p>由于我们可以超出家的位置，最短路算法可能超时，故我们需要减小搜索范围。 可以证明，一定可以在 $[0,max⁡(f+a+b,x+b)]$ 的下标范围内找到最优解，其中 $f$ 是最远的禁止点的坐标。因为 $f,a,b,x≤2000$ ，故搜索范围不会超过 $6000$。</p><p>后续证明需要考虑一些细节问题，但意会后是很简单的：如果最优路径是出界的，可以调整前后跳的顺序让其不出界。（想象一条长绳子，起点和终点固定，嫌它太长所以把它折起来放）</p><p><b>详细证明：</b></p><p>如果 $a≥b$ ， 那么当跳蚤跳到大于 $x+b$ 的位置时，最多只能后跳一次，但是无法到达 $x$，而在之后的跳跃中，最 “保守” 的跳法也是前跳一次，后跳一次，无法更加接近 $x$。故此时的最大搜索下标是 $x+b$。</p><p>证明 $a&lt;b$ 的情况： 可以证明当 $a&lt;b$ 时搜索的右边界为 $max⁡(f+a+b,x)$ 。</p><p>首先把整个数轴分为 $3$ 段：</p><ul><li><p>非安全区：$[0,f]$。“非安全区” 指区域内会有禁止（forbidden）点。</p></li><li><p>安全区（界内）：$(f,max⁡(f+a+b,x)]$ 。注意家的位置也包含在界内。  </p></li><li><p>出界区：$(max⁡(f+a+b,x),+∞)$ 。 </p></li></ul><p>假设某个 <b>跳跃次数最少</b> 的路径中，$C$ 点是 <b>第一个</b> 出界的点，$H$ 点是 <b>第一个</b> 返回界内的点（注意我们把跳蚤的家的位置 $x$ 也划入了界内，因此跳蚤为了回家必须返回界内），如下图所示。图中，横坐标是跳跃次数，纵坐标是跳蚤与原点的距离。</p><p><a href="https://imgse.com/i/pPdOxKA"><img src="https://s1.ax1x.com/2023/08/30/pPdOxKA.png" alt="pPdOxKA.png"></a></p><p>为了让 $C$ 点不再出界，我们只需交换线段 $BC$ 和 线段 $GH$（也就是说，将第 $i + 1$ 次跳跃变为后跳，而将第 $i+6$ 次跳跃变为前跳）即可，如下图所示：</p><p><a href="https://imgse.com/i/pPdXFPS"><img src="https://s1.ax1x.com/2023/08/30/pPdXFPS.png" alt="pPdXFPS.png"></a></p><p>下面从 $3$ 个方面论证这次交换的可行性：</p><ol><li><p>交换之前，C,D,E,F,G 点都出界，与原点的距离 $l&gt;f+a+b$ ；交换之后它们与原点的距离变为 $l−(a+b)$&gt;f$ 。也就是说，交换后，这些点没有踩到 forbidden 点的风险；  </p></li><li><p>交换没有增加跳跃的次数，跳跃次数仍为最优；  </p></li><li><p>交换不会造成两次后跳。这是因为跳蚤一定是通过 <b>前跳</b> 到达的 $B$ 点。反证：如果跳蚤是通过后跳跳到 $B$ 点的，那么 $B$ 点的前一个点 $A′$ 一定位于出界区（因为 $b&gt;a$ ），与假设（$C$ 点是 <b>第一个</b> 出界的点）矛盾。</p></li></ol><p>因此，我们可以不断寻找 <b>第一次出界</b> 的点，然后按上面的模式进行交换，使其不再出界，最终让所有的点不再出界，位于 $[0,max⁡(f+a+b,x)]$ 的范围内。</p><p>综合 $a≥b$ 和 $a&lt;b$ 的情况，我们可以得出搜索的上界 $=max⁡(f+a+b,x+b)$。</p><p>有了上面的结论，我们可以随便用一种最短路解法来求解该问题。下面的 $BFS$ 代码供参考；也可参考其它题解的方法。注意为了避免两次后跳，我们需要在 $BFS$ 中保存上一次是前跳还是后跳。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">minimumJumps</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; forbidden, <span class="type">int</span> a, <span class="type">int</span> b, <span class="type">int</span> x)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> F = *<span class="built_in">max_element</span>(forbidden.<span class="built_in">begin</span>(), forbidden.<span class="built_in">end</span>()), bound = <span class="built_in">max</span>(F + a + b, x + b);</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> ban[bound + <span class="number">1</span>];</span><br><span class="line">        <span class="built_in">memset</span>(ban, <span class="number">0</span>, <span class="built_in">sizeof</span>(ban));</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> f : forbidden) &#123;</span><br><span class="line">            ban[f] = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> dist[bound + <span class="number">1</span>][<span class="number">2</span>];</span><br><span class="line">        <span class="built_in">memset</span>(dist, <span class="number">0x3f</span>, <span class="built_in">sizeof</span>(dist));</span><br><span class="line">        dist[<span class="number">0</span>][<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">        queue&lt;pair&lt;<span class="type">int</span>,<span class="type">int</span>&gt;&gt; <span class="built_in">q</span>(&#123;&#123;<span class="number">0</span>, <span class="number">0</span>&#125;&#125;);</span><br><span class="line">        <span class="keyword">while</span>(q.<span class="built_in">size</span>()) &#123;</span><br><span class="line">            <span class="keyword">auto</span> [i, pre] = q.<span class="built_in">front</span>(); q.<span class="built_in">pop</span>();</span><br><span class="line">            <span class="keyword">if</span>(i == x) &#123;</span><br><span class="line">                <span class="keyword">return</span> dist[i][pre];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(pre == <span class="number">0</span> &amp;&amp; i-b &gt;= <span class="number">0</span> &amp;&amp; !ban[i-b] &amp;&amp; dist[i][pre] + <span class="number">1</span> &lt; dist[i-b][<span class="number">1</span>]) &#123;</span><br><span class="line">                dist[i-b][<span class="number">1</span>] = dist[i][pre] + <span class="number">1</span>;</span><br><span class="line">                q.<span class="built_in">emplace</span>(i-b, <span class="number">1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(i+a &lt;= bound &amp;&amp; !ban[i+a] &amp;&amp; dist[i][pre] + <span class="number">1</span> &lt; dist[i+a][<span class="number">0</span>]) &#123;</span><br><span class="line">                dist[i+a][<span class="number">0</span>] = dist[i][pre] + <span class="number">1</span>;</span><br><span class="line">                q.<span class="built_in">emplace</span>(i+a, <span class="number">0</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h4 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h4><p><a href="https://imgse.com/i/pPdX2Zt"><img src="https://s1.ax1x.com/2023/08/30/pPdX2Zt.png" alt="pPdX2Zt.png"></a></p><p><div style="text-align:right;">本篇博客撰写于2023/8/30 15:17:06</p>]]></content>
    
    
    <summary type="html">到家的最少跳跃次数</summary>
    
    
    
    <category term="程序" scheme="https://www.lwt-server.cn/categories/%E7%A8%8B%E5%BA%8F/"/>
    
    
    <category term="LeetCode题解" scheme="https://www.lwt-server.cn/tags/LeetCode%E9%A2%98%E8%A7%A3/"/>
    
    <category term="LeetCode每日一题" scheme="https://www.lwt-server.cn/tags/LeetCode%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode题解——16.最接近的三数之和</title>
    <link href="https://www.lwt-server.cn/2023/08/29/LeetCode_16/"/>
    <id>https://www.lwt-server.cn/2023/08/29/LeetCode_16/</id>
    <published>2023-08-29T14:10:55.000Z</published>
    <updated>2023-08-29T14:22:28.939Z</updated>
    
    <content type="html"><![CDATA[<h1 id="LeetCode题解"><a href="#LeetCode题解" class="headerlink" title="LeetCode题解"></a>LeetCode题解</h1><h2 id="最接近的三数之和"><a href="#最接近的三数之和" class="headerlink" title="最接近的三数之和"></a>最接近的三数之和</h2><h3 id="题目预览："><a href="#题目预览：" class="headerlink" title="题目预览："></a>题目预览：</h3><p>给你一个长度为 $n$ 的整数数组 $nums$ 和 一个目标值 $target$。请你从 $nums$ 中选出三个整数，使它们的和与 $target$ 最接近。</p><p>返回这三个数的和。</p><p>假定每组输入只存在恰好一个解。</p><h4 id="示例-1："><a href="#示例-1：" class="headerlink" title="示例 1："></a>示例 1：</h4><blockquote><p><b>输入：</b>nums = [-1,2,1,-4], target = 1<br><b>输出：</b>2<br><b>解释：</b>与 target 最接近的和是 2 (-1 + 2 + 1 = 2) 。  </p></blockquote><h4 id="示例-2："><a href="#示例-2：" class="headerlink" title="示例 2："></a>示例 2：</h4><blockquote><p><b>输入：</b>nums = [0,0,0], target = 1<br><b>输出：</b>0  </p></blockquote><p>提示：</p><ul><li><p>$3 &lt;= nums.length &lt;= 1000$</p></li><li><p>$-1000 &lt;= nums[i] &lt;= 1000$</p></li><li><p>$-10^4 &lt;= target &lt;= 10^4$</p></li></ul><hr><p>以下是题解：</p><h3 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路:"></a>解题思路:</h3><p><b>排序 + 双指针</b></p><p>基本思路与前一题(<a href="/2023/08/29/LeetCode_15/">LeetCode_15</a>)类似</p><p>除此以外，还有以下几个优化：</p><p>设 $s=nums[i]+nums[i+1]+nums[i+2]$ 。如果 $s&gt;target$ ，由于数组已经排序，后面无论怎么选，选出的三个数的和不会比 $s$ 还小，所以不会找到比 $s$ 更优的答案了。所以只要 $s&gt;target$ ，就可以直接 $break$ 外层循环了。在 $break$ 前判断 $s$ 是否离 $target$ 更近，如果更近，那么更新答案为 $s$。</p><p>设 $s=nums[i]+nums[n−2]+nums[n−1]$ 。如果 $s&lt;targets$ ，由于数组已经排序，$nums[i]$ 加上后面任意两个数都不超过 $s$，所以下面的双指针就不需要跑了，无法找到比 $s$ 更优的答案。但是后面还有更大的 $nums[i]$ ，可能找到一个离 $target$ 更近的三数之和，所以还需要继续枚举，$continue$ 外层循环。在 $continue$ 前判断 $s$ 是否离 $target$ 更近，如果更近，那么更新答案为 $s$</p><p>如果 $i&gt;0$ 且 $nums[i]=nums[i−1]$ ，那么 $nums[i]$ 和后面数字相加的结果，必然在之前算出过，所以无需跑下面的双指针，直接 $continue$ 外层循环。（可以放在循环开头判断。）</p><p>代码如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">threeSumClosest</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; nums, <span class="type">int</span> target)</span> </span>&#123;</span><br><span class="line">        <span class="built_in">sort</span>(nums.<span class="built_in">begin</span>(),nums.<span class="built_in">end</span>());</span><br><span class="line">        <span class="type">int</span> Len=nums.<span class="built_in">size</span>(),ans=<span class="number">1e7</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;Len<span class="number">-2</span>;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(i&gt;<span class="number">0</span>&amp;&amp;nums[i]==nums[i<span class="number">-1</span>])</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            <span class="type">int</span> Left=i+<span class="number">1</span>,Right=Len<span class="number">-1</span>;</span><br><span class="line">            <span class="keyword">while</span>(Left&lt;Right)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="type">int</span> sum=nums[i]+nums[Left]+nums[Right];</span><br><span class="line">                <span class="keyword">if</span>(<span class="built_in">abs</span>(sum-target)&lt;<span class="built_in">abs</span>(ans-target))</span><br><span class="line">                    ans=sum;</span><br><span class="line">                <span class="keyword">if</span>(sum&gt;target)</span><br><span class="line">                    Right--;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(sum&lt;target)</span><br><span class="line">                    Left++;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    <span class="keyword">return</span> target;</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h4 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h4><p><a href="https://imgse.com/i/pPdteiR"><img src="https://s1.ax1x.com/2023/08/29/pPdteiR.png" alt="pPdteiR.png"></a></p><p><div style="text-align:right;">本篇博客撰写于2023/8/29 22:10:55</p>]]></content>
    
    
    <summary type="html">最接近的三数之和</summary>
    
    
    
    <category term="程序" scheme="https://www.lwt-server.cn/categories/%E7%A8%8B%E5%BA%8F/"/>
    
    
    <category term="LeetCode题解" scheme="https://www.lwt-server.cn/tags/LeetCode%E9%A2%98%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode题解——823.带因子的二叉树</title>
    <link href="https://www.lwt-server.cn/2023/08/29/LeetCode_823/"/>
    <id>https://www.lwt-server.cn/2023/08/29/LeetCode_823/</id>
    <published>2023-08-29T05:06:24.000Z</published>
    <updated>2023-08-29T05:30:18.359Z</updated>
    
    <content type="html"><![CDATA[<h1 id="LeetCode题解"><a href="#LeetCode题解" class="headerlink" title="LeetCode题解"></a>LeetCode题解</h1><h2 id="带因子的二叉树"><a href="#带因子的二叉树" class="headerlink" title="带因子的二叉树"></a>带因子的二叉树</h2><h3 id="题目预览："><a href="#题目预览：" class="headerlink" title="题目预览："></a>题目预览：</h3><p>给出一个含有不重复整数元素的数组 $arr$ ，每个整数 $arr[i]$ 均大于 $1$。</p><p>用这些整数来构建二叉树，每个整数可以使用任意次数。其中：每个非叶结点的值应等于它的两个子结点的值的乘积。</p><p>满足条件的二叉树一共有多少个？答案可能很大，返回 <b>对 $10^9 + 7$ 取余</b> 的结果。</p><h4 id="示例-1"><a href="#示例-1" class="headerlink" title="示例 1:"></a>示例 1:</h4><blockquote><p><b>输入:</b> arr = [2, 4]<br><b>输出:</b> 3<br><b>解释:</b> 可以得到这些二叉树: [2], [4], [4, 2, 2]  </p></blockquote><h4 id="示例-2"><a href="#示例-2" class="headerlink" title="示例 2:"></a>示例 2:</h4><blockquote><p><b>输入:</b> arr = [2, 4, 5, 10]<br><b>输出:</b> 7<br><b>解释:</b> 可以得到这些二叉树: [2], [4], [5], [10], [4, 2, 2], [10, 2, 5], [10, 5, 2].  </p></blockquote><p>提示：</p><ul><li><p>$1 &lt;= arr.length &lt;= 1000$</p></li><li><p>$2 &lt;= arr[i] &lt;= 10^9$</p></li><li><p>$arr$ 中的所有值 <b>互不相同</b></p></li></ul><hr><p>以下是题解：</p><h3 id="思路-递推"><a href="#思路-递推" class="headerlink" title="思路: 递推"></a>思路: 递推</h3><p>对于每个根节点，由题意可以确定其值一定大于它的任意一个子节点，因此我们可以先将容器按 <b>升序</b> 排序，然后依次计算其中的数据：</p><ul><li><p>我们可以直接停止构建，此时二叉树只有一个根节点，这算 $1$ 个方案。</p></li><li><p>记 $val=arr[i]$ 。枚举 $x=arr[j]$ ，如果 $val$ 能被 $x$ 整除且 $\frac{val}{x}$ 在 $arr$ 中（设其下标为 $k$），那么分解 $val=x×\frac{val}{x}$ ，方案数等于 $f[j]×f[k]$ 。</p></li><li><p>把这些方案数全部加起来，就得到了 $f[i]$ 。</p></li><li><p>由于 $j&lt;i$ 且 $k&lt;i$ ，我们要从小到大遍历计算每个状态 $f[i]$ 。</p></li></ul><p>初始值：所有 $f[i]$ 都初始化成 $1$ 。</p><p>答案为: $\sum_{n-1}^{i=0}f[i]$</p><p>代码如下:</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">numFactoredBinaryTrees</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; arr)</span> </span>&#123;</span><br><span class="line">        <span class="type">const</span> <span class="type">int</span> Mod=<span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line">        <span class="built_in">sort</span>(arr.<span class="built_in">begin</span>(),arr.<span class="built_in">end</span>());</span><br><span class="line">        <span class="type">int</span> Len=arr.<span class="built_in">size</span>();</span><br><span class="line">        unordered_map&lt;<span class="type">int</span>,<span class="type">int</span>&gt; idx;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;Len;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            idx[arr[i]]=i;</span><br><span class="line">        &#125;</span><br><span class="line">        vector&lt;<span class="type">long</span> <span class="type">long</span>&gt;<span class="built_in">f</span>(Len,<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;Len;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> val=arr[i];</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;i;j++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="type">int</span> tmp=arr[j];</span><br><span class="line">                <span class="keyword">if</span>(val%tmp==<span class="number">0</span>&amp;&amp;idx.<span class="built_in">count</span>(val/tmp))</span><br><span class="line">                    f[i]+=f[j]*f[idx[val/tmp]];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">accumulate</span>(f.<span class="built_in">begin</span>(),f.<span class="built_in">end</span>(),<span class="number">0LL</span>)%Mod;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h4 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h4><p><a href="https://imgse.com/i/pPaHwDK"><img src="https://s1.ax1x.com/2023/08/29/pPaHwDK.png" alt="pPaHwDK.png"></a></p><p><div style="text-align:right;">本篇博客撰写于2023/8/29 13:06:24</p>]]></content>
    
    
    <summary type="html">带因子的二叉树</summary>
    
    
    
    <category term="程序" scheme="https://www.lwt-server.cn/categories/%E7%A8%8B%E5%BA%8F/"/>
    
    
    <category term="LeetCode题解" scheme="https://www.lwt-server.cn/tags/LeetCode%E9%A2%98%E8%A7%A3/"/>
    
    <category term="LeetCode每日一题" scheme="https://www.lwt-server.cn/tags/LeetCode%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode题解——15.三数之和</title>
    <link href="https://www.lwt-server.cn/2023/08/29/LeetCode_15/"/>
    <id>https://www.lwt-server.cn/2023/08/29/LeetCode_15/</id>
    <published>2023-08-29T01:09:05.000Z</published>
    <updated>2023-08-29T14:13:33.018Z</updated>
    
    <content type="html"><![CDATA[<h1 id="LeetCode题解"><a href="#LeetCode题解" class="headerlink" title="LeetCode题解"></a>LeetCode题解</h1><h2 id="三数之和"><a href="#三数之和" class="headerlink" title="三数之和"></a>三数之和</h2><h3 id="题目预览："><a href="#题目预览：" class="headerlink" title="题目预览："></a>题目预览：</h3><p>给你一个整数数组 $nums$ ，判断是否存在三元组 $[nums[i], nums[j], nums[k]]$ 满足 $i != j$、$i != k$ 且 $j != k$ ，同时还满足 $nums[i] + nums[j] + nums[k] == 0$ 。请</p><p>你返回所有和为 $0$ 且不重复的三元组。</p><p><b>注意：</b>答案中不可以包含重复的三元组。</p><h4 id="示例-1："><a href="#示例-1：" class="headerlink" title="示例 1："></a>示例 1：</h4><blockquote><p><b>输入：</b>nums = [-1,0,1,2,-1,-4]<br><b>输出：</b>[[-1,-1,2],[-1,0,1]]<br><b>解释：</b><br>nums[0] + nums[1] + nums[2] = (-1) + 0 + 1 = 0 。<br>nums[1] + nums[2] + nums[4] = 0 + 1 + (-1) = 0 。<br>nums[0] + nums[3] + nums[4] = (-1) + 2 + (-1) = 0 。<br>不同的三元组是 [-1,0,1] 和 [-1,-1,2] 。<br>注意，输出的顺序和三元组的顺序并不重要。</p></blockquote><h4 id="示例-2："><a href="#示例-2：" class="headerlink" title="示例 2："></a>示例 2：</h4><blockquote><p><b>输入：</b>nums = [0,1,1]<br><b>输出：</b>[]<br><b>解释：</b>唯一可能的三元组和不为 0 。  </p></blockquote><h4 id="示例-3："><a href="#示例-3：" class="headerlink" title="示例 3："></a>示例 3：</h4><blockquote><p><b>输入：</b>nums = [0,0,0]<br><b>输出：</b>[[0,0,0]]<br><b>解释：</b>唯一可能的三元组和为 0 。  </p></blockquote><p>提示：</p><ul><li>$3 &lt;= nums.length &lt;= 3000$</li><li>$-10^5 &lt;= nums[i] &lt;= 10^5$</li></ul><hr><p>以下是题解：</p><h3 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路:"></a>解题思路:</h3><p><b>排序 + 双指针</b></p><p>本题的难点在于 <b>如何去除重复解</b> 。</p><h4 id="算法流程："><a href="#算法流程：" class="headerlink" title="算法流程："></a>算法流程：</h4><ol><li><p>特判，对于数组长度 $n$，如果数组为 $null$ 或者数组长度小于 $3$，返回 $[]$。</p></li><li><p>对数组进行排序。</p></li><li><p>遍历排序后数组：</p><ul><li><p>若 $nums[i]&gt;0$：因为已经排序好，所以后面不可能有三个数加和等于 $0$，直接返回结果。</p></li><li><p>对于重复元素：跳过，避免出现重复解</p></li><li><p>令左指针 $Left=i+1$，右指针 $Right=n−1$，当 $Left&lt;Right$ 时，执行循环：</p><ul><li><p>当 $nums[i]+nums[Left]+nums[Right]==0$，执行循环，判断左界和右界是否和下一位置重复，去除重复解。并同时将 $Left,Right$ 移到下一位置，寻找新的解</p></li><li><p>若和大于 $0$，说明 $nums[Right]$ 太大，$Right$ 左移</p></li><li><p>若和小于 $0$，说明 $nums[Left]$ 太小，$Left$ 右移</p></li></ul></li></ul></li></ol><p>代码如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; <span class="built_in">threeSum</span>(vector&lt;<span class="type">int</span>&gt;&amp; nums) &#123;</span><br><span class="line">        <span class="type">int</span> Len=nums.<span class="built_in">size</span>(),Left=<span class="number">0</span>,Right=<span class="number">0</span>;</span><br><span class="line">        vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; ans;</span><br><span class="line">        <span class="keyword">if</span>(Len&lt;<span class="number">3</span>)</span><br><span class="line">            <span class="keyword">return</span> ans;</span><br><span class="line">        <span class="built_in">sort</span>(nums.<span class="built_in">begin</span>(),nums.<span class="built_in">end</span>());</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;Len;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(nums[i]&gt;<span class="number">0</span>)</span><br><span class="line">                <span class="keyword">return</span> ans;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(i&gt;<span class="number">0</span>&amp;&amp;nums[i<span class="number">-1</span>]==nums[i])</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                Left=i+<span class="number">1</span>,Right=Len<span class="number">-1</span>;</span><br><span class="line">                <span class="keyword">while</span>(Left&lt;Right)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="type">int</span> x=nums[i],y=nums[Left],z=nums[Right];</span><br><span class="line">                    <span class="keyword">if</span>(x+y+z==<span class="number">0</span>)</span><br><span class="line">                    &#123;</span><br><span class="line">                        ans.<span class="built_in">push_back</span>(&#123;nums[i],nums[Left],nums[Right]&#125;);</span><br><span class="line">                        <span class="keyword">while</span>(Left&lt;Right&amp;&amp;y==nums[Left+<span class="number">1</span>])</span><br><span class="line">                            Left++;</span><br><span class="line">                        <span class="keyword">while</span>(Left&lt;Right&amp;&amp;nums[Right<span class="number">-1</span>]==z)</span><br><span class="line">                            Right--;</span><br><span class="line">                        Left++;</span><br><span class="line">                        Right--;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span> <span class="keyword">if</span>(x+y+z&gt;<span class="number">0</span>)</span><br><span class="line">                        Right--;</span><br><span class="line">                    <span class="keyword">else</span></span><br><span class="line">                        Left++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">while</span>(i+<span class="number">1</span>&lt;Len&amp;&amp;nums[i]==nums[i+<span class="number">1</span>])</span><br><span class="line">                i++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h4 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h4><p><a href="https://imgse.com/i/pPaR2wR"><img src="https://s1.ax1x.com/2023/08/29/pPaR2wR.png" alt="pPaR2wR.png"></a></p><p><div style="text-align:right;">本篇博客撰写于2023/8/29 09:09:05</p>]]></content>
    
    
    <summary type="html">三数之和</summary>
    
    
    
    <category term="程序" scheme="https://www.lwt-server.cn/categories/%E7%A8%8B%E5%BA%8F/"/>
    
    
    <category term="LeetCode题解" scheme="https://www.lwt-server.cn/tags/LeetCode%E9%A2%98%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode题解——14.最长公共前缀</title>
    <link href="https://www.lwt-server.cn/2023/08/28/LeetCode_14/"/>
    <id>https://www.lwt-server.cn/2023/08/28/LeetCode_14/</id>
    <published>2023-08-28T12:46:08.000Z</published>
    <updated>2023-08-28T13:04:33.339Z</updated>
    
    <content type="html"><![CDATA[<h1 id="LeetCode题解"><a href="#LeetCode题解" class="headerlink" title="LeetCode题解"></a>LeetCode题解</h1><h2 id="最长公共前缀"><a href="#最长公共前缀" class="headerlink" title="最长公共前缀"></a>最长公共前缀</h2><h3 id="题目预览："><a href="#题目预览：" class="headerlink" title="题目预览："></a>题目预览：</h3><p>编写一个函数来查找字符串数组中的 <b>最长公共前缀</b> 。</p><p>如果不存在公共前缀，返回空字符串 <code>&quot;&quot;</code>。</p><h4 id="示例-1："><a href="#示例-1：" class="headerlink" title="示例 1："></a>示例 1：</h4><blockquote><p><b>输入：</b>strs = [“flower”,”flow”,”flight”]<br><b>输出：</b>“fl”</p></blockquote><h4 id="示例-2："><a href="#示例-2：" class="headerlink" title="示例 2："></a>示例 2：</h4><blockquote><p><b>输入：</b>strs = [“dog”,”racecar”,”car”]<br><b>输出：</b>“”<br><b>解释：</b>输入不存在公共前缀。</p></blockquote><p>提示：</p><ul><li><p>$1 &lt;= strs.length &lt;= 200$  </p></li><li><p>$0 &lt;= strs[i].length &lt;= 200$  </p></li><li><p>$strs[i] 仅由小写英文字母组成$</p></li></ul><hr><p>以下是题解：</p><h3 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路:"></a>解题思路:</h3><p>本题思路较清晰，对于若干个字符串，我们可以先储存第一个的字符串的字符，然后依次比较后面字符串的相应部分。</p><p>特殊情况包括：</p><ol><li>字符串容器为空：返回<code>&quot;&quot;</code></li><li>字符串为空：返回<code>&quot;&quot;</code></li></ol><p>代码如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">string <span class="title">longestCommonPrefix</span><span class="params">(vector&lt;string&gt;&amp; strs)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> Len=strs.<span class="built_in">size</span>(),tag=<span class="number">0</span>,flag=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(Len==<span class="number">1</span>)</span><br><span class="line">            <span class="keyword">return</span> strs[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">if</span>(strs[<span class="number">0</span>]==<span class="string">&quot;&quot;</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">        string ans=<span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="type">char</span> tmp=<span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">        flag=strs[<span class="number">0</span>].<span class="built_in">length</span>();</span><br><span class="line">        <span class="keyword">while</span>(tag&lt;flag)</span><br><span class="line">        &#123;</span><br><span class="line">            tmp=strs[<span class="number">0</span>][tag];</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;Len;i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(tag&gt;=strs[i].<span class="built_in">length</span>())</span><br><span class="line">                    <span class="keyword">return</span> ans;</span><br><span class="line">                <span class="keyword">if</span>(strs[i][tag]!=tmp)</span><br><span class="line">                    <span class="keyword">return</span> ans;</span><br><span class="line">            &#125;</span><br><span class="line">            ans+=tmp;</span><br><span class="line">            tag++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h4 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h4><p><a href="https://imgse.com/i/pPaNpVJ"><img src="https://s1.ax1x.com/2023/08/28/pPaNpVJ.png" alt="pPaNpVJ.png"></a></p><p><div style="text-align:right;">本篇博客撰写于2023/8/28 20:46:08</p>]]></content>
    
    
    <summary type="html">最长公共前缀</summary>
    
    
    
    <category term="程序" scheme="https://www.lwt-server.cn/categories/%E7%A8%8B%E5%BA%8F/"/>
    
    
    <category term="LeetCode题解" scheme="https://www.lwt-server.cn/tags/LeetCode%E9%A2%98%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode题解——13.罗马数字转整数</title>
    <link href="https://www.lwt-server.cn/2023/08/28/LeetCode_13/"/>
    <id>https://www.lwt-server.cn/2023/08/28/LeetCode_13/</id>
    <published>2023-08-28T11:46:48.000Z</published>
    <updated>2023-08-28T12:54:21.755Z</updated>
    
    <content type="html"><![CDATA[<h1 id="LeetCode题解"><a href="#LeetCode题解" class="headerlink" title="LeetCode题解"></a>LeetCode题解</h1><h2 id="罗马数字转整数"><a href="#罗马数字转整数" class="headerlink" title="罗马数字转整数"></a>罗马数字转整数</h2><h3 id="题目预览："><a href="#题目预览：" class="headerlink" title="题目预览："></a>题目预览：</h3><p>罗马数字包含以下七种字符: $I$，$V$，$X$，$L$，$C$，$D$ 和 $M$。</p><div class="table-container"><table><thead><tr><th style="text-align:center">字符</th><th style="text-align:center">数值</th></tr></thead><tbody><tr><td style="text-align:center">I</td><td style="text-align:center">1</td></tr><tr><td style="text-align:center">V</td><td style="text-align:center">5</td></tr><tr><td style="text-align:center">X</td><td style="text-align:center">10</td></tr><tr><td style="text-align:center">L</td><td style="text-align:center">50</td></tr><tr><td style="text-align:center">C</td><td style="text-align:center">100</td></tr><tr><td style="text-align:center">D</td><td style="text-align:center">500</td></tr><tr><td style="text-align:center">M</td><td style="text-align:center">1000</td></tr></tbody></table></div><p>例如， 罗马数字 $2$ 写做 $II$ ，即为两个并列的 $1$。$12$ 写做 $XII$ ，即为 $X + II$ 。 $27$ 写做  $XXVII$, 即为 $XX + V + II$ 。</p><p>通常情况下，罗马数字中小的数字在大的数字的右边。但也存在特例，例如 $4$ 不写做 $IIII$，而是 $IV$。数字 $1$ 在数字 $5$ 的左边，所表示的数等于大数 $5$ 减小数 $1$ 得到的数值 $4$ 。同样地，数字 $9$ 表示为 $IX$。这个特殊的规则只适用于以下六种情况：</p><ul><li><p>$I$ 可以放在 $V\ (5)$ 和 $X\ (10)$ 的左边，来表示 $4$ 和 $9$。  </p></li><li><p>$X$ 可以放在 $L\ (50)$ 和 $C\ (100)$ 的左边，来表示 $40$ 和 $90$。   </p></li><li><p>$C$ 可以放在 $D\ (500)$ 和 $M\ (1000)$ 的左边，来表示 $400$ 和 $900$。</p></li></ul><p>给定一个罗马数字，将其转换成整数。</p><h4 id="示例-1"><a href="#示例-1" class="headerlink" title="示例 1:"></a>示例 1:</h4><blockquote><p><b>输入:</b> s = “III”<br><b>输出:</b> 3  </p></blockquote><h4 id="示例-2"><a href="#示例-2" class="headerlink" title="示例 2:"></a>示例 2:</h4><blockquote><p><b>输入:</b> s = “IV”<br><b>输出:</b> 4  </p></blockquote><h4 id="示例-3"><a href="#示例-3" class="headerlink" title="示例 3:"></a>示例 3:</h4><blockquote><p><b>输入:</b> s = “IX”<br><b>输出:</b> 9  </p></blockquote><h4 id="示例-4"><a href="#示例-4" class="headerlink" title="示例 4:"></a>示例 4:</h4><blockquote><p><b>输入:</b> s = “LVIII”<br><b>输出:</b> 58<br><b>解释:</b> L = 50, V= 5, III = 3.  </p></blockquote><h4 id="示例-5"><a href="#示例-5" class="headerlink" title="示例 5:"></a>示例 5:</h4><blockquote><p><b>输入:</b> s = “MCMXCIV”<br><b>输出:</b> 1994<br><b>解释:</b> M = 1000, CM = 900, XC = 90, IV = 4.  </p></blockquote><p>提示：</p><ul><li><p>$1 &lt;= s.length &lt;= 15$</p></li><li><p>$s 仅含字符 (‘I’, ‘V’, ‘X’, ‘L’, ‘C’, ‘D’, ‘M’)$</p></li><li><p>题目数据保证 $s$ 是一个有效的罗马数字，且表示整数在范围 $[1, 3999]$ 内</p></li><li><p>题目所给测试用例皆符合罗马数字书写规则，不会出现跨位等情况。</p></li><li><p>$IL$ 和 $IM$ 这样的例子并不符合题目要求，$49$ 应该写作 $XLIX$ ，$999$ 应该写作 $CMXCIX$ 。</p></li></ul><hr><p>以下是题解：</p><h3 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路:"></a>解题思路:</h3><p>该题与前一题(<a href="/2023/08/28/LeetCode_12/">LeetCode_12</a>)十分相似，过程也完全是之前的逆过程，由此我们可以轻松得出相应的计算过程，即：依次遍历每一个字符，对于一些特殊字符（如$I$，$X$，$C$），我们多搜索一位以进行匹配。</p><p>代码如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">romanToInt</span><span class="params">(string s)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> Len=s.<span class="built_in">length</span>(),Num=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;Len;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(s[i]==<span class="string">&#x27;I&#x27;</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(s[i+<span class="number">1</span>]==<span class="string">&#x27;V&#x27;</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    Num+=<span class="number">4</span>;</span><br><span class="line">                    i++;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(s[i+<span class="number">1</span>]==<span class="string">&#x27;X&#x27;</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    Num+=<span class="number">9</span>;</span><br><span class="line">                    i++;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    Num+=<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(s[i]==<span class="string">&#x27;V&#x27;</span>)</span><br><span class="line">                Num+=<span class="number">5</span>;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(s[i]==<span class="string">&#x27;X&#x27;</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(s[i+<span class="number">1</span>]==<span class="string">&#x27;L&#x27;</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    Num+=<span class="number">40</span>;</span><br><span class="line">                    i++;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(s[i+<span class="number">1</span>]==<span class="string">&#x27;C&#x27;</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    Num+=<span class="number">90</span>;</span><br><span class="line">                    i++;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    Num+=<span class="number">10</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(s[i]==<span class="string">&#x27;L&#x27;</span>)</span><br><span class="line">                Num+=<span class="number">50</span>;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(s[i]==<span class="string">&#x27;C&#x27;</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(s[i+<span class="number">1</span>]==<span class="string">&#x27;D&#x27;</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    Num+=<span class="number">400</span>;</span><br><span class="line">                    i++;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(s[i+<span class="number">1</span>]==<span class="string">&#x27;M&#x27;</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    Num+=<span class="number">900</span>;</span><br><span class="line">                    i++;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    Num+=<span class="number">100</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(s[i]==<span class="string">&#x27;D&#x27;</span>)</span><br><span class="line">                Num+=<span class="number">500</span>;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(s[i]==<span class="string">&#x27;M&#x27;</span>)</span><br><span class="line">                Num+=<span class="number">1000</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> Num;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h4 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h4><p><a href="https://imgse.com/i/pPaG9pT"><img src="https://s1.ax1x.com/2023/08/28/pPaG9pT.png" alt="pPaG9pT.png"></a></p><p><div style="text-align:right;">本篇博客撰写于2023/8/28 19:46:48</p>]]></content>
    
    
    <summary type="html">罗马数字转整数</summary>
    
    
    
    <category term="程序" scheme="https://www.lwt-server.cn/categories/%E7%A8%8B%E5%BA%8F/"/>
    
    
    <category term="LeetCode题解" scheme="https://www.lwt-server.cn/tags/LeetCode%E9%A2%98%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode题解——12.整数转罗马数字</title>
    <link href="https://www.lwt-server.cn/2023/08/28/LeetCode_12/"/>
    <id>https://www.lwt-server.cn/2023/08/28/LeetCode_12/</id>
    <published>2023-08-28T09:13:06.000Z</published>
    <updated>2023-08-28T13:01:16.205Z</updated>
    
    <content type="html"><![CDATA[<h1 id="LeetCode题解"><a href="#LeetCode题解" class="headerlink" title="LeetCode题解"></a>LeetCode题解</h1><h2 id="整数转罗马数字"><a href="#整数转罗马数字" class="headerlink" title="整数转罗马数字"></a>整数转罗马数字</h2><h3 id="题目预览："><a href="#题目预览：" class="headerlink" title="题目预览："></a>题目预览：</h3><p>罗马数字包含以下七种字符： $I$， $V$， $X$， $L$，$C$，$D$ 和 $M$。</p><div class="table-container"><table><thead><tr><th style="text-align:center">字符</th><th style="text-align:center">数值</th></tr></thead><tbody><tr><td style="text-align:center">I</td><td style="text-align:center">1</td></tr><tr><td style="text-align:center">V</td><td style="text-align:center">5</td></tr><tr><td style="text-align:center">X</td><td style="text-align:center">10</td></tr><tr><td style="text-align:center">L</td><td style="text-align:center">50</td></tr><tr><td style="text-align:center">C</td><td style="text-align:center">100</td></tr><tr><td style="text-align:center">D</td><td style="text-align:center">500</td></tr><tr><td style="text-align:center">M</td><td style="text-align:center">1000</td></tr></tbody></table></div><p>例如， 罗马数字 $2$ 写做 $II$ ，即为两个并列的 $1$。$12$ 写做 $XII$ ，即为 $X + II$ 。 $27$ 写做  $XXVII$, 即为 $XX + V + II$ 。</p><p>通常情况下，罗马数字中小的数字在大的数字的右边。但也存在特例，例如 $4$ 不写做 $IIII$，而是 $IV$。数字 $1$ 在数字 $5$ 的左边，所表示的数等于大数 $5$ 减小数 $1$ 得到的数值 $4$ 。同样地，数字 $9$ 表示为 $IX$。这个特殊的规则只适用于以下六种情况：</p><ul><li><p>$I$ 可以放在 $V\ (5)$ 和 $X\ (10)$ 的左边，来表示 $4$ 和 $9$。  </p></li><li><p>$X$ 可以放在 $L\ (50)$ 和 $C\ (100)$ 的左边，来表示 $40$ 和 $90$。   </p></li><li><p>$C$ 可以放在 $D\ (500)$ 和 $M\ (1000)$ 的左边，来表示 $400$ 和 $900$。</p></li></ul><p>给你一个整数，将其转为罗马数字。</p><h4 id="示例-1"><a href="#示例-1" class="headerlink" title="示例 1:"></a>示例 1:</h4><p><b>输入:</b> num = 3<br><b>输出:</b> “III”</p><h4 id="示例-2"><a href="#示例-2" class="headerlink" title="示例 2:"></a>示例 2:</h4><p><b>输入:</b> num = 4<br><b>输出:</b> “IV”</p><h4 id="示例-3"><a href="#示例-3" class="headerlink" title="示例 3:"></a>示例 3:</h4><p><b>输入:</b> num = 9<br><b>输出:</b> “IX”</p><h4 id="示例-4"><a href="#示例-4" class="headerlink" title="示例 4:"></a>示例 4:</h4><p><b>输入:</b> num = 58<br><b>输出:</b> “LVIII”<br><b>解释:</b> L = 50, V = 5, III = 3.</p><h4 id="示例-5"><a href="#示例-5" class="headerlink" title="示例 5:"></a>示例 5:</h4><p><b>输入:</b> num = 1994<br><b>输出:</b> “MCMXCIV”<br><b>解释:</b> M = 1000, CM = 900, XC = 90, IV = 4.</p><p>提示：</p><ul><li>$1 &lt;= num &lt;= 3999$</li></ul><hr><p>以下是题解：</p><h3 id="解题思路-模拟："><a href="#解题思路-模拟：" class="headerlink" title="解题思路:模拟："></a>解题思路:模拟：</h3><p>按照题意，优先满足大数对应的转换可以保证答案正确，剩下的只是简单的模拟：</p><p>代码如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">string <span class="title">intToRoman</span><span class="params">(<span class="type">int</span> num)</span> </span>&#123;</span><br><span class="line">        string ans;</span><br><span class="line">        <span class="keyword">while</span>(num&gt;<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(num<span class="number">-1000</span>&gt;=<span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                num-=<span class="number">1000</span>;</span><br><span class="line">                ans+=<span class="string">&#x27;M&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(num<span class="number">-900</span>&gt;=<span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                num-=<span class="number">900</span>;</span><br><span class="line">                ans+=<span class="string">&quot;CM&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(num<span class="number">-500</span>&gt;=<span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                num-=<span class="number">500</span>;</span><br><span class="line">                ans+=<span class="string">&quot;D&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(num<span class="number">-400</span>&gt;=<span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                num-=<span class="number">400</span>;</span><br><span class="line">                ans+=<span class="string">&quot;CD&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(num<span class="number">-100</span>&gt;=<span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                num-=<span class="number">100</span>;</span><br><span class="line">                ans+=<span class="string">&quot;C&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(num<span class="number">-90</span>&gt;=<span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                num-=<span class="number">90</span>;</span><br><span class="line">                ans+=<span class="string">&quot;XC&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(num<span class="number">-50</span>&gt;=<span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                num-=<span class="number">50</span>;</span><br><span class="line">                ans+=<span class="string">&quot;L&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(num<span class="number">-40</span>&gt;=<span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                num-=<span class="number">40</span>;</span><br><span class="line">                ans+=<span class="string">&quot;XL&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(num<span class="number">-10</span>&gt;=<span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                num-=<span class="number">10</span>;</span><br><span class="line">                ans+=<span class="string">&quot;X&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(num<span class="number">-9</span>&gt;=<span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                num-=<span class="number">9</span>;</span><br><span class="line">                ans+=<span class="string">&quot;IX&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(num<span class="number">-5</span>&gt;=<span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                num-=<span class="number">5</span>;</span><br><span class="line">                ans+=<span class="string">&quot;V&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(num<span class="number">-4</span>&gt;=<span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                num-=<span class="number">4</span>;</span><br><span class="line">                ans+=<span class="string">&quot;IV&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                num-=<span class="number">1</span>;</span><br><span class="line">                ans+=<span class="string">&quot;I&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h4 id="结果："><a href="#结果：" class="headerlink" title="结果："></a>结果：</h4><p><a href="https://imgse.com/i/pPaKb6A"><img src="https://s1.ax1x.com/2023/08/28/pPaKb6A.png" alt="pPaKb6A.png"></a></p><p><div style="text-align:right;">本篇博客撰写于2023/8/28 17:13:06</p>]]></content>
    
    
    <summary type="html">整数转罗马数字</summary>
    
    
    
    <category term="程序" scheme="https://www.lwt-server.cn/categories/%E7%A8%8B%E5%BA%8F/"/>
    
    
    <category term="LeetCode题解" scheme="https://www.lwt-server.cn/tags/LeetCode%E9%A2%98%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode题解——11.盛最多水的容器</title>
    <link href="https://www.lwt-server.cn/2023/08/28/LeetCode_11/"/>
    <id>https://www.lwt-server.cn/2023/08/28/LeetCode_11/</id>
    <published>2023-08-28T09:12:55.000Z</published>
    <updated>2023-08-28T09:41:15.788Z</updated>
    
    <content type="html"><![CDATA[<h1 id="LeetCode题解"><a href="#LeetCode题解" class="headerlink" title="LeetCode题解"></a>LeetCode题解</h1><h2 id="盛最多水的容器"><a href="#盛最多水的容器" class="headerlink" title="盛最多水的容器"></a>盛最多水的容器</h2><h3 id="题目预览："><a href="#题目预览：" class="headerlink" title="题目预览："></a>题目预览：</h3><p>给定一个长度为 $n$ 的整数数组 $height$ 。有 $n$ 条垂线，第 $i$ 条线的两个端点是 $(i, 0)$ 和 $(i, height[i])$ 。</p><p>找出其中的两条线，使得它们与 $x$ 轴共同构成的容器可以容纳最多的水。</p><p>返回容器可以储存的最大水量。</p><p>说明：你不能倾斜容器。</p><h4 id="示例-1："><a href="#示例-1：" class="headerlink" title="示例 1："></a>示例 1：</h4><p><a href="https://imgse.com/i/pPaK5FO"><img src="https://s1.ax1x.com/2023/08/28/pPaK5FO.jpg" alt="pPaK5FO.jpg"></a></p><blockquote><p><b>输入：</b>[1,8,6,2,5,4,8,3,7]<br><b>输出：</b>49<br><b>解释：</b>图中垂直线代表输入数组 [1,8,6,2,5,4,8,3,7]。在此情况下，容器能够容纳水（表示为蓝色部分）的最大值为 49。  </p></blockquote><h4 id="示例-2："><a href="#示例-2：" class="headerlink" title="示例 2："></a>示例 2：</h4><blockquote><p><b>输入：</b>height = [1,1]<br><b>输出：</b>1  </p></blockquote><p>提示：</p><ul><li><p>$n == height.length$  </p></li><li><p>$2 &lt;= n &lt;= 105$  </p></li><li><p>$0 &lt;= height[i] &lt;= 10^4$  </p></li></ul><hr><p>以下是题解：</p><h3 id="解题思路-双指针法："><a href="#解题思路-双指针法：" class="headerlink" title="解题思路:双指针法："></a>解题思路:双指针法：</h3><ol><li>定义两个分别指向容器两端的指针；  </li><li>依次向内收缩对应高度最短的一边；  </li><li>更新最大值；  </li><li>重复上述 $2 , 3$ 步骤直到两个指针相遇。</li></ol><p>代码如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>: </span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">maxArea</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; height)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> ans=<span class="number">0</span>,Left=<span class="number">0</span>,Right=height.<span class="built_in">size</span>()<span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">while</span>(Left&lt;Right)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> Len=Right-Left;</span><br><span class="line">            ans=<span class="built_in">max</span>(ans,<span class="built_in">min</span>(height[Left],height[Right])*Len);</span><br><span class="line">            <span class="keyword">if</span>(height[Left]&gt;height[Right])</span><br><span class="line">                Right--;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                Left++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h4 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h4><p><a href="https://imgse.com/i/pPaKofe"><img src="https://s1.ax1x.com/2023/08/28/pPaKofe.png" alt="pPaKofe.png"></a></p><p><div style="text-align:right;">本篇博客撰写于2023/8/28 17:12:55</p>]]></content>
    
    
    <summary type="html">盛最多水的容器</summary>
    
    
    
    <category term="程序" scheme="https://www.lwt-server.cn/categories/%E7%A8%8B%E5%BA%8F/"/>
    
    
    <category term="LeetCode题解" scheme="https://www.lwt-server.cn/tags/LeetCode%E9%A2%98%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode题解——10.正则表达式匹配</title>
    <link href="https://www.lwt-server.cn/2023/08/28/LeetCode_10/"/>
    <id>https://www.lwt-server.cn/2023/08/28/LeetCode_10/</id>
    <published>2023-08-28T07:19:08.000Z</published>
    <updated>2023-08-28T09:32:51.838Z</updated>
    
    <content type="html"><![CDATA[<h1 id="LeetCode题解"><a href="#LeetCode题解" class="headerlink" title="LeetCode题解"></a>LeetCode题解</h1><h2 id="字符串转换整数-atoi"><a href="#字符串转换整数-atoi" class="headerlink" title="字符串转换整数 (atoi)"></a>字符串转换整数 (atoi)</h2><h3 id="题目预览："><a href="#题目预览：" class="headerlink" title="题目预览："></a>题目预览：</h3><p>给你一个字符串 $s$ 和一个字符规律 $p$，请你来实现一个支持 <code>&#39;.&#39;</code> 和 <code>&#39;*&#39;</code> 的正则表达式匹配。</p><ul><li><p><code>&#39;.&#39;</code> 匹配任意单个字符</p></li><li><p><code>&#39;*&#39;</code> 匹配零个或多个前面的那一个元素</p></li></ul><p>所谓匹配，是要涵盖 <b>整个</b> 字符串 $s$ 的，而不是部分字符串。</p><h4 id="示例-1："><a href="#示例-1：" class="headerlink" title="示例 1："></a>示例 1：</h4><blockquote><p><b>输入：</b>s = <code>&quot;aa&quot;</code>, p = <code>&quot;a&quot;</code><br><b>输出：</b>false<br><b>解释：</b><code>&quot;a&quot;</code> 无法匹配 <code>&quot;aa&quot;</code> 整个字符串。  </p></blockquote><h4 id="示例-2"><a href="#示例-2" class="headerlink" title="示例 2:"></a>示例 2:</h4><blockquote><p><b>输入：</b>s = <code>&quot;aa&quot;</code>, p = <code>&quot;a*&quot;</code><br><b>输出：</b>true<br><b>解释：</b>因为 <code>&#39;*&#39;</code> 代表可以匹配零个或多个前面的那一个元素, 在这里前面的元素就是 <code>&#39;a&#39;</code>。因此，字符串 <code>&quot;aa&quot;</code> 可被视为 <code>&#39;a&#39;</code> 重复了一次。</p></blockquote><h4 id="示例-3："><a href="#示例-3：" class="headerlink" title="示例 3："></a>示例 3：</h4><blockquote><p><b>输入：</b>s = <code>&quot;ab&quot;</code>, p = <code>&quot;.*&quot;</code><br><b>输出：</b>true<br><b>解释：</b><code>&quot;.*&quot;</code> 表示可匹配零个或多个（<code>&#39;*&#39;</code>）任意字符（<code>&#39;.&#39;</code>）。</p></blockquote><p>提示：</p><ul><li><p>$1 &lt;= s.length &lt;= 20$</p></li><li><p>$1 &lt;= p.length &lt;= 20$</p></li><li><p>$s$ 只包含从 $a-z$ 的小写字母。</p></li><li><p>$p$ 只包含从 $a-z$ 的小写字母，以及字符 <code>.</code> 和 <code>*</code>。<br>保证每次出现字符 <code>*</code> 时，前面都匹配到有效的字符</p></li></ul><hr><p>以下是题解：</p><h3 id="解题思路-动态规划"><a href="#解题思路-动态规划" class="headerlink" title="解题思路:动态规划"></a>解题思路:动态规划</h3><h4 id="状态转移方程如下："><a href="#状态转移方程如下：" class="headerlink" title="状态转移方程如下："></a>状态转移方程如下：</h4><script type="math/tex; mode=display">    dp[i][j]=     \begin{cases}        dp[i−1][j−1], & s[i]=p[j]\\        dp[i][j−2], & p[j]=‘∗‘\ \&\ s[i]=p[j−1] \\        dp[i][j−2] \ or \ dp[i−1][j], & p[j]=‘∗‘\ \&\ s[i]=p[j−1]\\    \end{cases}</script><h4 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h4><p>记 $s$ 的长度为 $m$，$p$ 的长度为 $n$ 。为便于状态更新，减少对边界的判断，初始二维 $dp$ 数组维度为 $(m+1)×(n+1)$ ，其中第一行和第一列的状态分别表示字符串 $s$ 和 $p$ 为空时的情况。</p><p>显然，$dp[0][0]=True$ 。对于其他 $dp[0][j]$ ，当 $p[j]≠$<code>&#39;*&#39;</code> 时，$s[0,…,j]$ 无法与空字符匹配，因此有 $dp[0][j]=False$ ；而当 $p[j]=$<code>&#39;*&#39;</code>时，则有 $dp[0][j]$=$dp[0][j-2]$ 。</p><blockquote><p>⚠️ 需要特别注意的是，由于 $dp$ 数组维度为 $(m+1)×(n+1)$ ，在具体代码实现时，$s[i−1]$ 和 $p[j−1]$ 才是分别表示 $s$ 和 $p$ 中的第 $i$ 和第 $j$ 个字符。</p></blockquote><p>代码如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">bool</span> <span class="title">isMatch</span><span class="params">(string s, string p)</span> </span>&#123;</span><br><span class="line">        <span class="type">const</span> <span class="type">int</span> sLen=s.<span class="built_in">length</span>(),pLen=p.<span class="built_in">length</span>();</span><br><span class="line">        vector&lt;vector&lt;<span class="type">bool</span>&gt;&gt; <span class="built_in">dp</span>(sLen+<span class="number">1</span>,<span class="built_in">vector</span>&lt;<span class="type">bool</span>&gt;(pLen+<span class="number">1</span>,<span class="literal">false</span>));</span><br><span class="line">        dp[<span class="number">0</span>][<span class="number">0</span>]=<span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=pLen;j++)</span><br><span class="line">            <span class="keyword">if</span>(p[j<span class="number">-1</span>]==<span class="string">&#x27;*&#x27;</span>)</span><br><span class="line">                dp[<span class="number">0</span>][j]=dp[<span class="number">0</span>][j<span class="number">-2</span>];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=sLen;i++)</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=pLen;j++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(s[i<span class="number">-1</span>]==p[j<span class="number">-1</span>]||p[j<span class="number">-1</span>]==<span class="string">&#x27;.&#x27;</span>)</span><br><span class="line">                    dp[i][j]=dp[i<span class="number">-1</span>][j<span class="number">-1</span>];</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(p[j<span class="number">-1</span>]==<span class="string">&#x27;*&#x27;</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span>(s[i<span class="number">-1</span>]!=p[j<span class="number">-2</span>]&amp;&amp;p[j<span class="number">-2</span>]!=<span class="string">&#x27;.&#x27;</span>)</span><br><span class="line">                        dp[i][j]=dp[i][j<span class="number">-2</span>];</span><br><span class="line">                    <span class="keyword">else</span></span><br><span class="line">                        dp[i][j]=dp[i][j<span class="number">-2</span>]|dp[i<span class="number">-1</span>][j];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        <span class="keyword">return</span> dp[sLen][pLen];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h4 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h4><p><a href="https://imgse.com/i/pPa9W6g"><img src="https://s1.ax1x.com/2023/08/28/pPa9W6g.png" alt="pPa9W6g.png"></a></p><p><div style="text-align:right;">本篇博客撰写于2023/8/28 15:19:08</p>]]></content>
    
    
    <summary type="html">正则表达式匹配</summary>
    
    
    
    <category term="程序" scheme="https://www.lwt-server.cn/categories/%E7%A8%8B%E5%BA%8F/"/>
    
    
    <category term="LeetCode题解" scheme="https://www.lwt-server.cn/tags/LeetCode%E9%A2%98%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode题解——9.回文数</title>
    <link href="https://www.lwt-server.cn/2023/08/28/LeetCode_9/"/>
    <id>https://www.lwt-server.cn/2023/08/28/LeetCode_9/</id>
    <published>2023-08-28T06:45:03.000Z</published>
    <updated>2023-08-28T09:32:48.349Z</updated>
    
    <content type="html"><![CDATA[<h1 id="LeetCode题解"><a href="#LeetCode题解" class="headerlink" title="LeetCode题解"></a>LeetCode题解</h1><h2 id="回文数"><a href="#回文数" class="headerlink" title="回文数"></a>回文数</h2><h3 id="题目预览："><a href="#题目预览：" class="headerlink" title="题目预览："></a>题目预览：</h3><p>给你一个整数 $x$ ，如果 $x$ 是一个回文整数，返回 $true$ ；否则，返回 $false$ 。</p><p>回文数是指正序（从左向右）和倒序（从右向左）读都是一样的整数。</p><ul><li>例如，$121$ 是回文，而 $123$ 不是。</li></ul><h4 id="示例-1："><a href="#示例-1：" class="headerlink" title="示例 1："></a>示例 1：</h4><blockquote><p><b>输入：</b>x = 121<br><b>输出：</b>true  </p></blockquote><h4 id="示例-2："><a href="#示例-2：" class="headerlink" title="示例 2："></a>示例 2：</h4><blockquote><p><b>输入：</b>x = -121<br><b>输出：</b>false<br><b>解释：</b>从左向右读, 为 -121 。 从右向左读, 为 121- 。因此它不是一个回文数。  </p></blockquote><h4 id="示例-3："><a href="#示例-3：" class="headerlink" title="示例 3："></a>示例 3：</h4><blockquote><p><b>输入：</b>x = 10<br><b>输出：</b>false<br><b>解释：</b>从右向左读, 为 01 。因此它不是一个回文数。  </p></blockquote><p>提示：</p><ul><li>$-2^{31} &lt;= x &lt;= 2^{31} - 1$</li></ul><p><b>进阶：</b>你能不将整数转为字符串来解决这个问题吗？</p><hr><p>以下是题解：</p><h3 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路:"></a>解题思路:</h3><p>通过经典对10取模法求得其对应逆序数字的值，与原值比较。</p><blockquote><p>这里使用长整型应对溢出问题</p></blockquote><p>代码如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">bool</span> <span class="title">isPalindrome</span><span class="params">(<span class="type">int</span> x)</span> </span>&#123;</span><br><span class="line">        <span class="type">long</span> <span class="type">long</span> <span class="type">int</span> Num=<span class="number">0</span>,tmp=x;</span><br><span class="line">        <span class="keyword">if</span>(x&lt;<span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">while</span>(tmp/<span class="number">10</span>!=<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            Num=Num*<span class="number">10</span>+(tmp%<span class="number">10</span>);</span><br><span class="line">            tmp/=<span class="number">10</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        Num=Num*<span class="number">10</span>+tmp;</span><br><span class="line">        <span class="keyword">if</span>(Num==x)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h4 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h4><p><a href="https://imgse.com/i/pPakxFs"><img src="https://s1.ax1x.com/2023/08/28/pPakxFs.png" alt="pPakxFs.png"></a></p><p><div style="text-align:right;">本篇博客撰写于2023/8/28 14:45:03</p>]]></content>
    
    
    <summary type="html">回文数</summary>
    
    
    
    <category term="程序" scheme="https://www.lwt-server.cn/categories/%E7%A8%8B%E5%BA%8F/"/>
    
    
    <category term="LeetCode题解" scheme="https://www.lwt-server.cn/tags/LeetCode%E9%A2%98%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode题解——57.插入区间</title>
    <link href="https://www.lwt-server.cn/2023/08/28/LeetCode_57/"/>
    <id>https://www.lwt-server.cn/2023/08/28/LeetCode_57/</id>
    <published>2023-08-28T01:23:09.000Z</published>
    <updated>2023-08-29T05:07:32.541Z</updated>
    
    <content type="html"><![CDATA[<h1 id="LeetCode题解"><a href="#LeetCode题解" class="headerlink" title="LeetCode题解"></a>LeetCode题解</h1><h2 id="插入区间"><a href="#插入区间" class="headerlink" title="插入区间"></a>插入区间</h2><h3 id="题目预览："><a href="#题目预览：" class="headerlink" title="题目预览："></a>题目预览：</h3><p>给你一个 <b>无重叠的</b> ，按照区间起始端点排序的区间列表。</p><p>在列表中插入一个新的区间，你需要确保列表中的区间仍然有序且不重叠（如果有必要的话，可以合并区间）。</p><h4 id="示例-1："><a href="#示例-1：" class="headerlink" title="示例 1："></a>示例 1：</h4><blockquote><p><b>输入：</b>intervals = [[1,3],[6,9]], newInterval = [2,5]<br><b>输出：</b>[[1,5],[6,9]]  </p></blockquote><h4 id="示例-2："><a href="#示例-2：" class="headerlink" title="示例 2："></a>示例 2：</h4><blockquote><p><b>输入：</b>intervals = [[1,2],[3,5],[6,7],[8,10],[12,16]], newInterval = [4,8]<br><b>输出：</b>[[1,2],[3,10],[12,16]]<br><b>解释：</b>这是因为新的区间 [4,8] 与 [3,5],[6,7],[8,10] 重叠。  </p></blockquote><h4 id="示例-3："><a href="#示例-3：" class="headerlink" title="示例 3："></a>示例 3：</h4><blockquote><p><b>输入：</b>intervals = [], newInterval = [5,7]<br><b>输出：</b>[[5,7]]  </p></blockquote><h4 id="示例-4："><a href="#示例-4：" class="headerlink" title="示例 4："></a>示例 4：</h4><blockquote><p><b>输入：</b>intervals = [[1,5]], newInterval = [2,3]<br><b>输出：</b>[[1,5]]  </p></blockquote><h4 id="示例-5："><a href="#示例-5：" class="headerlink" title="示例 5："></a>示例 5：</h4><blockquote><p><b>输入：</b>intervals = [[1,5]], newInterval = [2,7]<br><b>输出：</b>[[1,7]]  </p></blockquote><p>提示：</p><ul><li><p>$0 &lt;= intervals.length &lt;= 10^4$</p></li><li><p>$intervals[i].length == 2$</p></li><li><p>$0 &lt;= intervals[i][0] &lt;= intervals[i][1] &lt;= 10^5$</p></li><li><p>$intervals$ 根据 $intervals[i][0]$ 按 <b>升序</b> 排列</p></li><li><p>$newInterval.length == 2$</p></li><li><p>$0 &lt;= newInterval[0] &lt;= newInterval[1] &lt;= 10^5$</p></li></ul><hr><p>以下是题解：</p><h3 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h3><p>该题与上一题(<a href="/2023/08/27/LeetCode_56/">LeetCode_56</a>)类似，不同的是该题的intervals容器默认是有序的，而我们只需将newInterval插入对应的位置，新问题就转化成了我们已经解决的问题。</p><p>代码如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; ans;</span><br><span class="line">    <span class="type">int</span> Len = <span class="number">0</span>, Head = <span class="number">-1</span>, Tail = <span class="number">-1</span>;</span><br><span class="line">    vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; <span class="built_in">insert</span>(vector&lt;vector&lt;<span class="type">int</span>&gt;&gt;&amp; intervals, vector&lt;<span class="type">int</span>&gt;&amp; newInterval) &#123;</span><br><span class="line">        <span class="keyword">if</span> (intervals.<span class="built_in">size</span>() == <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span> &#123; newInterval &#125;;</span><br><span class="line">        Len = intervals.<span class="built_in">size</span>() + <span class="number">1</span>;</span><br><span class="line">        vector&lt;vector&lt;<span class="type">int</span>&gt;&gt;::iterator pos = intervals.<span class="built_in">begin</span>();</span><br><span class="line">        <span class="keyword">while</span> ((*pos)[<span class="number">0</span>] &lt; newInterval[<span class="number">0</span>])</span><br><span class="line">        &#123;</span><br><span class="line">            pos++;</span><br><span class="line">            <span class="keyword">if</span> (pos == intervals.<span class="built_in">end</span>())</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        intervals.<span class="built_in">insert</span>(pos,newInterval);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; Len; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> ((intervals[i])[<span class="number">0</span>] &gt; Tail)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (Tail != <span class="number">-1</span>)</span><br><span class="line">                    ans.<span class="built_in">push_back</span>(&#123; Head,Tail &#125;);</span><br><span class="line">                Head = intervals[i][<span class="number">0</span>];</span><br><span class="line">                Tail = intervals[i][<span class="number">1</span>];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                Tail = <span class="built_in">max</span>(Tail, intervals[i][<span class="number">1</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        ans.<span class="built_in">push_back</span>(&#123; Head,Tail &#125;);</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h4 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h4><p><a href="https://imgse.com/i/pPU7E3q"><img src="https://s1.ax1x.com/2023/08/28/pPU7E3q.png" alt="pPU7E3q.png"></a></p><p><div style="text-align:right;">本篇博客撰写于2023/8/28 09:23:09</p>]]></content>
    
    
    <summary type="html">插入区间</summary>
    
    
    
    <category term="程序" scheme="https://www.lwt-server.cn/categories/%E7%A8%8B%E5%BA%8F/"/>
    
    
    <category term="LeetCode题解" scheme="https://www.lwt-server.cn/tags/LeetCode%E9%A2%98%E8%A7%A3/"/>
    
    <category term="LeetCode每日一题" scheme="https://www.lwt-server.cn/tags/LeetCode%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode题解——8.字符串转换整数 (atoi)</title>
    <link href="https://www.lwt-server.cn/2023/08/27/LeetCode_8/"/>
    <id>https://www.lwt-server.cn/2023/08/27/LeetCode_8/</id>
    <published>2023-08-27T14:48:52.000Z</published>
    <updated>2023-08-30T11:08:51.259Z</updated>
    
    <content type="html"><![CDATA[<h1 id="LeetCode题解"><a href="#LeetCode题解" class="headerlink" title="LeetCode题解"></a>LeetCode题解</h1><h2 id="字符串转换整数-atoi"><a href="#字符串转换整数-atoi" class="headerlink" title="字符串转换整数 (atoi)"></a>字符串转换整数 (atoi)</h2><h3 id="题目预览："><a href="#题目预览：" class="headerlink" title="题目预览："></a>题目预览：</h3><p>请你来实现一个 $myAtoi(string s)$ 函数，使其能将字符串转换成一个 32 位有符号整数（类似 C/C++ 中的 $atoi$ 函数）。</p><p>函数 $myAtoi(string s)$ 的算法如下：</p><ol><li><p>读入字符串并丢弃无用的 <b>前导空格</b>  </p></li><li><p>检查下一个字符（假设还未到字符末尾）为正还是负号，读取该字符（如果有）。 确定最终结果是负数还是正数。 如果两者都不存在，则假定结果为正。  </p></li><li><p>读入下一个字符，直到到达下一个 <b>非数字字符</b> 或到达输入的 <b>结尾</b> 。字符串的其余部分将被 <b>忽略</b> 。 </p></li><li><p>将前面步骤读入的这些数字转换为整数（即，”123” -&gt; 123， “0032” -&gt; 32）。如果 <b>没有读入数字</b> ，则整数为 0 。必要时更改符号（从步骤 2 开始）。  </p></li><li><p>如果整数数超过 32 位有符号整数范围 $[−2^{31},  2^{31} − 1]$ ，需要截断这个整数，使其保持在这个范围内。具体来说，小于 $−2^{31}$ 的整数应该被固定为 $−2^{31}$ ，大于 $2^{31} − 1$ 的整数应该被固定为 $2^{31} − 1$ 。  </p></li><li><p>返回整数作为最终结果。  </p></li></ol><p>注意：</p><p>本题中的空白字符只包括空格字符<code>&#39; &#39;</code>。除前导空格或数字后的其余字符串外，<b>请勿忽略</b> 任何其他字符。</p><h4 id="示例-1："><a href="#示例-1：" class="headerlink" title="示例 1："></a>示例 1：</h4><blockquote><p><b>输入：</b>s = “42”<br><b>输出：</b>42  </p></blockquote><h4 id="示例-2："><a href="#示例-2：" class="headerlink" title="示例 2："></a>示例 2：</h4><blockquote><p><b>输入：</b>s = “   -42”<br><b>输出：</b>-42</p></blockquote><h4 id="示例-3："><a href="#示例-3：" class="headerlink" title="示例 3："></a>示例 3：</h4><blockquote><p><b>输入：</b>s = “4193 with words”<br><b>输出：</b>4193  </p></blockquote><p>提示：</p><ul><li>$0 &lt;= s.length &lt;= 200$</li><li>$s$ 由英文字母（大写和小写）、数字（$0-9$）、’ ‘、’+’、’-‘ 和 ‘.’ 组成</li></ul><hr><p>以下是题解：</p><h3 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路:"></a>解题思路:</h3><p>对字符串$s$执行以下步骤：</p><ol><li><p>去除空格  </p></li><li><p>判断正负  </p></li><li><p>去除前导零（注意只有零的情况）  </p></li><li><p>对每一位字符计算对应数字并累加求和  </p></li></ol><p>代码如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">myAtoi</span><span class="params">(string s)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> Start=<span class="number">0</span>;</span><br><span class="line">        <span class="type">bool</span> isNegative=<span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">while</span>(s[Start]==<span class="string">&#x27; &#x27;</span>)    <span class="comment">//去除空格</span></span><br><span class="line">            Start++;</span><br><span class="line">        <span class="keyword">if</span>(s[Start]==<span class="string">&#x27;-&#x27;</span>)   <span class="comment">//判断正负</span></span><br><span class="line">        &#123;</span><br><span class="line">            isNegative=<span class="literal">true</span>;</span><br><span class="line">            Start++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(s[Start]==<span class="string">&#x27;+&#x27;</span>)</span><br><span class="line">            Start++;</span><br><span class="line">        <span class="keyword">while</span>(s[Start]==<span class="string">&#x27;0&#x27;</span>)    <span class="comment">//去除前导零</span></span><br><span class="line">            Start++;</span><br><span class="line">        <span class="keyword">if</span>(s[Start]&lt;<span class="string">&#x27;0&#x27;</span>||s[Start]&gt;<span class="string">&#x27;9&#x27;</span>)  <span class="comment">//判断只有零的情况</span></span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> Len=<span class="number">0</span>;</span><br><span class="line">        string str=<span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">while</span>(s[Start+Len]&gt;=<span class="string">&#x27;0&#x27;</span>&amp;&amp;s[Start+Len]&lt;=<span class="string">&#x27;9&#x27;</span>) <span class="comment">//提取纯数字</span></span><br><span class="line">        &#123;</span><br><span class="line">            str+=s[Start+Len];</span><br><span class="line">            Len++;</span><br><span class="line">            <span class="keyword">if</span>(Len&gt;<span class="number">10</span>)</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">reverse</span>(str.<span class="built_in">begin</span>(), str.<span class="built_in">end</span>());</span><br><span class="line">        <span class="type">long</span> <span class="type">long</span> <span class="type">int</span> Num=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=Len<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--)   <span class="comment">//求和</span></span><br><span class="line">            Num=Num*<span class="number">10</span>+(str[i]-<span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">        <span class="keyword">if</span>(isNegative)  <span class="comment">//判断溢出</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(Num&gt;<span class="number">2147483648</span>)</span><br><span class="line">                <span class="keyword">return</span> <span class="number">-2147483648</span>;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="keyword">return</span> -Num;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(Num&gt;<span class="number">2147483647</span>)</span><br><span class="line">                <span class="keyword">return</span> <span class="number">2147483647</span>;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="keyword">return</span> Num;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h4 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h4><p><a href="https://imgse.com/i/pPU2onA"><img src="https://s1.ax1x.com/2023/08/27/pPU2onA.png" alt="pPU2onA.png"></a></p><p><div style="text-align:right;">本篇博客撰写于2023/8/27 22:48:52</p>]]></content>
    
    
    <summary type="html">字符串转换整数 (atoi)</summary>
    
    
    
    <category term="程序" scheme="https://www.lwt-server.cn/categories/%E7%A8%8B%E5%BA%8F/"/>
    
    
    <category term="LeetCode题解" scheme="https://www.lwt-server.cn/tags/LeetCode%E9%A2%98%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode题解——7.整数反转</title>
    <link href="https://www.lwt-server.cn/2023/08/27/LeetCode_7/"/>
    <id>https://www.lwt-server.cn/2023/08/27/LeetCode_7/</id>
    <published>2023-08-27T11:31:56.000Z</published>
    <updated>2023-08-30T11:08:33.974Z</updated>
    
    <content type="html"><![CDATA[<h1 id="LeetCode题解"><a href="#LeetCode题解" class="headerlink" title="LeetCode题解"></a>LeetCode题解</h1><h2 id="整数反转"><a href="#整数反转" class="headerlink" title="整数反转"></a>整数反转</h2><h3 id="题目预览："><a href="#题目预览：" class="headerlink" title="题目预览："></a>题目预览：</h3><p>给你一个 32 位的有符号整数 $x$ ，返回将 $x$ 中的数字部分反转后的结果。</p><p>如果反转后整数超过 32 位的有符号整数的范围 $[−2^{31},  2^{31} − 1]$ ，就返回 0。</p><p>假设环境不允许存储 64 位整数（有符号或无符号）。</p><h4 id="示例-1："><a href="#示例-1：" class="headerlink" title="示例 1："></a>示例 1：</h4><blockquote><p><b>输入：</b>x = 123<br><b>输出：</b>321</p></blockquote><h4 id="示例-2："><a href="#示例-2：" class="headerlink" title="示例 2："></a>示例 2：</h4><blockquote><p><b>输入：</b>x = -123<br><b>输出：</b>-321</p></blockquote><h4 id="示例-3："><a href="#示例-3：" class="headerlink" title="示例 3："></a>示例 3：</h4><blockquote><p><b>输入：</b>x = 120<br><b>输出：</b>21</p></blockquote><h4 id="示例-4："><a href="#示例-4：" class="headerlink" title="示例 4："></a>示例 4：</h4><blockquote><p><b>输入：</b>x = 0<br><b>输出：</b>0</p></blockquote><p>提示：</p><ul><li>${-2}^{31} &lt;= x &lt;= {2}^{31}-1$  </li></ul><hr><p>以下是题解：</p><h3 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路:"></a>解题思路:</h3><p>逆序可以通过对数字重复对10取余，除以10的步骤。本题难点在于不使用64位整数判断数据是否溢出。</p><p>这里直接引用LeetCode官方的解释：</p><p><a href="https://imgse.com/i/pPUwgx0"><img src="https://s1.ax1x.com/2023/08/27/pPUwgx0.png" alt="pPUwgx0.png"></a></p><p>代码如下：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">reverse</span><span class="params">(<span class="type">int</span> x)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> rev = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (x != <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (rev &lt; INT_MIN / <span class="number">10</span> || rev &gt; INT_MAX / <span class="number">10</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="type">int</span> digit = x % <span class="number">10</span>;</span><br><span class="line">            x /= <span class="number">10</span>;</span><br><span class="line">            rev = rev * <span class="number">10</span> + digit;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> rev;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p><h4 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h4><p><a href="https://imgse.com/i/pPUwc2q"><img src="https://s1.ax1x.com/2023/08/27/pPUwc2q.png" alt="pPUwc2q.png"></a></p><h3 id="这里补充一个我感觉很“巧妙”的一个方法"><a href="#这里补充一个我感觉很“巧妙”的一个方法" class="headerlink" title="这里补充一个我感觉很“巧妙”的一个方法"></a>这里补充一个我感觉很“巧妙”的一个方法</h3><p>巧妙的利用了异常捕获</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">reverse</span><span class="params">(<span class="type">int</span> x)</span> </span>&#123;</span><br><span class="line">        string s=<span class="built_in">to_string</span>(x);<span class="comment">//变成字符串</span></span><br><span class="line">        std::<span class="built_in">reverse</span>(s.<span class="built_in">begin</span>(), s.<span class="built_in">end</span>());<span class="comment">//翻转字符串</span></span><br><span class="line">        <span class="type">int</span> ans=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            ans=<span class="built_in">stoi</span>(s);<span class="comment">//变回数字</span></span><br><span class="line">            <span class="keyword">if</span> (x&lt;<span class="number">0</span>) ans=-ans;<span class="comment">//x是负数，加上负号</span></span><br><span class="line">        &#125;<span class="built_in">catch</span>(exception ex)&#123;&#125;<span class="comment">//溢出，啥也不做，返回零</span></span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p><div style="text-align:right;">本篇博客撰写于2023/8/27 19:31:56</p>]]></content>
    
    
    <summary type="html">整数反转</summary>
    
    
    
    <category term="程序" scheme="https://www.lwt-server.cn/categories/%E7%A8%8B%E5%BA%8F/"/>
    
    
    <category term="LeetCode题解" scheme="https://www.lwt-server.cn/tags/LeetCode%E9%A2%98%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode题解——6.N字形变换</title>
    <link href="https://www.lwt-server.cn/2023/08/27/LeetCode_6/"/>
    <id>https://www.lwt-server.cn/2023/08/27/LeetCode_6/</id>
    <published>2023-08-27T08:36:23.000Z</published>
    <updated>2023-08-30T11:08:27.276Z</updated>
    
    <content type="html"><![CDATA[<h1 id="LeetCode题解"><a href="#LeetCode题解" class="headerlink" title="LeetCode题解"></a>LeetCode题解</h1><h2 id="N字形变换"><a href="#N字形变换" class="headerlink" title="N字形变换"></a>N字形变换</h2><h3 id="题目预览："><a href="#题目预览：" class="headerlink" title="题目预览："></a>题目预览：</h3><p>将一个给定字符串 $s$ 根据给定的行数 $numRows$ ，以从上往下、从左到右进行 $Z$ 字形排列。</p><p>比如输入字符串为 “PAYPALISHIRING” 行数为 3 时，排列如下：</p><div class="table-container"><table><thead><tr><th style="text-align:center">P</th><th style="text-align:center"></th><th style="text-align:center">A</th><th style="text-align:center"></th><th style="text-align:center">H</th><th style="text-align:center"></th><th style="text-align:center">N</th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:center">P</td><td style="text-align:center">L</td><td style="text-align:center">S</td><td style="text-align:center">I</td><td style="text-align:center">I</td><td style="text-align:center">G</td></tr><tr><td style="text-align:center">Y</td><td style="text-align:center"></td><td style="text-align:center">I</td><td style="text-align:center"></td><td style="text-align:center">R</td></tr></tbody></table></div><p>之后，你的输出需要从左往右逐行读取，产生出一个新的字符串，比如：”PAHNAPLSIIGYIR”。</p><p>请你实现这个将字符串进行指定行数变换的函数：</p><p>string convert(string s, int numRows);</p><h4 id="示例-1："><a href="#示例-1：" class="headerlink" title="示例 1："></a>示例 1：</h4><blockquote><p><b>输入：</b>s = “PAYPALISHIRING”, numRows = 3<br><b>输出：</b>“PAHNAPLSIIGYIR”</p></blockquote><h4 id="示例-2："><a href="#示例-2：" class="headerlink" title="示例 2："></a>示例 2：</h4><blockquote><p><b>输入：</b>s = “PAYPALISHIRING”, numRows = 4<br><b>输出：</b>“PINALSIGYAHRPI”<br><b>解释：</b>  </p></blockquote><div class="table-container"><table><thead><tr><th style="text-align:center">P</th><th style="text-align:center"></th><th style="text-align:center"></th><th style="text-align:center">I</th><th style="text-align:center"></th><th style="text-align:center"></th><th style="text-align:center">N</th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:center"></td><td style="text-align:center">L</td><td style="text-align:center">S</td><td style="text-align:center"></td><td style="text-align:center">I</td><td style="text-align:center">G</td></tr><tr><td style="text-align:center">Y</td><td style="text-align:center">A</td><td style="text-align:center"></td><td style="text-align:center">H</td><td style="text-align:center">R</td></tr><tr><td style="text-align:center">P</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center">I</td></tr></tbody></table></div><h4 id="示例-3："><a href="#示例-3：" class="headerlink" title="示例 3："></a>示例 3：</h4><blockquote><p><b>输入：</b>s = “A”, numRows = 1<br><b>输出：</b>“A”</p></blockquote><p>提示：</p><ul><li><p>$1 &lt;= s.length &lt;= 1000$</p></li><li><p>$s$ 由英文字母（小写和大写）、’,’ 和 ‘.’ 组成</p></li><li><p>$1 &lt;= numRows &lt;= 1000$</p></li></ul><hr><p>以下是题解：</p><h3 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路:"></a>解题思路:</h3><p>字符串 $s$ 是以 $N$ 字形为顺序存储的字符串，目标是按行打印。</p><p>设 $numRows$ 行字符串分别为 $s_1 , s_2 , … , s_n$ 则容易发现：按顺序遍历字符串 $s$ 时,每个字符 $c$ 在 $N$ 字形中对应的 <b>行索引</b> 先从 $s_1$ 增大至 $s_n$ ,再从 $s_n$ 减小至 $s_1 ……$ 如此反复。</p><p>因此解决方案为：模拟这个行索引的变化，在遍历 $s$ 中把每个字符填到正确的行 $res[i]$ 。</p><h3 id="算法流程："><a href="#算法流程：" class="headerlink" title="算法流程："></a>算法流程：</h3><p>按顺序遍历字符串 $s$ ：</p><ul><li><p>$res[i] += c：$ 把每个字符 $c$ 填入对应行 $s_i$ ；</p></li><li><p>$i += flag：$ 更新当前字符 $c$ 对应的行索引；</p></li><li><p>$flag = - flag：$ 在达到 $N$ 字形转折点时，执行反向。</p></li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">string <span class="title">convert</span><span class="params">(string s, <span class="type">int</span> numRows)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (numRows &lt; <span class="number">2</span>)</span><br><span class="line">            <span class="keyword">return</span> s;</span><br><span class="line">        <span class="function">vector&lt;string&gt; <span class="title">rows</span><span class="params">(numRows)</span></span>;</span><br><span class="line">        <span class="type">int</span> i = <span class="number">0</span>, flag = <span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">char</span> c : s) &#123;</span><br><span class="line">            rows[i].<span class="built_in">push_back</span>(c);</span><br><span class="line">            <span class="keyword">if</span> (i == <span class="number">0</span> || i == numRows <span class="number">-1</span>)</span><br><span class="line">                flag = - flag;</span><br><span class="line">            i += flag;</span><br><span class="line">        &#125;</span><br><span class="line">        string res;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">const</span> string &amp;row : rows)</span><br><span class="line">            res += row;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h4 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h4><p><a href="https://imgse.com/i/pPUJtmj"><img src="https://s1.ax1x.com/2023/08/27/pPUJtmj.png" alt="pPUJtmj.png"></a></p><p><div style="text-align:right;">本篇博客撰写于2023/8/27 16:36:23</p>]]></content>
    
    
    <summary type="html">N字形变换</summary>
    
    
    
    <category term="程序" scheme="https://www.lwt-server.cn/categories/%E7%A8%8B%E5%BA%8F/"/>
    
    
    <category term="LeetCode题解" scheme="https://www.lwt-server.cn/tags/LeetCode%E9%A2%98%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode题解——56.合并区间</title>
    <link href="https://www.lwt-server.cn/2023/08/27/LeetCode_56/"/>
    <id>https://www.lwt-server.cn/2023/08/27/LeetCode_56/</id>
    <published>2023-08-27T02:43:10.000Z</published>
    <updated>2023-08-29T05:07:33.450Z</updated>
    
    <content type="html"><![CDATA[<h1 id="LeetCode题解"><a href="#LeetCode题解" class="headerlink" title="LeetCode题解"></a>LeetCode题解</h1><h2 id="合并区间"><a href="#合并区间" class="headerlink" title="合并区间"></a>合并区间</h2><h3 id="题目预览："><a href="#题目预览：" class="headerlink" title="题目预览："></a>题目预览：</h3><p>以数组 $intervals$ 表示若干个区间的集合，其中单个区间为 $intervals[i] = [starti, endi]$ 。请你合并所有重叠的区间，并返回 一个不重叠的区间数组，该数组需恰好覆盖输入中的所有区间 。</p><h4 id="示例-1："><a href="#示例-1：" class="headerlink" title="示例 1："></a>示例 1：</h4><blockquote><p><b>输入：</b>intervals = [[1,3],[2,6],[8,10],[15,18]]<br><b>输出：</b>[[1,6],[8,10],[15,18]]<br><b>解释：</b>区间 [1,3] 和 [2,6] 重叠, 将它们合并为 [1,6]。</p></blockquote><h4 id="示例-2："><a href="#示例-2：" class="headerlink" title="示例 2："></a>示例 2：</h4><blockquote><p><b>输入：</b>intervals = [[1,4],[4,5]]<br><b>输出：</b>[[1,5]]<br><b>解释：</b>区间 [1,4] 和 [4,5] 可被视为重叠区间。</p></blockquote><p>提示：</p><ul><li>$1 &lt;= intervals.length &lt;= 10^4$</li><li>$intervals[i].length == 2$</li><li>$0 &lt;= start_i &lt;= end_i &lt;= 10^4$</li></ul><hr><p>以下是题解：</p><h3 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h3><p>先按照起点升序排列，然后比较新的起点与原有的终点之间的关系：</p><ul><li><p>若新起点包含于原有终点，则原有终点=max(原有终点，新终点)  </p></li><li><p>若新起点不包含于原有终点，则将当前范围压入ans容器，并令起点更新</p></li></ul><p>代码如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; ans;</span><br><span class="line">    <span class="type">int</span> Len = <span class="number">0</span>, Head = <span class="number">-1</span>, Tail = <span class="number">-1</span>;</span><br><span class="line">    vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; <span class="built_in">merge</span>(vector&lt;vector&lt;<span class="type">int</span>&gt;&gt;&amp; intervals) &#123;</span><br><span class="line">        Len = intervals.<span class="built_in">size</span>();</span><br><span class="line">        <span class="built_in">sort</span>(intervals.<span class="built_in">begin</span>(), intervals.<span class="built_in">end</span>(), [&amp;](<span class="type">const</span> vector&lt;<span class="type">int</span>&gt;&amp; a, <span class="type">const</span> vector&lt;<span class="type">int</span>&gt;&amp; b)-&gt;<span class="type">bool</span> &#123; <span class="keyword">return</span> a[<span class="number">0</span>] &lt; b[<span class="number">0</span>]; &#125;);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; Len; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> ((intervals[i])[<span class="number">0</span>] &gt; Tail)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (Tail != <span class="number">-1</span>)</span><br><span class="line">                    ans.<span class="built_in">push_back</span>(&#123; Head,Tail &#125;);</span><br><span class="line">                Head = (intervals[i])[<span class="number">0</span>];</span><br><span class="line">                Tail = (intervals[i])[<span class="number">1</span>];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                Tail = <span class="built_in">max</span>(Tail, (intervals[i])[<span class="number">1</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        ans.<span class="built_in">push_back</span>(&#123; Head,Tail &#125;);</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h4 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h4><p><a href="https://imgse.com/i/pPUEOkd"><img src="https://s1.ax1x.com/2023/08/27/pPUEOkd.png" alt="pPUEOkd.png"></a></p><p><div style="text-align:right;">本篇博客撰写于2023/8/27 10:43:10</p>]]></content>
    
    
    <summary type="html">合并区间</summary>
    
    
    
    <category term="程序" scheme="https://www.lwt-server.cn/categories/%E7%A8%8B%E5%BA%8F/"/>
    
    
    <category term="LeetCode题解" scheme="https://www.lwt-server.cn/tags/LeetCode%E9%A2%98%E8%A7%A3/"/>
    
    <category term="LeetCode每日一题" scheme="https://www.lwt-server.cn/tags/LeetCode%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode题解——228.汇总区间</title>
    <link href="https://www.lwt-server.cn/2023/08/26/LeetCode_228/"/>
    <id>https://www.lwt-server.cn/2023/08/26/LeetCode_228/</id>
    <published>2023-08-26T14:13:48.000Z</published>
    <updated>2023-08-29T05:10:54.918Z</updated>
    
    <content type="html"><![CDATA[<h1 id="LeetCode题解"><a href="#LeetCode题解" class="headerlink" title="LeetCode题解"></a>LeetCode题解</h1><h2 id="汇总区间"><a href="#汇总区间" class="headerlink" title="汇总区间"></a>汇总区间</h2><h3 id="题目预览："><a href="#题目预览：" class="headerlink" title="题目预览："></a>题目预览：</h3><p>给定一个 <b>无重复元素</b> 的 <b>有序</b> 整数数组 $nums$ 。</p><p>返回 <b>恰好覆盖数组中所有数字</b> 的 <b>最小有序</b> 区间范围列表 。也就是说，$nums$ 的每个元素都恰好被某个区间范围所覆盖，并且不存在属于某个范围但不属于 $nums$ 的数字 $x$ 。</p><p>列表中的每个区间范围 $[a,b]$ 应该按如下格式输出：</p><ul><li>“a-&gt;b” ，如果 $a != b$</li><li>“a” ，如果 $a == b$</li></ul><h4 id="示例-1："><a href="#示例-1：" class="headerlink" title="示例 1："></a>示例 1：</h4><blockquote><p><b>输入：</b>nums = [0,1,2,4,5,7]<br><b>输出：</b>[“0-&gt;2”,”4-&gt;5”,”7”]<br><b>解释：</b>区间范围是：<br>[0,2] —&gt; “0-&gt;2”<br>[4,5] —&gt; “4-&gt;5”<br>[7,7] —&gt; “7”</p></blockquote><h4 id="示例-2："><a href="#示例-2：" class="headerlink" title="示例 2："></a>示例 2：</h4><blockquote><p><b>输入：</b>nums = [0,2,3,4,6,8,9]<br><b>输出：</b>[“0”,”2-&gt;4”,”6”,”8-&gt;9”]<br><b>解释：</b>区间范围是：<br>[0,0] —&gt; “0”<br>[2,4] —&gt; “2-&gt;4”<br>[6,6] —&gt; “6”<br>[8,9] —&gt; “8-&gt;9”  </p></blockquote><p>提示：</p><ul><li>$0 &lt;= nums.length &lt;= 20$  </li><li>$-2^{31} &lt;= nums[i] &lt;= 2^{31} - 1$  </li><li>$nums$ 中的所有值都 互不相同  </li><li>$nums$ 按升序排列</li></ul><hr><p>以下是题解：</p><h3 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h3><p>从头开始遍历，当遇到连续数字时使$Len$增加，当遇到不同数字时根据$Len$的值处理：  </p><ul><li>$Len==1：$<br>不增加”-&gt;”，直接令$Str$为该数字</li><li>$Len&gt;1：$<br>增加”-&gt;”,令$Str$为”X-&gt;Y”型</li></ul><h4 id="编写一个函数，将整型转换成字符串"><a href="#编写一个函数，将整型转换成字符串" class="headerlink" title="编写一个函数，将整型转换成字符串:"></a>编写一个函数，将整型转换成字符串:</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">string <span class="title">intToString</span><span class="params">(<span class="type">int</span> Num)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (Num == <span class="number">-2147483648</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;-2147483648&quot;</span>;</span><br><span class="line">    <span class="type">bool</span> Key = <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">if</span> (Num &lt; <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        Num = -Num;</span><br><span class="line">        Key = <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    string temp = <span class="string">&quot;&quot;</span>, ans = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span> (Key)</span><br><span class="line">        ans += <span class="string">&quot;-&quot;</span>;</span><br><span class="line">    <span class="keyword">while</span> (Num / <span class="number">10</span> != <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        temp += <span class="built_in">char</span>(Num % <span class="number">10</span> + <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">        Num /= <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    temp += <span class="built_in">char</span>(Num + <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">    <span class="type">int</span> length = temp.<span class="built_in">length</span>();</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; length; i++)</span><br><span class="line">        ans += temp[length - i - <span class="number">1</span>];</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码:"></a>完整代码:</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    vector&lt;string&gt;ans;</span><br><span class="line">    <span class="function">string <span class="title">intToString</span><span class="params">(<span class="type">int</span> Num)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (Num == <span class="number">-2147483648</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;-2147483648&quot;</span>;</span><br><span class="line">        <span class="type">bool</span> Key = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">if</span> (Num &lt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            Num = -Num;</span><br><span class="line">            Key = <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        string temp = <span class="string">&quot;&quot;</span>, ans = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span> (Key)</span><br><span class="line">            ans += <span class="string">&quot;-&quot;</span>;</span><br><span class="line">        <span class="keyword">while</span> (Num / <span class="number">10</span> != <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            temp += <span class="built_in">char</span>(Num % <span class="number">10</span> + <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">            Num /= <span class="number">10</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        temp += <span class="built_in">char</span>(Num + <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">        <span class="type">int</span> length = temp.<span class="built_in">length</span>();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; length; i++)</span><br><span class="line">            ans += temp[length - i - <span class="number">1</span>];</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function">vector&lt;string&gt; <span class="title">summaryRanges</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; nums)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(nums.<span class="built_in">size</span>()==<span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span> &#123;&#125;;</span><br><span class="line">        <span class="type">int</span> Len = nums.<span class="built_in">size</span>(), Front = nums[<span class="number">0</span>], L = <span class="number">1</span>;</span><br><span class="line">        string Str = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        Str += <span class="built_in">intToString</span>(Front);</span><br><span class="line">        <span class="keyword">if</span> (Len == <span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            ans.<span class="built_in">push_back</span>(Str);</span><br><span class="line">            <span class="keyword">return</span> ans;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; Len; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> tmp = nums[i];</span><br><span class="line">            <span class="keyword">if</span> (tmp != Front + <span class="number">1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (L==<span class="number">1</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    Str = <span class="string">&quot;&quot;</span>;</span><br><span class="line">                    Str += <span class="built_in">intToString</span>(Front);</span><br><span class="line">                    ans.<span class="built_in">push_back</span>(Str);</span><br><span class="line">                    Str = <span class="string">&quot;&quot;</span>;</span><br><span class="line">                    Str += <span class="built_in">intToString</span>(tmp);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    Str.<span class="built_in">append</span>(<span class="string">&quot;-&gt;&quot;</span>);</span><br><span class="line">                    Str += <span class="built_in">intToString</span>(Front);</span><br><span class="line">                    ans.<span class="built_in">push_back</span>(Str);</span><br><span class="line">                    Str = <span class="string">&quot;&quot;</span>;</span><br><span class="line">                    Str += <span class="built_in">intToString</span>(tmp);</span><br><span class="line">                &#125;</span><br><span class="line">                L = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                L++;</span><br><span class="line">            &#125;</span><br><span class="line">            Front = tmp;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> temp = nums[Len - <span class="number">1</span>];</span><br><span class="line">        <span class="keyword">if</span> (L != <span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            Str.<span class="built_in">append</span>(<span class="string">&quot;-&gt;&quot;</span>);</span><br><span class="line">            Str += <span class="built_in">intToString</span>(Front);</span><br><span class="line">        &#125;</span><br><span class="line">        ans.<span class="built_in">push_back</span>(Str);</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h4 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h4><p><a href="https://imgse.com/i/pPNjlut"><img src="https://s1.ax1x.com/2023/08/26/pPNjlut.png" alt="pPNjlut.png"></a></p><p><div style="text-align:right;">本篇博客撰写于2023/8/26 22:13:48</p>]]></content>
    
    
    <summary type="html">汇总区间</summary>
    
    
    
    <category term="程序" scheme="https://www.lwt-server.cn/categories/%E7%A8%8B%E5%BA%8F/"/>
    
    
    <category term="LeetCode题解" scheme="https://www.lwt-server.cn/tags/LeetCode%E9%A2%98%E8%A7%A3/"/>
    
    <category term="LeetCode每日一题" scheme="https://www.lwt-server.cn/tags/LeetCode%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode题解——5.最长回文子串</title>
    <link href="https://www.lwt-server.cn/2023/08/26/LeetCode_5/"/>
    <id>https://www.lwt-server.cn/2023/08/26/LeetCode_5/</id>
    <published>2023-08-26T09:31:18.000Z</published>
    <updated>2023-08-30T11:08:15.244Z</updated>
    
    <content type="html"><![CDATA[<h1 id="LeetCode题解"><a href="#LeetCode题解" class="headerlink" title="LeetCode题解"></a>LeetCode题解</h1><h2 id="最长回文子串"><a href="#最长回文子串" class="headerlink" title="最长回文子串"></a>最长回文子串</h2><h3 id="题目预览："><a href="#题目预览：" class="headerlink" title="题目预览："></a>题目预览：</h3><p>给你一个字符串 $s$，找到 $s$ 中最长的回文子串。</p><p>如果字符串的反序与原始字符串相同，则该字符串称为回文字符串。</p><h4 id="示例-1："><a href="#示例-1：" class="headerlink" title="示例 1："></a>示例 1：</h4><blockquote><p><b>输入：</b>s = “babad”<br><b>输出：</b>“bab”<br><b>解释：</b>“aba” 同样是符合题意的答案。</p></blockquote><h4 id="示例-2："><a href="#示例-2：" class="headerlink" title="示例 2："></a>示例 2：</h4><blockquote><p><b>输入：</b>s = “cbbd”<br><b>输出：</b>“bb”</p></blockquote><p>提示：</p><ul><li><p>$1 &lt;= s.length &lt;= 1000$</p></li><li><p>$s$ 仅由数字和英文字母组成</p></li></ul><hr><p>以下是题解：</p><h3 id="思路-中心扩散"><a href="#思路-中心扩散" class="headerlink" title="思路:中心扩散"></a>思路:中心扩散</h3><p>本题最容易想到的一种方法应该就是 <code>中心扩散法</code>。 中心扩散法怎么去找回文串？ 从每一个位置出发，向两边扩散即可。遇到不是回文的时候结束。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">//使用双指针法</span></span><br><span class="line">    <span class="type">int</span> maxLen=<span class="number">0</span>,begin=<span class="number">0</span>;<span class="comment">//</span></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">extend</span><span class="params">(string &amp;s,<span class="type">int</span> i,<span class="type">int</span> j,<span class="type">int</span> n)</span></span>&#123;</span><br><span class="line">        <span class="keyword">while</span>(i&gt;=<span class="number">0</span>&amp;&amp;j&lt;n&amp;&amp;s[i]==s[j])&#123;<span class="comment">//只要符合条件便继续</span></span><br><span class="line">            <span class="keyword">if</span>(j-i+<span class="number">1</span>&gt;maxLen)&#123;<span class="comment">//至少要大于当前最大的那个子串才记录</span></span><br><span class="line">                maxLen=j-i+<span class="number">1</span>;</span><br><span class="line">                begin=i;         </span><br><span class="line">            &#125;</span><br><span class="line">            --i;<span class="comment">//注意在最后指针才移动</span></span><br><span class="line">            ++j;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function">string <span class="title">longestPalindrome</span><span class="params">(string s)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;s.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">            <span class="built_in">extend</span>(s,i,i,s.<span class="built_in">size</span>());<span class="comment">//以一个元素向两端扩散</span></span><br><span class="line">            <span class="built_in">extend</span>(s,i,i+<span class="number">1</span>,s.<span class="built_in">size</span>());<span class="comment">//以两个元素为中心向两端扩散（因为每次只会向两端扩散一层，所以要分为两种情况）</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> s.<span class="built_in">substr</span>(begin,maxLen);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h4 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h4><p><a href="https://imgse.com/i/pPN28KA"><img src="https://s1.ax1x.com/2023/08/26/pPN28KA.png" alt="pPN28KA.png"></a></p><p><div style="text-align:right;">本篇博客撰写于2023/8/26 17:31:18</p>]]></content>
    
    
    <summary type="html">最长回文子串</summary>
    
    
    
    <category term="程序" scheme="https://www.lwt-server.cn/categories/%E7%A8%8B%E5%BA%8F/"/>
    
    
    <category term="LeetCode题解" scheme="https://www.lwt-server.cn/tags/LeetCode%E9%A2%98%E8%A7%A3/"/>
    
  </entry>
  
</feed>
